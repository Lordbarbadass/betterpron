(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (factory());
}(this, (function () { 'use strict';

  var _isObject = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };

  var _anObject = function (it) {
    if (!_isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };

  var _fails = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };

  // Thank's IE8 for his funny defineProperty
  var _descriptors = !_fails(function () {
    return Object.defineProperty({}, 'a', {
      get: function () {
        return 7;
      }
    }).a != 7;
  });

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  var _global = createCommonjsModule(function (module) {
  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func
  : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
  });

  var document$1 = _global.document; // typeof document.createElement is 'object' in old IE


  var is = _isObject(document$1) && _isObject(document$1.createElement);

  var _domCreate = function (it) {
    return is ? document$1.createElement(it) : {};
  };

  var _ie8DomDefine = !_descriptors && !_fails(function () {
    return Object.defineProperty(_domCreate('div'), 'a', {
      get: function () {
        return 7;
      }
    }).a != 7;
  });

  // 7.1.1 ToPrimitive(input [, PreferredType])
   // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string


  var _toPrimitive = function (it, S) {
    if (!_isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };

  var dP = Object.defineProperty;
  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    _anObject(O);
    P = _toPrimitive(P, true);
    _anObject(Attributes);
    if (_ie8DomDefine) try {
      return dP(O, P, Attributes);
    } catch (e) {
      /* empty */
    }
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };

  var _objectDp = {
  	f: f
  };

  var _propertyDesc = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  var _hide = _descriptors ? function (object, key, value) {
    return _objectDp.f(object, key, _propertyDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  var hasOwnProperty = {}.hasOwnProperty;

  var _has = function (it, key) {
    return hasOwnProperty.call(it, key);
  };

  var id = 0;
  var px = Math.random();

  var _uid = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };

  var _core = createCommonjsModule(function (module) {
  var core = module.exports = {
    version: '2.5.7'
  };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
  });
  var _core_1 = _core.version;

  var _redefine = createCommonjsModule(function (module) {
  var SRC = _uid('src');

  var TO_STRING = 'toString';
  var $toString = Function[TO_STRING];
  var TPL = ('' + $toString).split(TO_STRING);

  _core.inspectSource = function (it) {
    return $toString.call(it);
  };

  (module.exports = function (O, key, val, safe) {
    var isFunction = typeof val == 'function';
    if (isFunction) _has(val, 'name') || _hide(val, 'name', key);
    if (O[key] === val) return;
    if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));

    if (O === _global) {
      O[key] = val;
    } else if (!safe) {
      delete O[key];
      _hide(O, key, val);
    } else if (O[key]) {
      O[key] = val;
    } else {
      _hide(O, key, val);
    } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative

  })(Function.prototype, TO_STRING, function toString() {
    return typeof this == 'function' && this[SRC] || $toString.call(this);
  });
  });

  // 7.2.1 RequireObjectCoercible(argument)
  var _defined = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };

  var _library = false;

  var _shared = createCommonjsModule(function (module) {
  var SHARED = '__core-js_shared__';
  var store = _global[SHARED] || (_global[SHARED] = {});
  (module.exports = function (key, value) {
    return store[key] || (store[key] = value !== undefined ? value : {});
  })('versions', []).push({
    version: _core.version,
    mode: _library ? 'pure' : 'global',
    copyright: 'Â© 2018 Denis Pushkarev (zloirock.ru)'
  });
  });

  var _wks = createCommonjsModule(function (module) {
  var store = _shared('wks');



  var Symbol = _global.Symbol;

  var USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function (name) {
    return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
  };

  $exports.store = store;
  });

  var _fixReWks = function (KEY, length, exec) {
    var SYMBOL = _wks(KEY);
    var fns = exec(_defined, SYMBOL, ''[KEY]);
    var strfn = fns[0];
    var rxfn = fns[1];

    if (_fails(function () {
      var O = {};

      O[SYMBOL] = function () {
        return 7;
      };

      return ''[KEY](O) != 7;
    })) {
      _redefine(String.prototype, KEY, strfn);
      _hide(RegExp.prototype, SYMBOL, length == 2 // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) {
        return rxfn.call(string, this, arg);
      } // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) {
        return rxfn.call(string, this);
      });
    }
  };

  // @@search logic
  _fixReWks('search', 1, function (defined, SEARCH, $search) {
    // 21.1.3.15 String.prototype.search(regexp)
    return [function search(regexp) {

      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    }, $search];
  });

  var runtime = createCommonjsModule(function (module) {
  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  !function (global) {

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined; // More compressible than void 0.

    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    var runtime = global.regeneratorRuntime;

    if (runtime) {
      {
        // If regeneratorRuntime is defined globally and we're in a module,
        // make the exports object identical to regeneratorRuntime.
        module.exports = runtime;
      } // Don't bother evaluating the rest of this file if the runtime was
      // already defined globally.


      return;
    } // Define the runtime globally (as expected by generated code) as either
    // module.exports (if we're in a module) or a new, empty object.


    runtime = global.regeneratorRuntime = module.exports;

    function wrap(innerFn, outerFn, self, tryLocsList) {
      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
      // .throw, and .return methods.

      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.

    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.


    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      // This environment has a native %IteratorPrototype%; use it instead
      // of the polyfill.
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction"; // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    runtime.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
      // do is to check its .name property.
      (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    runtime.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    }; // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.


    runtime.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return Promise.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return Promise.resolve(value).then(function (unwrapped) {
            // When a yielded Promise is resolved, its final value becomes
            // the .value of the Promise<{value,done}> result for the
            // current iteration. If the Promise is rejected, however, the
            // result for this iteration will be rejected with the same
            // reason. Note that rejections of yielded Promises are not
            // thrown back into the generator function, as is the case
            // when an awaited Promise is rejected. This difference in
            // behavior between yield and await is important, because it
            // allows the consumer to decide what to do with the yielded
            // rejection (swallow it and continue, manually .throw it back
            // into the generator, abandon iteration, whatever). With
            // await, by contrast, there is no opportunity to examine the
            // rejection reason outside the generator function, so the
            // only option is to throw it from the await expression, and
            // let the generator function handle the exception.
            result.value = unwrapped;
            resolve(result);
          }, reject);
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new Promise(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
        // invocations of the iterator.
        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      } // Define the unified helper method that is used to implement .next,
      // .throw, and .return (see defineIteratorMethods).


      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.

    runtime.async = function (innerFn, outerFn, self, tryLocsList) {
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
      return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          } // Be forgiving, per 25.3.3.3.3 of the spec:
          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            // Setting context._sent for legacy support of Babel's
            // function.sent implementation.
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            // If an exception is thrown from innerFn, we leave state ===
            // GenStateExecuting and loop back for another invocation.
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted; // Dispatch the exception by looping back around to the
            // context.dispatchException(context.arg) call above.

            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    } // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.


    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        // A .throw or .return when the delegate iterator has no .throw
        // method always terminates the yield* loop.
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator.return) {
            // If the delegate iterator has a return method, give it a
            // chance to clean up.
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              // If maybeInvokeDelegate(context) changed context.method from
              // "return" to "throw", let that override the TypeError below.
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        // Assign the result of the finished delegate to the temporary
        // variable specified by delegate.resultName (see delegateYield).
        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

        context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
        // exception, let the outer generator proceed normally. If
        // context.method was "next", forget context.arg since it has been
        // "consumed" by the delegate iterator. If context.method was
        // "return", allow the original .return call to continue in the
        // outer generator.

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        // Re-yield the result returned by the delegate method.
        return info;
      } // The delegate iterator is finished, so forget it and continue with
      // the outer generator.


      context.delegate = null;
      return ContinueSentinel;
    } // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.


    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator"; // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      // The root entry object (effectively a try statement without a catch
      // or a finally block) gives us a place to store values thrown from
      // locations where there is no enclosing try statement.
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    runtime.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse(); // Rather than returning an object with a next method, we keep
      // things simple and return the next function itself.

      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        } // To avoid creating an additional object, we just hang the .value
        // and .done properties off the next function object itself. This
        // also ensures that the minifier will not anonymize the function.


        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      } // Return an iterator with no values.


      return {
        next: doneResult
      };
    }

    runtime.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function (skipTempReset) {
        this.prev = 0;
        this.next = 0; // Resetting context._sent for legacy support of Babel's
        // function.sent implementation.

        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            // Not sure about the optimal order of these conditions:
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function () {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function (exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            // If the dispatched exception was caught by a catch block,
            // then let that catch block handle the exception normally.
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            // Exception thrown outside of any try block that could handle
            // it, so set the completion value of the entire function to
            // throw the exception.
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function (type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          // Ignore the finally entry if control is not jumping to a
          // location outside the try/catch block.
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function (record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function (finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function (tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        } // The context.catch method must only be called with a location
        // argument that corresponds to a known catch block.


        throw new Error("illegal catch attempt");
      },
      delegateYield: function (iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          // Deliberately forget the last sent value so that we don't
          // accidentally pass it on to the delegate.
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
  }( // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  function () {
    return this;
  }() || Function("return this")());
  });

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  function _asyncToGenerator(fn) {
    return function () {
      var self = this,
          args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);

        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }

        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }

  var toString = {}.toString;

  var _cof = function (it) {
    return toString.call(it).slice(8, -1);
  };

  // 7.2.8 IsRegExp(argument)




  var MATCH = _wks('match');

  var _isRegexp = function (it) {
    var isRegExp;
    return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');
  };

  // @@split logic
  _fixReWks('split', 2, function (defined, SPLIT, $split) {

    var isRegExp = _isRegexp;

    var _split = $split;
    var $push = [].push;
    var $SPLIT = 'split';
    var LENGTH = 'length';
    var LAST_INDEX = 'lastIndex';

    if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {
      var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
      // based on es5-shim implementation, need to rework it

      $split = function (separator, limit) {
        var string = String(this);
        if (separator === undefined && limit === 0) return []; // If `separator` is not a regex, use native split

        if (!isRegExp(separator)) return _split.call(string, separator, limit);
        var output = [];
        var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');
        var lastLastIndex = 0;
        var splitLimit = limit === undefined ? 4294967295 : limit >>> 0; // Make `global` and avoid `lastIndex` issues by working with a copy

        var separatorCopy = new RegExp(separator.source, flags + 'g');
        var separator2, match, lastIndex, lastLength, i; // Doesn't need flags gy, but they don't hurt

        if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);

        while (match = separatorCopy.exec(string)) {
          // `separatorCopy.lastIndex` is not reliable cross-browser
          lastIndex = match.index + match[0][LENGTH];

          if (lastIndex > lastLastIndex) {
            output.push(string.slice(lastLastIndex, match.index)); // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
            // eslint-disable-next-line no-loop-func

            if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
              for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
            });
            if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
            lastLength = match[0][LENGTH];
            lastLastIndex = lastIndex;
            if (output[LENGTH] >= splitLimit) break;
          }

          if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
        }

        if (lastLastIndex === string[LENGTH]) {
          if (lastLength || !separatorCopy.test('')) output.push('');
        } else output.push(string.slice(lastLastIndex));

        return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
      }; // Chakra, V8

    } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
      $split = function (separator, limit) {
        return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
      };
    } // 21.1.3.17 String.prototype.split(separator, limit)


    return [function split(separator, limit) {
      var O = defined(this);
      var fn = separator == undefined ? undefined : separator[SPLIT];
      return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
    }, $split];
  });

  function styleInject(css, ref) {
    if (ref === void 0) ref = {};
    var insertAt = ref.insertAt;

    if (!css || typeof document === 'undefined') {
      return;
    }

    var head = document.head || document.getElementsByTagName('head')[0];
    var style = document.createElement('style');
    style.type = 'text/css';

    if (insertAt === 'top') {
      if (head.firstChild) {
        head.insertBefore(style, head.firstChild);
      } else {
        head.appendChild(style);
      }
    } else {
      head.appendChild(style);
    }

    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
  }

  var css = "/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in\n *    IE on Windows Phone and in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n      -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Add the correct display in IE 9-.\n */\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: .67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in IE.\n */\n\nfigcaption,\nfigure,\nmain {\n  /* 1 */\n  display: block;\n}\n\n/**\n * Add the correct margin in IE 8.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  -webkit-box-sizing: content-box;\n          box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\n\na {\n  background-color: transparent; /* 1 */\n  -webkit-text-decoration-skip: objects; /* 2 */\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57- and Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font style in Android 4.3-.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Add the correct background and color in IE 9-.\n */\n\nmark {\n  background-color: #ff0;\n  color: #000;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\naudio,\nvideo {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in iOS 4-7.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\n\nimg {\n  border-style: none;\n}\n\n/**\n * Hide the overflow in IE.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: sans-serif; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\nhtml [type=\"button\"],\n/* 1 */\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: .35em .75em .625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * 1. Add the correct display in IE 9-.\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n */\n\ndetails,\n/* 1 */\nmenu {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Scripting\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\ncanvas {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in IE.\n */\n\ntemplate {\n  display: none;\n}\n\n/* Hidden\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10-.\n */\n\n[hidden] {\n  display: none;\n}\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * 1. Prevent padding and border from affecting element width\n * https://goo.gl/pYtbK7\n * 2. Change the default font family in all browsers (opinionated)\n */\n\nhtml {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; /* 1 */\n  font-family: sans-serif; /* 2 */\n}\n\n*,\n*::before,\n*::after {\n  -webkit-box-sizing: inherit;\n          box-sizing: inherit;\n}\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background: transparent;\n  padding: 0;\n}\n\n/**\n * Work around a Firefox/IE bug where the transparent `button` background\n * results in a loss of the default `button` focus styles.\n */\n\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  margin: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * Allow adding a border to an element by just adding a border-width.\n *\n * By default, the way the browser specifies that an element should have no\n * border is by setting it's border-style to `none` in the user-agent\n * stylesheet.\n *\n * In order to easily add borders to elements by just setting the `border-width`\n * property, we change the default border-style for all elements to `solid`, and\n * use border-width to hide them instead. This way our `border` utilities only\n * need to set the `border-width` property instead of the entire `border`\n * shorthand, making our border utilities much more straightforward to compose.\n *\n * https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n*::before,\n*::after {\n  border-width: 0;\n  border-style: solid;\n  border-color: #dae1e7;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\n/**\n * Temporary reset for a change introduced in Chrome 62 but now reverted.\n *\n * We can remove this when the reversion is in a normal Chrome release.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  border-radius: 0;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n}\n\ninput::-webkit-input-placeholder,\ntextarea::-webkit-input-placeholder {\n  color: inherit;\n  opacity: .5;\n}\n\ninput:-ms-input-placeholder,\ntextarea:-ms-input-placeholder {\n  color: inherit;\n  opacity: .5;\n}\n\ninput::-ms-input-placeholder,\ntextarea::-ms-input-placeholder {\n  color: inherit;\n  opacity: .5;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  color: inherit;\n  opacity: .5;\n}\n\nbutton,\n[role=button] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 576px) {\n  .container {\n    max-width: 576px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 992px) {\n  .container {\n    max-width: 992px;\n  }\n}\n\n@media (min-width: 1200px) {\n  .container {\n    max-width: 1200px;\n  }\n}\n\n.list-reset {\n  list-style: none;\n  padding: 0;\n}\n\n.appearance-none {\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n}\n\n.bg-fixed {\n  background-attachment: fixed;\n}\n\n.bg-local {\n  background-attachment: local;\n}\n\n.bg-scroll {\n  background-attachment: scroll;\n}\n\n.bg-transparent {\n  background-color: transparent;\n}\n\n.bg-black {\n  background-color: #22292f;\n}\n\n.bg-grey-darkest {\n  background-color: #3d4852;\n}\n\n.bg-grey-darker {\n  background-color: #606f7b;\n}\n\n.bg-grey-dark {\n  background-color: #8795a1;\n}\n\n.bg-grey {\n  background-color: #b8c2cc;\n}\n\n.bg-grey-light {\n  background-color: #dae1e7;\n}\n\n.bg-grey-lighter {\n  background-color: #f1f5f8;\n}\n\n.bg-grey-lightest {\n  background-color: #f8fafc;\n}\n\n.bg-white {\n  background-color: #fff;\n}\n\n.bg-red-darkest {\n  background-color: #3b0d0c;\n}\n\n.bg-red-darker {\n  background-color: #621b18;\n}\n\n.bg-red-dark {\n  background-color: #cc1f1a;\n}\n\n.bg-red {\n  background-color: #e3342f;\n}\n\n.bg-red-light {\n  background-color: #ef5753;\n}\n\n.bg-red-lighter {\n  background-color: #f9acaa;\n}\n\n.bg-red-lightest {\n  background-color: #fcebea;\n}\n\n.bg-orange-darkest {\n  background-color: #462a16;\n}\n\n.bg-orange-darker {\n  background-color: #613b1f;\n}\n\n.bg-orange-dark {\n  background-color: #de751f;\n}\n\n.bg-orange {\n  background-color: #f6993f;\n}\n\n.bg-orange-light {\n  background-color: #faad63;\n}\n\n.bg-orange-lighter {\n  background-color: #fcd9b6;\n}\n\n.bg-orange-lightest {\n  background-color: #fff5eb;\n}\n\n.bg-yellow-darkest {\n  background-color: #453411;\n}\n\n.bg-yellow-darker {\n  background-color: #684f1d;\n}\n\n.bg-yellow-dark {\n  background-color: #f2d024;\n}\n\n.bg-yellow {\n  background-color: #ffed4a;\n}\n\n.bg-yellow-light {\n  background-color: #fff382;\n}\n\n.bg-yellow-lighter {\n  background-color: #fff9c2;\n}\n\n.bg-yellow-lightest {\n  background-color: #fcfbeb;\n}\n\n.bg-green-darkest {\n  background-color: #0f2f21;\n}\n\n.bg-green-darker {\n  background-color: #1a4731;\n}\n\n.bg-green-dark {\n  background-color: #1f9d55;\n}\n\n.bg-green {\n  background-color: #38c172;\n}\n\n.bg-green-light {\n  background-color: #51d88a;\n}\n\n.bg-green-lighter {\n  background-color: #a2f5bf;\n}\n\n.bg-green-lightest {\n  background-color: #e3fcec;\n}\n\n.bg-teal-darkest {\n  background-color: #0d3331;\n}\n\n.bg-teal-darker {\n  background-color: #20504f;\n}\n\n.bg-teal-dark {\n  background-color: #38a89d;\n}\n\n.bg-teal {\n  background-color: #4dc0b5;\n}\n\n.bg-teal-light {\n  background-color: #64d5ca;\n}\n\n.bg-teal-lighter {\n  background-color: #a0f0ed;\n}\n\n.bg-teal-lightest {\n  background-color: #e8fffe;\n}\n\n.bg-blue-darkest {\n  background-color: #12283a;\n}\n\n.bg-blue-darker {\n  background-color: #1c3d5a;\n}\n\n.bg-blue-dark {\n  background-color: #2779bd;\n}\n\n.bg-blue {\n  background-color: #3490dc;\n}\n\n.bg-blue-light {\n  background-color: #6cb2eb;\n}\n\n.bg-blue-lighter {\n  background-color: #bcdefa;\n}\n\n.bg-blue-lightest {\n  background-color: #eff8ff;\n}\n\n.bg-indigo-darkest {\n  background-color: #191e38;\n}\n\n.bg-indigo-darker {\n  background-color: #2f365f;\n}\n\n.bg-indigo-dark {\n  background-color: #5661b3;\n}\n\n.bg-indigo {\n  background-color: #6574cd;\n}\n\n.bg-indigo-light {\n  background-color: #7886d7;\n}\n\n.bg-indigo-lighter {\n  background-color: #b2b7ff;\n}\n\n.bg-indigo-lightest {\n  background-color: #e6e8ff;\n}\n\n.bg-purple-darkest {\n  background-color: #21183c;\n}\n\n.bg-purple-darker {\n  background-color: #382b5f;\n}\n\n.bg-purple-dark {\n  background-color: #794acf;\n}\n\n.bg-purple {\n  background-color: #9561e2;\n}\n\n.bg-purple-light {\n  background-color: #a779e9;\n}\n\n.bg-purple-lighter {\n  background-color: #d6bbfc;\n}\n\n.bg-purple-lightest {\n  background-color: #f3ebff;\n}\n\n.bg-pink-darkest {\n  background-color: #451225;\n}\n\n.bg-pink-darker {\n  background-color: #6f213f;\n}\n\n.bg-pink-dark {\n  background-color: #eb5286;\n}\n\n.bg-pink {\n  background-color: #f66d9b;\n}\n\n.bg-pink-light {\n  background-color: #fa7ea8;\n}\n\n.bg-pink-lighter {\n  background-color: #ffbbca;\n}\n\n.bg-pink-lightest {\n  background-color: #ffebef;\n}\n\n.hover\\:bg-transparent:hover {\n  background-color: transparent;\n}\n\n.hover\\:bg-black:hover {\n  background-color: #22292f;\n}\n\n.hover\\:bg-grey-darkest:hover {\n  background-color: #3d4852;\n}\n\n.hover\\:bg-grey-darker:hover {\n  background-color: #606f7b;\n}\n\n.hover\\:bg-grey-dark:hover {\n  background-color: #8795a1;\n}\n\n.hover\\:bg-grey:hover {\n  background-color: #b8c2cc;\n}\n\n.hover\\:bg-grey-light:hover {\n  background-color: #dae1e7;\n}\n\n.hover\\:bg-grey-lighter:hover {\n  background-color: #f1f5f8;\n}\n\n.hover\\:bg-grey-lightest:hover {\n  background-color: #f8fafc;\n}\n\n.hover\\:bg-white:hover {\n  background-color: #fff;\n}\n\n.hover\\:bg-red-darkest:hover {\n  background-color: #3b0d0c;\n}\n\n.hover\\:bg-red-darker:hover {\n  background-color: #621b18;\n}\n\n.hover\\:bg-red-dark:hover {\n  background-color: #cc1f1a;\n}\n\n.hover\\:bg-red:hover {\n  background-color: #e3342f;\n}\n\n.hover\\:bg-red-light:hover {\n  background-color: #ef5753;\n}\n\n.hover\\:bg-red-lighter:hover {\n  background-color: #f9acaa;\n}\n\n.hover\\:bg-red-lightest:hover {\n  background-color: #fcebea;\n}\n\n.hover\\:bg-orange-darkest:hover {\n  background-color: #462a16;\n}\n\n.hover\\:bg-orange-darker:hover {\n  background-color: #613b1f;\n}\n\n.hover\\:bg-orange-dark:hover {\n  background-color: #de751f;\n}\n\n.hover\\:bg-orange:hover {\n  background-color: #f6993f;\n}\n\n.hover\\:bg-orange-light:hover {\n  background-color: #faad63;\n}\n\n.hover\\:bg-orange-lighter:hover {\n  background-color: #fcd9b6;\n}\n\n.hover\\:bg-orange-lightest:hover {\n  background-color: #fff5eb;\n}\n\n.hover\\:bg-yellow-darkest:hover {\n  background-color: #453411;\n}\n\n.hover\\:bg-yellow-darker:hover {\n  background-color: #684f1d;\n}\n\n.hover\\:bg-yellow-dark:hover {\n  background-color: #f2d024;\n}\n\n.hover\\:bg-yellow:hover {\n  background-color: #ffed4a;\n}\n\n.hover\\:bg-yellow-light:hover {\n  background-color: #fff382;\n}\n\n.hover\\:bg-yellow-lighter:hover {\n  background-color: #fff9c2;\n}\n\n.hover\\:bg-yellow-lightest:hover {\n  background-color: #fcfbeb;\n}\n\n.hover\\:bg-green-darkest:hover {\n  background-color: #0f2f21;\n}\n\n.hover\\:bg-green-darker:hover {\n  background-color: #1a4731;\n}\n\n.hover\\:bg-green-dark:hover {\n  background-color: #1f9d55;\n}\n\n.hover\\:bg-green:hover {\n  background-color: #38c172;\n}\n\n.hover\\:bg-green-light:hover {\n  background-color: #51d88a;\n}\n\n.hover\\:bg-green-lighter:hover {\n  background-color: #a2f5bf;\n}\n\n.hover\\:bg-green-lightest:hover {\n  background-color: #e3fcec;\n}\n\n.hover\\:bg-teal-darkest:hover {\n  background-color: #0d3331;\n}\n\n.hover\\:bg-teal-darker:hover {\n  background-color: #20504f;\n}\n\n.hover\\:bg-teal-dark:hover {\n  background-color: #38a89d;\n}\n\n.hover\\:bg-teal:hover {\n  background-color: #4dc0b5;\n}\n\n.hover\\:bg-teal-light:hover {\n  background-color: #64d5ca;\n}\n\n.hover\\:bg-teal-lighter:hover {\n  background-color: #a0f0ed;\n}\n\n.hover\\:bg-teal-lightest:hover {\n  background-color: #e8fffe;\n}\n\n.hover\\:bg-blue-darkest:hover {\n  background-color: #12283a;\n}\n\n.hover\\:bg-blue-darker:hover {\n  background-color: #1c3d5a;\n}\n\n.hover\\:bg-blue-dark:hover {\n  background-color: #2779bd;\n}\n\n.hover\\:bg-blue:hover {\n  background-color: #3490dc;\n}\n\n.hover\\:bg-blue-light:hover {\n  background-color: #6cb2eb;\n}\n\n.hover\\:bg-blue-lighter:hover {\n  background-color: #bcdefa;\n}\n\n.hover\\:bg-blue-lightest:hover {\n  background-color: #eff8ff;\n}\n\n.hover\\:bg-indigo-darkest:hover {\n  background-color: #191e38;\n}\n\n.hover\\:bg-indigo-darker:hover {\n  background-color: #2f365f;\n}\n\n.hover\\:bg-indigo-dark:hover {\n  background-color: #5661b3;\n}\n\n.hover\\:bg-indigo:hover {\n  background-color: #6574cd;\n}\n\n.hover\\:bg-indigo-light:hover {\n  background-color: #7886d7;\n}\n\n.hover\\:bg-indigo-lighter:hover {\n  background-color: #b2b7ff;\n}\n\n.hover\\:bg-indigo-lightest:hover {\n  background-color: #e6e8ff;\n}\n\n.hover\\:bg-purple-darkest:hover {\n  background-color: #21183c;\n}\n\n.hover\\:bg-purple-darker:hover {\n  background-color: #382b5f;\n}\n\n.hover\\:bg-purple-dark:hover {\n  background-color: #794acf;\n}\n\n.hover\\:bg-purple:hover {\n  background-color: #9561e2;\n}\n\n.hover\\:bg-purple-light:hover {\n  background-color: #a779e9;\n}\n\n.hover\\:bg-purple-lighter:hover {\n  background-color: #d6bbfc;\n}\n\n.hover\\:bg-purple-lightest:hover {\n  background-color: #f3ebff;\n}\n\n.hover\\:bg-pink-darkest:hover {\n  background-color: #451225;\n}\n\n.hover\\:bg-pink-darker:hover {\n  background-color: #6f213f;\n}\n\n.hover\\:bg-pink-dark:hover {\n  background-color: #eb5286;\n}\n\n.hover\\:bg-pink:hover {\n  background-color: #f66d9b;\n}\n\n.hover\\:bg-pink-light:hover {\n  background-color: #fa7ea8;\n}\n\n.hover\\:bg-pink-lighter:hover {\n  background-color: #ffbbca;\n}\n\n.hover\\:bg-pink-lightest:hover {\n  background-color: #ffebef;\n}\n\n.focus\\:bg-transparent:focus {\n  background-color: transparent;\n}\n\n.focus\\:bg-black:focus {\n  background-color: #22292f;\n}\n\n.focus\\:bg-grey-darkest:focus {\n  background-color: #3d4852;\n}\n\n.focus\\:bg-grey-darker:focus {\n  background-color: #606f7b;\n}\n\n.focus\\:bg-grey-dark:focus {\n  background-color: #8795a1;\n}\n\n.focus\\:bg-grey:focus {\n  background-color: #b8c2cc;\n}\n\n.focus\\:bg-grey-light:focus {\n  background-color: #dae1e7;\n}\n\n.focus\\:bg-grey-lighter:focus {\n  background-color: #f1f5f8;\n}\n\n.focus\\:bg-grey-lightest:focus {\n  background-color: #f8fafc;\n}\n\n.focus\\:bg-white:focus {\n  background-color: #fff;\n}\n\n.focus\\:bg-red-darkest:focus {\n  background-color: #3b0d0c;\n}\n\n.focus\\:bg-red-darker:focus {\n  background-color: #621b18;\n}\n\n.focus\\:bg-red-dark:focus {\n  background-color: #cc1f1a;\n}\n\n.focus\\:bg-red:focus {\n  background-color: #e3342f;\n}\n\n.focus\\:bg-red-light:focus {\n  background-color: #ef5753;\n}\n\n.focus\\:bg-red-lighter:focus {\n  background-color: #f9acaa;\n}\n\n.focus\\:bg-red-lightest:focus {\n  background-color: #fcebea;\n}\n\n.focus\\:bg-orange-darkest:focus {\n  background-color: #462a16;\n}\n\n.focus\\:bg-orange-darker:focus {\n  background-color: #613b1f;\n}\n\n.focus\\:bg-orange-dark:focus {\n  background-color: #de751f;\n}\n\n.focus\\:bg-orange:focus {\n  background-color: #f6993f;\n}\n\n.focus\\:bg-orange-light:focus {\n  background-color: #faad63;\n}\n\n.focus\\:bg-orange-lighter:focus {\n  background-color: #fcd9b6;\n}\n\n.focus\\:bg-orange-lightest:focus {\n  background-color: #fff5eb;\n}\n\n.focus\\:bg-yellow-darkest:focus {\n  background-color: #453411;\n}\n\n.focus\\:bg-yellow-darker:focus {\n  background-color: #684f1d;\n}\n\n.focus\\:bg-yellow-dark:focus {\n  background-color: #f2d024;\n}\n\n.focus\\:bg-yellow:focus {\n  background-color: #ffed4a;\n}\n\n.focus\\:bg-yellow-light:focus {\n  background-color: #fff382;\n}\n\n.focus\\:bg-yellow-lighter:focus {\n  background-color: #fff9c2;\n}\n\n.focus\\:bg-yellow-lightest:focus {\n  background-color: #fcfbeb;\n}\n\n.focus\\:bg-green-darkest:focus {\n  background-color: #0f2f21;\n}\n\n.focus\\:bg-green-darker:focus {\n  background-color: #1a4731;\n}\n\n.focus\\:bg-green-dark:focus {\n  background-color: #1f9d55;\n}\n\n.focus\\:bg-green:focus {\n  background-color: #38c172;\n}\n\n.focus\\:bg-green-light:focus {\n  background-color: #51d88a;\n}\n\n.focus\\:bg-green-lighter:focus {\n  background-color: #a2f5bf;\n}\n\n.focus\\:bg-green-lightest:focus {\n  background-color: #e3fcec;\n}\n\n.focus\\:bg-teal-darkest:focus {\n  background-color: #0d3331;\n}\n\n.focus\\:bg-teal-darker:focus {\n  background-color: #20504f;\n}\n\n.focus\\:bg-teal-dark:focus {\n  background-color: #38a89d;\n}\n\n.focus\\:bg-teal:focus {\n  background-color: #4dc0b5;\n}\n\n.focus\\:bg-teal-light:focus {\n  background-color: #64d5ca;\n}\n\n.focus\\:bg-teal-lighter:focus {\n  background-color: #a0f0ed;\n}\n\n.focus\\:bg-teal-lightest:focus {\n  background-color: #e8fffe;\n}\n\n.focus\\:bg-blue-darkest:focus {\n  background-color: #12283a;\n}\n\n.focus\\:bg-blue-darker:focus {\n  background-color: #1c3d5a;\n}\n\n.focus\\:bg-blue-dark:focus {\n  background-color: #2779bd;\n}\n\n.focus\\:bg-blue:focus {\n  background-color: #3490dc;\n}\n\n.focus\\:bg-blue-light:focus {\n  background-color: #6cb2eb;\n}\n\n.focus\\:bg-blue-lighter:focus {\n  background-color: #bcdefa;\n}\n\n.focus\\:bg-blue-lightest:focus {\n  background-color: #eff8ff;\n}\n\n.focus\\:bg-indigo-darkest:focus {\n  background-color: #191e38;\n}\n\n.focus\\:bg-indigo-darker:focus {\n  background-color: #2f365f;\n}\n\n.focus\\:bg-indigo-dark:focus {\n  background-color: #5661b3;\n}\n\n.focus\\:bg-indigo:focus {\n  background-color: #6574cd;\n}\n\n.focus\\:bg-indigo-light:focus {\n  background-color: #7886d7;\n}\n\n.focus\\:bg-indigo-lighter:focus {\n  background-color: #b2b7ff;\n}\n\n.focus\\:bg-indigo-lightest:focus {\n  background-color: #e6e8ff;\n}\n\n.focus\\:bg-purple-darkest:focus {\n  background-color: #21183c;\n}\n\n.focus\\:bg-purple-darker:focus {\n  background-color: #382b5f;\n}\n\n.focus\\:bg-purple-dark:focus {\n  background-color: #794acf;\n}\n\n.focus\\:bg-purple:focus {\n  background-color: #9561e2;\n}\n\n.focus\\:bg-purple-light:focus {\n  background-color: #a779e9;\n}\n\n.focus\\:bg-purple-lighter:focus {\n  background-color: #d6bbfc;\n}\n\n.focus\\:bg-purple-lightest:focus {\n  background-color: #f3ebff;\n}\n\n.focus\\:bg-pink-darkest:focus {\n  background-color: #451225;\n}\n\n.focus\\:bg-pink-darker:focus {\n  background-color: #6f213f;\n}\n\n.focus\\:bg-pink-dark:focus {\n  background-color: #eb5286;\n}\n\n.focus\\:bg-pink:focus {\n  background-color: #f66d9b;\n}\n\n.focus\\:bg-pink-light:focus {\n  background-color: #fa7ea8;\n}\n\n.focus\\:bg-pink-lighter:focus {\n  background-color: #ffbbca;\n}\n\n.focus\\:bg-pink-lightest:focus {\n  background-color: #ffebef;\n}\n\n.bg-bottom {\n  background-position: bottom;\n}\n\n.bg-center {\n  background-position: center;\n}\n\n.bg-left {\n  background-position: left;\n}\n\n.bg-left-bottom {\n  background-position: left bottom;\n}\n\n.bg-left-top {\n  background-position: left top;\n}\n\n.bg-right {\n  background-position: right;\n}\n\n.bg-right-bottom {\n  background-position: right bottom;\n}\n\n.bg-right-top {\n  background-position: right top;\n}\n\n.bg-top {\n  background-position: top;\n}\n\n.bg-repeat {\n  background-repeat: repeat;\n}\n\n.bg-no-repeat {\n  background-repeat: no-repeat;\n}\n\n.bg-repeat-x {\n  background-repeat: repeat-x;\n}\n\n.bg-repeat-y {\n  background-repeat: repeat-y;\n}\n\n.bg-auto {\n  background-size: auto;\n}\n\n.bg-cover {\n  background-size: cover;\n}\n\n.bg-contain {\n  background-size: contain;\n}\n\n.border-collapse {\n  border-collapse: collapse;\n}\n\n.border-separate {\n  border-collapse: separate;\n}\n\n.border-transparent {\n  border-color: transparent;\n}\n\n.border-black {\n  border-color: #22292f;\n}\n\n.border-grey-darkest {\n  border-color: #3d4852;\n}\n\n.border-grey-darker {\n  border-color: #606f7b;\n}\n\n.border-grey-dark {\n  border-color: #8795a1;\n}\n\n.border-grey {\n  border-color: #b8c2cc;\n}\n\n.border-grey-light {\n  border-color: #dae1e7;\n}\n\n.border-grey-lighter {\n  border-color: #f1f5f8;\n}\n\n.border-grey-lightest {\n  border-color: #f8fafc;\n}\n\n.border-white {\n  border-color: #fff;\n}\n\n.border-red-darkest {\n  border-color: #3b0d0c;\n}\n\n.border-red-darker {\n  border-color: #621b18;\n}\n\n.border-red-dark {\n  border-color: #cc1f1a;\n}\n\n.border-red {\n  border-color: #e3342f;\n}\n\n.border-red-light {\n  border-color: #ef5753;\n}\n\n.border-red-lighter {\n  border-color: #f9acaa;\n}\n\n.border-red-lightest {\n  border-color: #fcebea;\n}\n\n.border-orange-darkest {\n  border-color: #462a16;\n}\n\n.border-orange-darker {\n  border-color: #613b1f;\n}\n\n.border-orange-dark {\n  border-color: #de751f;\n}\n\n.border-orange {\n  border-color: #f6993f;\n}\n\n.border-orange-light {\n  border-color: #faad63;\n}\n\n.border-orange-lighter {\n  border-color: #fcd9b6;\n}\n\n.border-orange-lightest {\n  border-color: #fff5eb;\n}\n\n.border-yellow-darkest {\n  border-color: #453411;\n}\n\n.border-yellow-darker {\n  border-color: #684f1d;\n}\n\n.border-yellow-dark {\n  border-color: #f2d024;\n}\n\n.border-yellow {\n  border-color: #ffed4a;\n}\n\n.border-yellow-light {\n  border-color: #fff382;\n}\n\n.border-yellow-lighter {\n  border-color: #fff9c2;\n}\n\n.border-yellow-lightest {\n  border-color: #fcfbeb;\n}\n\n.border-green-darkest {\n  border-color: #0f2f21;\n}\n\n.border-green-darker {\n  border-color: #1a4731;\n}\n\n.border-green-dark {\n  border-color: #1f9d55;\n}\n\n.border-green {\n  border-color: #38c172;\n}\n\n.border-green-light {\n  border-color: #51d88a;\n}\n\n.border-green-lighter {\n  border-color: #a2f5bf;\n}\n\n.border-green-lightest {\n  border-color: #e3fcec;\n}\n\n.border-teal-darkest {\n  border-color: #0d3331;\n}\n\n.border-teal-darker {\n  border-color: #20504f;\n}\n\n.border-teal-dark {\n  border-color: #38a89d;\n}\n\n.border-teal {\n  border-color: #4dc0b5;\n}\n\n.border-teal-light {\n  border-color: #64d5ca;\n}\n\n.border-teal-lighter {\n  border-color: #a0f0ed;\n}\n\n.border-teal-lightest {\n  border-color: #e8fffe;\n}\n\n.border-blue-darkest {\n  border-color: #12283a;\n}\n\n.border-blue-darker {\n  border-color: #1c3d5a;\n}\n\n.border-blue-dark {\n  border-color: #2779bd;\n}\n\n.border-blue {\n  border-color: #3490dc;\n}\n\n.border-blue-light {\n  border-color: #6cb2eb;\n}\n\n.border-blue-lighter {\n  border-color: #bcdefa;\n}\n\n.border-blue-lightest {\n  border-color: #eff8ff;\n}\n\n.border-indigo-darkest {\n  border-color: #191e38;\n}\n\n.border-indigo-darker {\n  border-color: #2f365f;\n}\n\n.border-indigo-dark {\n  border-color: #5661b3;\n}\n\n.border-indigo {\n  border-color: #6574cd;\n}\n\n.border-indigo-light {\n  border-color: #7886d7;\n}\n\n.border-indigo-lighter {\n  border-color: #b2b7ff;\n}\n\n.border-indigo-lightest {\n  border-color: #e6e8ff;\n}\n\n.border-purple-darkest {\n  border-color: #21183c;\n}\n\n.border-purple-darker {\n  border-color: #382b5f;\n}\n\n.border-purple-dark {\n  border-color: #794acf;\n}\n\n.border-purple {\n  border-color: #9561e2;\n}\n\n.border-purple-light {\n  border-color: #a779e9;\n}\n\n.border-purple-lighter {\n  border-color: #d6bbfc;\n}\n\n.border-purple-lightest {\n  border-color: #f3ebff;\n}\n\n.border-pink-darkest {\n  border-color: #451225;\n}\n\n.border-pink-darker {\n  border-color: #6f213f;\n}\n\n.border-pink-dark {\n  border-color: #eb5286;\n}\n\n.border-pink {\n  border-color: #f66d9b;\n}\n\n.border-pink-light {\n  border-color: #fa7ea8;\n}\n\n.border-pink-lighter {\n  border-color: #ffbbca;\n}\n\n.border-pink-lightest {\n  border-color: #ffebef;\n}\n\n.hover\\:border-transparent:hover {\n  border-color: transparent;\n}\n\n.hover\\:border-black:hover {\n  border-color: #22292f;\n}\n\n.hover\\:border-grey-darkest:hover {\n  border-color: #3d4852;\n}\n\n.hover\\:border-grey-darker:hover {\n  border-color: #606f7b;\n}\n\n.hover\\:border-grey-dark:hover {\n  border-color: #8795a1;\n}\n\n.hover\\:border-grey:hover {\n  border-color: #b8c2cc;\n}\n\n.hover\\:border-grey-light:hover {\n  border-color: #dae1e7;\n}\n\n.hover\\:border-grey-lighter:hover {\n  border-color: #f1f5f8;\n}\n\n.hover\\:border-grey-lightest:hover {\n  border-color: #f8fafc;\n}\n\n.hover\\:border-white:hover {\n  border-color: #fff;\n}\n\n.hover\\:border-red-darkest:hover {\n  border-color: #3b0d0c;\n}\n\n.hover\\:border-red-darker:hover {\n  border-color: #621b18;\n}\n\n.hover\\:border-red-dark:hover {\n  border-color: #cc1f1a;\n}\n\n.hover\\:border-red:hover {\n  border-color: #e3342f;\n}\n\n.hover\\:border-red-light:hover {\n  border-color: #ef5753;\n}\n\n.hover\\:border-red-lighter:hover {\n  border-color: #f9acaa;\n}\n\n.hover\\:border-red-lightest:hover {\n  border-color: #fcebea;\n}\n\n.hover\\:border-orange-darkest:hover {\n  border-color: #462a16;\n}\n\n.hover\\:border-orange-darker:hover {\n  border-color: #613b1f;\n}\n\n.hover\\:border-orange-dark:hover {\n  border-color: #de751f;\n}\n\n.hover\\:border-orange:hover {\n  border-color: #f6993f;\n}\n\n.hover\\:border-orange-light:hover {\n  border-color: #faad63;\n}\n\n.hover\\:border-orange-lighter:hover {\n  border-color: #fcd9b6;\n}\n\n.hover\\:border-orange-lightest:hover {\n  border-color: #fff5eb;\n}\n\n.hover\\:border-yellow-darkest:hover {\n  border-color: #453411;\n}\n\n.hover\\:border-yellow-darker:hover {\n  border-color: #684f1d;\n}\n\n.hover\\:border-yellow-dark:hover {\n  border-color: #f2d024;\n}\n\n.hover\\:border-yellow:hover {\n  border-color: #ffed4a;\n}\n\n.hover\\:border-yellow-light:hover {\n  border-color: #fff382;\n}\n\n.hover\\:border-yellow-lighter:hover {\n  border-color: #fff9c2;\n}\n\n.hover\\:border-yellow-lightest:hover {\n  border-color: #fcfbeb;\n}\n\n.hover\\:border-green-darkest:hover {\n  border-color: #0f2f21;\n}\n\n.hover\\:border-green-darker:hover {\n  border-color: #1a4731;\n}\n\n.hover\\:border-green-dark:hover {\n  border-color: #1f9d55;\n}\n\n.hover\\:border-green:hover {\n  border-color: #38c172;\n}\n\n.hover\\:border-green-light:hover {\n  border-color: #51d88a;\n}\n\n.hover\\:border-green-lighter:hover {\n  border-color: #a2f5bf;\n}\n\n.hover\\:border-green-lightest:hover {\n  border-color: #e3fcec;\n}\n\n.hover\\:border-teal-darkest:hover {\n  border-color: #0d3331;\n}\n\n.hover\\:border-teal-darker:hover {\n  border-color: #20504f;\n}\n\n.hover\\:border-teal-dark:hover {\n  border-color: #38a89d;\n}\n\n.hover\\:border-teal:hover {\n  border-color: #4dc0b5;\n}\n\n.hover\\:border-teal-light:hover {\n  border-color: #64d5ca;\n}\n\n.hover\\:border-teal-lighter:hover {\n  border-color: #a0f0ed;\n}\n\n.hover\\:border-teal-lightest:hover {\n  border-color: #e8fffe;\n}\n\n.hover\\:border-blue-darkest:hover {\n  border-color: #12283a;\n}\n\n.hover\\:border-blue-darker:hover {\n  border-color: #1c3d5a;\n}\n\n.hover\\:border-blue-dark:hover {\n  border-color: #2779bd;\n}\n\n.hover\\:border-blue:hover {\n  border-color: #3490dc;\n}\n\n.hover\\:border-blue-light:hover {\n  border-color: #6cb2eb;\n}\n\n.hover\\:border-blue-lighter:hover {\n  border-color: #bcdefa;\n}\n\n.hover\\:border-blue-lightest:hover {\n  border-color: #eff8ff;\n}\n\n.hover\\:border-indigo-darkest:hover {\n  border-color: #191e38;\n}\n\n.hover\\:border-indigo-darker:hover {\n  border-color: #2f365f;\n}\n\n.hover\\:border-indigo-dark:hover {\n  border-color: #5661b3;\n}\n\n.hover\\:border-indigo:hover {\n  border-color: #6574cd;\n}\n\n.hover\\:border-indigo-light:hover {\n  border-color: #7886d7;\n}\n\n.hover\\:border-indigo-lighter:hover {\n  border-color: #b2b7ff;\n}\n\n.hover\\:border-indigo-lightest:hover {\n  border-color: #e6e8ff;\n}\n\n.hover\\:border-purple-darkest:hover {\n  border-color: #21183c;\n}\n\n.hover\\:border-purple-darker:hover {\n  border-color: #382b5f;\n}\n\n.hover\\:border-purple-dark:hover {\n  border-color: #794acf;\n}\n\n.hover\\:border-purple:hover {\n  border-color: #9561e2;\n}\n\n.hover\\:border-purple-light:hover {\n  border-color: #a779e9;\n}\n\n.hover\\:border-purple-lighter:hover {\n  border-color: #d6bbfc;\n}\n\n.hover\\:border-purple-lightest:hover {\n  border-color: #f3ebff;\n}\n\n.hover\\:border-pink-darkest:hover {\n  border-color: #451225;\n}\n\n.hover\\:border-pink-darker:hover {\n  border-color: #6f213f;\n}\n\n.hover\\:border-pink-dark:hover {\n  border-color: #eb5286;\n}\n\n.hover\\:border-pink:hover {\n  border-color: #f66d9b;\n}\n\n.hover\\:border-pink-light:hover {\n  border-color: #fa7ea8;\n}\n\n.hover\\:border-pink-lighter:hover {\n  border-color: #ffbbca;\n}\n\n.hover\\:border-pink-lightest:hover {\n  border-color: #ffebef;\n}\n\n.focus\\:border-transparent:focus {\n  border-color: transparent;\n}\n\n.focus\\:border-black:focus {\n  border-color: #22292f;\n}\n\n.focus\\:border-grey-darkest:focus {\n  border-color: #3d4852;\n}\n\n.focus\\:border-grey-darker:focus {\n  border-color: #606f7b;\n}\n\n.focus\\:border-grey-dark:focus {\n  border-color: #8795a1;\n}\n\n.focus\\:border-grey:focus {\n  border-color: #b8c2cc;\n}\n\n.focus\\:border-grey-light:focus {\n  border-color: #dae1e7;\n}\n\n.focus\\:border-grey-lighter:focus {\n  border-color: #f1f5f8;\n}\n\n.focus\\:border-grey-lightest:focus {\n  border-color: #f8fafc;\n}\n\n.focus\\:border-white:focus {\n  border-color: #fff;\n}\n\n.focus\\:border-red-darkest:focus {\n  border-color: #3b0d0c;\n}\n\n.focus\\:border-red-darker:focus {\n  border-color: #621b18;\n}\n\n.focus\\:border-red-dark:focus {\n  border-color: #cc1f1a;\n}\n\n.focus\\:border-red:focus {\n  border-color: #e3342f;\n}\n\n.focus\\:border-red-light:focus {\n  border-color: #ef5753;\n}\n\n.focus\\:border-red-lighter:focus {\n  border-color: #f9acaa;\n}\n\n.focus\\:border-red-lightest:focus {\n  border-color: #fcebea;\n}\n\n.focus\\:border-orange-darkest:focus {\n  border-color: #462a16;\n}\n\n.focus\\:border-orange-darker:focus {\n  border-color: #613b1f;\n}\n\n.focus\\:border-orange-dark:focus {\n  border-color: #de751f;\n}\n\n.focus\\:border-orange:focus {\n  border-color: #f6993f;\n}\n\n.focus\\:border-orange-light:focus {\n  border-color: #faad63;\n}\n\n.focus\\:border-orange-lighter:focus {\n  border-color: #fcd9b6;\n}\n\n.focus\\:border-orange-lightest:focus {\n  border-color: #fff5eb;\n}\n\n.focus\\:border-yellow-darkest:focus {\n  border-color: #453411;\n}\n\n.focus\\:border-yellow-darker:focus {\n  border-color: #684f1d;\n}\n\n.focus\\:border-yellow-dark:focus {\n  border-color: #f2d024;\n}\n\n.focus\\:border-yellow:focus {\n  border-color: #ffed4a;\n}\n\n.focus\\:border-yellow-light:focus {\n  border-color: #fff382;\n}\n\n.focus\\:border-yellow-lighter:focus {\n  border-color: #fff9c2;\n}\n\n.focus\\:border-yellow-lightest:focus {\n  border-color: #fcfbeb;\n}\n\n.focus\\:border-green-darkest:focus {\n  border-color: #0f2f21;\n}\n\n.focus\\:border-green-darker:focus {\n  border-color: #1a4731;\n}\n\n.focus\\:border-green-dark:focus {\n  border-color: #1f9d55;\n}\n\n.focus\\:border-green:focus {\n  border-color: #38c172;\n}\n\n.focus\\:border-green-light:focus {\n  border-color: #51d88a;\n}\n\n.focus\\:border-green-lighter:focus {\n  border-color: #a2f5bf;\n}\n\n.focus\\:border-green-lightest:focus {\n  border-color: #e3fcec;\n}\n\n.focus\\:border-teal-darkest:focus {\n  border-color: #0d3331;\n}\n\n.focus\\:border-teal-darker:focus {\n  border-color: #20504f;\n}\n\n.focus\\:border-teal-dark:focus {\n  border-color: #38a89d;\n}\n\n.focus\\:border-teal:focus {\n  border-color: #4dc0b5;\n}\n\n.focus\\:border-teal-light:focus {\n  border-color: #64d5ca;\n}\n\n.focus\\:border-teal-lighter:focus {\n  border-color: #a0f0ed;\n}\n\n.focus\\:border-teal-lightest:focus {\n  border-color: #e8fffe;\n}\n\n.focus\\:border-blue-darkest:focus {\n  border-color: #12283a;\n}\n\n.focus\\:border-blue-darker:focus {\n  border-color: #1c3d5a;\n}\n\n.focus\\:border-blue-dark:focus {\n  border-color: #2779bd;\n}\n\n.focus\\:border-blue:focus {\n  border-color: #3490dc;\n}\n\n.focus\\:border-blue-light:focus {\n  border-color: #6cb2eb;\n}\n\n.focus\\:border-blue-lighter:focus {\n  border-color: #bcdefa;\n}\n\n.focus\\:border-blue-lightest:focus {\n  border-color: #eff8ff;\n}\n\n.focus\\:border-indigo-darkest:focus {\n  border-color: #191e38;\n}\n\n.focus\\:border-indigo-darker:focus {\n  border-color: #2f365f;\n}\n\n.focus\\:border-indigo-dark:focus {\n  border-color: #5661b3;\n}\n\n.focus\\:border-indigo:focus {\n  border-color: #6574cd;\n}\n\n.focus\\:border-indigo-light:focus {\n  border-color: #7886d7;\n}\n\n.focus\\:border-indigo-lighter:focus {\n  border-color: #b2b7ff;\n}\n\n.focus\\:border-indigo-lightest:focus {\n  border-color: #e6e8ff;\n}\n\n.focus\\:border-purple-darkest:focus {\n  border-color: #21183c;\n}\n\n.focus\\:border-purple-darker:focus {\n  border-color: #382b5f;\n}\n\n.focus\\:border-purple-dark:focus {\n  border-color: #794acf;\n}\n\n.focus\\:border-purple:focus {\n  border-color: #9561e2;\n}\n\n.focus\\:border-purple-light:focus {\n  border-color: #a779e9;\n}\n\n.focus\\:border-purple-lighter:focus {\n  border-color: #d6bbfc;\n}\n\n.focus\\:border-purple-lightest:focus {\n  border-color: #f3ebff;\n}\n\n.focus\\:border-pink-darkest:focus {\n  border-color: #451225;\n}\n\n.focus\\:border-pink-darker:focus {\n  border-color: #6f213f;\n}\n\n.focus\\:border-pink-dark:focus {\n  border-color: #eb5286;\n}\n\n.focus\\:border-pink:focus {\n  border-color: #f66d9b;\n}\n\n.focus\\:border-pink-light:focus {\n  border-color: #fa7ea8;\n}\n\n.focus\\:border-pink-lighter:focus {\n  border-color: #ffbbca;\n}\n\n.focus\\:border-pink-lightest:focus {\n  border-color: #ffebef;\n}\n\n.rounded-none {\n  border-radius: 0;\n}\n\n.rounded-sm {\n  border-radius: .125rem;\n}\n\n.rounded {\n  border-radius: .25rem;\n}\n\n.rounded-lg {\n  border-radius: .5rem;\n}\n\n.rounded-full {\n  border-radius: 9999px;\n}\n\n.rounded-t-none {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.rounded-r-none {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.rounded-b-none {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.rounded-l-none {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.rounded-t-sm {\n  border-top-left-radius: 2px;\n  border-top-left-radius: .125rem;\n  border-top-right-radius: 2px;\n  border-top-right-radius: .125rem;\n}\n\n.rounded-r-sm {\n  border-top-right-radius: 2px;\n  border-top-right-radius: .125rem;\n  border-bottom-right-radius: 2px;\n  border-bottom-right-radius: .125rem;\n}\n\n.rounded-b-sm {\n  border-bottom-right-radius: 2px;\n  border-bottom-right-radius: .125rem;\n  border-bottom-left-radius: 2px;\n  border-bottom-left-radius: .125rem;\n}\n\n.rounded-l-sm {\n  border-top-left-radius: 2px;\n  border-top-left-radius: .125rem;\n  border-bottom-left-radius: 2px;\n  border-bottom-left-radius: .125rem;\n}\n\n.rounded-t {\n  border-top-left-radius: 4px;\n  border-top-left-radius: .25rem;\n  border-top-right-radius: 4px;\n  border-top-right-radius: .25rem;\n}\n\n.rounded-r {\n  border-top-right-radius: 4px;\n  border-top-right-radius: .25rem;\n  border-bottom-right-radius: 4px;\n  border-bottom-right-radius: .25rem;\n}\n\n.rounded-b {\n  border-bottom-right-radius: 4px;\n  border-bottom-right-radius: .25rem;\n  border-bottom-left-radius: 4px;\n  border-bottom-left-radius: .25rem;\n}\n\n.rounded-l {\n  border-top-left-radius: 4px;\n  border-top-left-radius: .25rem;\n  border-bottom-left-radius: 4px;\n  border-bottom-left-radius: .25rem;\n}\n\n.rounded-t-lg {\n  border-top-left-radius: 8px;\n  border-top-left-radius: .5rem;\n  border-top-right-radius: 8px;\n  border-top-right-radius: .5rem;\n}\n\n.rounded-r-lg {\n  border-top-right-radius: 8px;\n  border-top-right-radius: .5rem;\n  border-bottom-right-radius: 8px;\n  border-bottom-right-radius: .5rem;\n}\n\n.rounded-b-lg {\n  border-bottom-right-radius: 8px;\n  border-bottom-right-radius: .5rem;\n  border-bottom-left-radius: 8px;\n  border-bottom-left-radius: .5rem;\n}\n\n.rounded-l-lg {\n  border-top-left-radius: 8px;\n  border-top-left-radius: .5rem;\n  border-bottom-left-radius: 8px;\n  border-bottom-left-radius: .5rem;\n}\n\n.rounded-t-full {\n  border-top-left-radius: 9999px;\n  border-top-right-radius: 9999px;\n}\n\n.rounded-r-full {\n  border-top-right-radius: 9999px;\n  border-bottom-right-radius: 9999px;\n}\n\n.rounded-b-full {\n  border-bottom-right-radius: 9999px;\n  border-bottom-left-radius: 9999px;\n}\n\n.rounded-l-full {\n  border-top-left-radius: 9999px;\n  border-bottom-left-radius: 9999px;\n}\n\n.rounded-tl-none {\n  border-top-left-radius: 0;\n}\n\n.rounded-tr-none {\n  border-top-right-radius: 0;\n}\n\n.rounded-br-none {\n  border-bottom-right-radius: 0;\n}\n\n.rounded-bl-none {\n  border-bottom-left-radius: 0;\n}\n\n.rounded-tl-sm {\n  border-top-left-radius: 2px;\n  border-top-left-radius: .125rem;\n}\n\n.rounded-tr-sm {\n  border-top-right-radius: 2px;\n  border-top-right-radius: .125rem;\n}\n\n.rounded-br-sm {\n  border-bottom-right-radius: 2px;\n  border-bottom-right-radius: .125rem;\n}\n\n.rounded-bl-sm {\n  border-bottom-left-radius: 2px;\n  border-bottom-left-radius: .125rem;\n}\n\n.rounded-tl {\n  border-top-left-radius: 4px;\n  border-top-left-radius: .25rem;\n}\n\n.rounded-tr {\n  border-top-right-radius: 4px;\n  border-top-right-radius: .25rem;\n}\n\n.rounded-br {\n  border-bottom-right-radius: 4px;\n  border-bottom-right-radius: .25rem;\n}\n\n.rounded-bl {\n  border-bottom-left-radius: 4px;\n  border-bottom-left-radius: .25rem;\n}\n\n.rounded-tl-lg {\n  border-top-left-radius: 8px;\n  border-top-left-radius: .5rem;\n}\n\n.rounded-tr-lg {\n  border-top-right-radius: 8px;\n  border-top-right-radius: .5rem;\n}\n\n.rounded-br-lg {\n  border-bottom-right-radius: 8px;\n  border-bottom-right-radius: .5rem;\n}\n\n.rounded-bl-lg {\n  border-bottom-left-radius: 8px;\n  border-bottom-left-radius: .5rem;\n}\n\n.rounded-tl-full {\n  border-top-left-radius: 9999px;\n}\n\n.rounded-tr-full {\n  border-top-right-radius: 9999px;\n}\n\n.rounded-br-full {\n  border-bottom-right-radius: 9999px;\n}\n\n.rounded-bl-full {\n  border-bottom-left-radius: 9999px;\n}\n\n.border-solid {\n  border-style: solid;\n}\n\n.border-dashed {\n  border-style: dashed;\n}\n\n.border-dotted {\n  border-style: dotted;\n}\n\n.border-none {\n  border-style: none;\n}\n\n.border-0 {\n  border-width: 0;\n}\n\n.border-2 {\n  border-width: 2px;\n}\n\n.border-4 {\n  border-width: 4px;\n}\n\n.border-8 {\n  border-width: 8px;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-t-0 {\n  border-top-width: 0;\n}\n\n.border-r-0 {\n  border-right-width: 0;\n}\n\n.border-b-0 {\n  border-bottom-width: 0;\n}\n\n.border-l-0 {\n  border-left-width: 0;\n}\n\n.border-t-2 {\n  border-top-width: 2px;\n}\n\n.border-r-2 {\n  border-right-width: 2px;\n}\n\n.border-b-2 {\n  border-bottom-width: 2px;\n}\n\n.border-l-2 {\n  border-left-width: 2px;\n}\n\n.border-t-4 {\n  border-top-width: 4px;\n}\n\n.border-r-4 {\n  border-right-width: 4px;\n}\n\n.border-b-4 {\n  border-bottom-width: 4px;\n}\n\n.border-l-4 {\n  border-left-width: 4px;\n}\n\n.border-t-8 {\n  border-top-width: 8px;\n}\n\n.border-r-8 {\n  border-right-width: 8px;\n}\n\n.border-b-8 {\n  border-bottom-width: 8px;\n}\n\n.border-l-8 {\n  border-left-width: 8px;\n}\n\n.border-t {\n  border-top-width: 1px;\n}\n\n.border-r {\n  border-right-width: 1px;\n}\n\n.border-b {\n  border-bottom-width: 1px;\n}\n\n.border-l {\n  border-left-width: 1px;\n}\n\n.cursor-auto {\n  cursor: auto;\n}\n\n.cursor-default {\n  cursor: default;\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.cursor-wait {\n  cursor: wait;\n}\n\n.cursor-move {\n  cursor: move;\n}\n\n.cursor-not-allowed {\n  cursor: not-allowed;\n}\n\n.block {\n  display: block;\n}\n\n.inline-block {\n  display: inline-block;\n}\n\n.inline {\n  display: inline;\n}\n\n.table {\n  display: table;\n}\n\n.table-row {\n  display: table-row;\n}\n\n.table-cell {\n  display: table-cell;\n}\n\n.hidden {\n  display: none;\n}\n\n.flex {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n\n.inline-flex {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n}\n\n.flex-row {\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n\n.flex-row-reverse {\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: reverse;\n      -ms-flex-direction: row-reverse;\n          flex-direction: row-reverse;\n}\n\n.flex-col {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n\n.flex-col-reverse {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: reverse;\n      -ms-flex-direction: column-reverse;\n          flex-direction: column-reverse;\n}\n\n.flex-wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n\n.flex-wrap-reverse {\n  -ms-flex-wrap: wrap-reverse;\n      flex-wrap: wrap-reverse;\n}\n\n.flex-no-wrap {\n  -ms-flex-wrap: nowrap;\n      flex-wrap: nowrap;\n}\n\n.items-start {\n  -webkit-box-align: start;\n      -ms-flex-align: start;\n          align-items: flex-start;\n}\n\n.items-end {\n  -webkit-box-align: end;\n      -ms-flex-align: end;\n          align-items: flex-end;\n}\n\n.items-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n\n.items-baseline {\n  -webkit-box-align: baseline;\n      -ms-flex-align: baseline;\n          align-items: baseline;\n}\n\n.items-stretch {\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch;\n}\n\n.self-auto {\n  -ms-flex-item-align: auto;\n      align-self: auto;\n}\n\n.self-start {\n  -ms-flex-item-align: start;\n      align-self: flex-start;\n}\n\n.self-end {\n  -ms-flex-item-align: end;\n      align-self: flex-end;\n}\n\n.self-center {\n  -ms-flex-item-align: center;\n      align-self: center;\n}\n\n.self-stretch {\n  -ms-flex-item-align: stretch;\n      align-self: stretch;\n}\n\n.justify-start {\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n}\n\n.justify-end {\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end;\n}\n\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n\n.justify-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n\n.justify-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n\n.content-center {\n  -ms-flex-line-pack: center;\n      align-content: center;\n}\n\n.content-start {\n  -ms-flex-line-pack: start;\n      align-content: flex-start;\n}\n\n.content-end {\n  -ms-flex-line-pack: end;\n      align-content: flex-end;\n}\n\n.content-between {\n  -ms-flex-line-pack: justify;\n      align-content: space-between;\n}\n\n.content-around {\n  -ms-flex-line-pack: distribute;\n      align-content: space-around;\n}\n\n.flex-1 {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n\n.flex-auto {\n  -webkit-box-flex: 1;\n      -ms-flex: auto;\n          flex: auto;\n}\n\n.flex-initial {\n  -webkit-box-flex: initial;\n      -ms-flex: initial;\n          flex: initial;\n}\n\n.flex-none {\n  -webkit-box-flex: 0;\n      -ms-flex: none;\n          flex: none;\n}\n\n.flex-grow {\n  -webkit-box-flex: 1;\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n}\n\n.flex-shrink {\n  -ms-flex-negative: 1;\n      flex-shrink: 1;\n}\n\n.flex-no-grow {\n  -webkit-box-flex: 0;\n      -ms-flex-positive: 0;\n          flex-grow: 0;\n}\n\n.flex-no-shrink {\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n}\n\n.float-right {\n  float: right;\n}\n\n.float-left {\n  float: left;\n}\n\n.float-none {\n  float: none;\n}\n\n.clearfix:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n.font-sans {\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue, -apple-system, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n}\n\n.font-serif {\n  font-family: Constantia, Lucida Bright, Lucidabright, Lucida Serif, Lucida, DejaVu Serif, Bitstream Vera Serif, Liberation Serif, Georgia, serif;\n}\n\n.font-mono {\n  font-family: Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;\n}\n\n.font-hairline {\n  font-weight: 100;\n}\n\n.font-thin {\n  font-weight: 200;\n}\n\n.font-light {\n  font-weight: 300;\n}\n\n.font-normal {\n  font-weight: 400;\n}\n\n.font-medium {\n  font-weight: 500;\n}\n\n.font-semibold {\n  font-weight: 600;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.font-extrabold {\n  font-weight: 800;\n}\n\n.font-black {\n  font-weight: 900;\n}\n\n.hover\\:font-hairline:hover {\n  font-weight: 100;\n}\n\n.hover\\:font-thin:hover {\n  font-weight: 200;\n}\n\n.hover\\:font-light:hover {\n  font-weight: 300;\n}\n\n.hover\\:font-normal:hover {\n  font-weight: 400;\n}\n\n.hover\\:font-medium:hover {\n  font-weight: 500;\n}\n\n.hover\\:font-semibold:hover {\n  font-weight: 600;\n}\n\n.hover\\:font-bold:hover {\n  font-weight: 700;\n}\n\n.hover\\:font-extrabold:hover {\n  font-weight: 800;\n}\n\n.hover\\:font-black:hover {\n  font-weight: 900;\n}\n\n.focus\\:font-hairline:focus {\n  font-weight: 100;\n}\n\n.focus\\:font-thin:focus {\n  font-weight: 200;\n}\n\n.focus\\:font-light:focus {\n  font-weight: 300;\n}\n\n.focus\\:font-normal:focus {\n  font-weight: 400;\n}\n\n.focus\\:font-medium:focus {\n  font-weight: 500;\n}\n\n.focus\\:font-semibold:focus {\n  font-weight: 600;\n}\n\n.focus\\:font-bold:focus {\n  font-weight: 700;\n}\n\n.focus\\:font-extrabold:focus {\n  font-weight: 800;\n}\n\n.focus\\:font-black:focus {\n  font-weight: 900;\n}\n\n.h-1 {\n  height: 4px;\n  height: .25rem;\n}\n\n.h-2 {\n  height: 8px;\n  height: .5rem;\n}\n\n.h-3 {\n  height: 12px;\n  height: .75rem;\n}\n\n.h-4 {\n  height: 16px;\n  height: 1rem;\n}\n\n.h-5 {\n  height: 20px;\n  height: 1.25rem;\n}\n\n.h-6 {\n  height: 24px;\n  height: 1.5rem;\n}\n\n.h-8 {\n  height: 32px;\n  height: 2rem;\n}\n\n.h-10 {\n  height: 40px;\n  height: 2.5rem;\n}\n\n.h-12 {\n  height: 48px;\n  height: 3rem;\n}\n\n.h-16 {\n  height: 64px;\n  height: 4rem;\n}\n\n.h-24 {\n  height: 96px;\n  height: 6rem;\n}\n\n.h-32 {\n  height: 128px;\n  height: 8rem;\n}\n\n.h-48 {\n  height: 192px;\n  height: 12rem;\n}\n\n.h-64 {\n  height: 256px;\n  height: 16rem;\n}\n\n.h-auto {\n  height: auto;\n}\n\n.h-px {\n  height: 1px;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.h-screen {\n  height: 100vh;\n}\n\n.leading-none {\n  line-height: 1;\n}\n\n.leading-tight {\n  line-height: 1.25;\n}\n\n.leading-normal {\n  line-height: 1.5;\n}\n\n.leading-loose {\n  line-height: 2;\n}\n\n.m-0 {\n  margin: 0;\n}\n\n.m-1 {\n  margin: 4px;\n  margin: .25rem;\n}\n\n.m-2 {\n  margin: 8px;\n  margin: .5rem;\n}\n\n.m-3 {\n  margin: 12px;\n  margin: .75rem;\n}\n\n.m-4 {\n  margin: 16px;\n  margin: 1rem;\n}\n\n.m-5 {\n  margin: 20px;\n  margin: 1.25rem;\n}\n\n.m-6 {\n  margin: 24px;\n  margin: 1.5rem;\n}\n\n.m-8 {\n  margin: 32px;\n  margin: 2rem;\n}\n\n.m-10 {\n  margin: 40px;\n  margin: 2.5rem;\n}\n\n.m-12 {\n  margin: 48px;\n  margin: 3rem;\n}\n\n.m-16 {\n  margin: 64px;\n  margin: 4rem;\n}\n\n.m-20 {\n  margin: 80px;\n  margin: 5rem;\n}\n\n.m-24 {\n  margin: 96px;\n  margin: 6rem;\n}\n\n.m-32 {\n  margin: 128px;\n  margin: 8rem;\n}\n\n.m-auto {\n  margin: auto;\n}\n\n.m-px {\n  margin: 1px;\n}\n\n.my-0 {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.mx-0 {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.my-1 {\n  margin-top: 4px;\n  margin-top: .25rem;\n  margin-bottom: 4px;\n  margin-bottom: .25rem;\n}\n\n.mx-1 {\n  margin-left: 4px;\n  margin-left: .25rem;\n  margin-right: 4px;\n  margin-right: .25rem;\n}\n\n.my-2 {\n  margin-top: 8px;\n  margin-top: .5rem;\n  margin-bottom: 8px;\n  margin-bottom: .5rem;\n}\n\n.mx-2 {\n  margin-left: 8px;\n  margin-left: .5rem;\n  margin-right: 8px;\n  margin-right: .5rem;\n}\n\n.my-3 {\n  margin-top: 12px;\n  margin-top: .75rem;\n  margin-bottom: 12px;\n  margin-bottom: .75rem;\n}\n\n.mx-3 {\n  margin-left: 12px;\n  margin-left: .75rem;\n  margin-right: 12px;\n  margin-right: .75rem;\n}\n\n.my-4 {\n  margin-top: 16px;\n  margin-top: 1rem;\n  margin-bottom: 16px;\n  margin-bottom: 1rem;\n}\n\n.mx-4 {\n  margin-left: 16px;\n  margin-left: 1rem;\n  margin-right: 16px;\n  margin-right: 1rem;\n}\n\n.my-5 {\n  margin-top: 20px;\n  margin-top: 1.25rem;\n  margin-bottom: 20px;\n  margin-bottom: 1.25rem;\n}\n\n.mx-5 {\n  margin-left: 20px;\n  margin-left: 1.25rem;\n  margin-right: 20px;\n  margin-right: 1.25rem;\n}\n\n.my-6 {\n  margin-top: 24px;\n  margin-top: 1.5rem;\n  margin-bottom: 24px;\n  margin-bottom: 1.5rem;\n}\n\n.mx-6 {\n  margin-left: 24px;\n  margin-left: 1.5rem;\n  margin-right: 24px;\n  margin-right: 1.5rem;\n}\n\n.my-8 {\n  margin-top: 32px;\n  margin-top: 2rem;\n  margin-bottom: 32px;\n  margin-bottom: 2rem;\n}\n\n.mx-8 {\n  margin-left: 32px;\n  margin-left: 2rem;\n  margin-right: 32px;\n  margin-right: 2rem;\n}\n\n.my-10 {\n  margin-top: 40px;\n  margin-top: 2.5rem;\n  margin-bottom: 40px;\n  margin-bottom: 2.5rem;\n}\n\n.mx-10 {\n  margin-left: 40px;\n  margin-left: 2.5rem;\n  margin-right: 40px;\n  margin-right: 2.5rem;\n}\n\n.my-12 {\n  margin-top: 48px;\n  margin-top: 3rem;\n  margin-bottom: 48px;\n  margin-bottom: 3rem;\n}\n\n.mx-12 {\n  margin-left: 48px;\n  margin-left: 3rem;\n  margin-right: 48px;\n  margin-right: 3rem;\n}\n\n.my-16 {\n  margin-top: 64px;\n  margin-top: 4rem;\n  margin-bottom: 64px;\n  margin-bottom: 4rem;\n}\n\n.mx-16 {\n  margin-left: 64px;\n  margin-left: 4rem;\n  margin-right: 64px;\n  margin-right: 4rem;\n}\n\n.my-20 {\n  margin-top: 80px;\n  margin-top: 5rem;\n  margin-bottom: 80px;\n  margin-bottom: 5rem;\n}\n\n.mx-20 {\n  margin-left: 80px;\n  margin-left: 5rem;\n  margin-right: 80px;\n  margin-right: 5rem;\n}\n\n.my-24 {\n  margin-top: 96px;\n  margin-top: 6rem;\n  margin-bottom: 96px;\n  margin-bottom: 6rem;\n}\n\n.mx-24 {\n  margin-left: 96px;\n  margin-left: 6rem;\n  margin-right: 96px;\n  margin-right: 6rem;\n}\n\n.my-32 {\n  margin-top: 128px;\n  margin-top: 8rem;\n  margin-bottom: 128px;\n  margin-bottom: 8rem;\n}\n\n.mx-32 {\n  margin-left: 128px;\n  margin-left: 8rem;\n  margin-right: 128px;\n  margin-right: 8rem;\n}\n\n.my-auto {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.my-px {\n  margin-top: 1px;\n  margin-bottom: 1px;\n}\n\n.mx-px {\n  margin-left: 1px;\n  margin-right: 1px;\n}\n\n.mt-0 {\n  margin-top: 0;\n}\n\n.mr-0 {\n  margin-right: 0;\n}\n\n.mb-0 {\n  margin-bottom: 0;\n}\n\n.ml-0 {\n  margin-left: 0;\n}\n\n.mt-1 {\n  margin-top: 4px;\n  margin-top: .25rem;\n}\n\n.mr-1 {\n  margin-right: 4px;\n  margin-right: .25rem;\n}\n\n.mb-1 {\n  margin-bottom: 4px;\n  margin-bottom: .25rem;\n}\n\n.ml-1 {\n  margin-left: 4px;\n  margin-left: .25rem;\n}\n\n.mt-2 {\n  margin-top: 8px;\n  margin-top: .5rem;\n}\n\n.mr-2 {\n  margin-right: 8px;\n  margin-right: .5rem;\n}\n\n.mb-2 {\n  margin-bottom: 8px;\n  margin-bottom: .5rem;\n}\n\n.ml-2 {\n  margin-left: 8px;\n  margin-left: .5rem;\n}\n\n.mt-3 {\n  margin-top: 12px;\n  margin-top: .75rem;\n}\n\n.mr-3 {\n  margin-right: 12px;\n  margin-right: .75rem;\n}\n\n.mb-3 {\n  margin-bottom: 12px;\n  margin-bottom: .75rem;\n}\n\n.ml-3 {\n  margin-left: 12px;\n  margin-left: .75rem;\n}\n\n.mt-4 {\n  margin-top: 16px;\n  margin-top: 1rem;\n}\n\n.mr-4 {\n  margin-right: 16px;\n  margin-right: 1rem;\n}\n\n.mb-4 {\n  margin-bottom: 16px;\n  margin-bottom: 1rem;\n}\n\n.ml-4 {\n  margin-left: 16px;\n  margin-left: 1rem;\n}\n\n.mt-5 {\n  margin-top: 20px;\n  margin-top: 1.25rem;\n}\n\n.mr-5 {\n  margin-right: 20px;\n  margin-right: 1.25rem;\n}\n\n.mb-5 {\n  margin-bottom: 20px;\n  margin-bottom: 1.25rem;\n}\n\n.ml-5 {\n  margin-left: 20px;\n  margin-left: 1.25rem;\n}\n\n.mt-6 {\n  margin-top: 24px;\n  margin-top: 1.5rem;\n}\n\n.mr-6 {\n  margin-right: 24px;\n  margin-right: 1.5rem;\n}\n\n.mb-6 {\n  margin-bottom: 24px;\n  margin-bottom: 1.5rem;\n}\n\n.ml-6 {\n  margin-left: 24px;\n  margin-left: 1.5rem;\n}\n\n.mt-8 {\n  margin-top: 32px;\n  margin-top: 2rem;\n}\n\n.mr-8 {\n  margin-right: 32px;\n  margin-right: 2rem;\n}\n\n.mb-8 {\n  margin-bottom: 32px;\n  margin-bottom: 2rem;\n}\n\n.ml-8 {\n  margin-left: 32px;\n  margin-left: 2rem;\n}\n\n.mt-10 {\n  margin-top: 40px;\n  margin-top: 2.5rem;\n}\n\n.mr-10 {\n  margin-right: 40px;\n  margin-right: 2.5rem;\n}\n\n.mb-10 {\n  margin-bottom: 40px;\n  margin-bottom: 2.5rem;\n}\n\n.ml-10 {\n  margin-left: 40px;\n  margin-left: 2.5rem;\n}\n\n.mt-12 {\n  margin-top: 48px;\n  margin-top: 3rem;\n}\n\n.mr-12 {\n  margin-right: 48px;\n  margin-right: 3rem;\n}\n\n.mb-12 {\n  margin-bottom: 48px;\n  margin-bottom: 3rem;\n}\n\n.ml-12 {\n  margin-left: 48px;\n  margin-left: 3rem;\n}\n\n.mt-16 {\n  margin-top: 64px;\n  margin-top: 4rem;\n}\n\n.mr-16 {\n  margin-right: 64px;\n  margin-right: 4rem;\n}\n\n.mb-16 {\n  margin-bottom: 64px;\n  margin-bottom: 4rem;\n}\n\n.ml-16 {\n  margin-left: 64px;\n  margin-left: 4rem;\n}\n\n.mt-20 {\n  margin-top: 80px;\n  margin-top: 5rem;\n}\n\n.mr-20 {\n  margin-right: 80px;\n  margin-right: 5rem;\n}\n\n.mb-20 {\n  margin-bottom: 80px;\n  margin-bottom: 5rem;\n}\n\n.ml-20 {\n  margin-left: 80px;\n  margin-left: 5rem;\n}\n\n.mt-24 {\n  margin-top: 96px;\n  margin-top: 6rem;\n}\n\n.mr-24 {\n  margin-right: 96px;\n  margin-right: 6rem;\n}\n\n.mb-24 {\n  margin-bottom: 96px;\n  margin-bottom: 6rem;\n}\n\n.ml-24 {\n  margin-left: 96px;\n  margin-left: 6rem;\n}\n\n.mt-32 {\n  margin-top: 128px;\n  margin-top: 8rem;\n}\n\n.mr-32 {\n  margin-right: 128px;\n  margin-right: 8rem;\n}\n\n.mb-32 {\n  margin-bottom: 128px;\n  margin-bottom: 8rem;\n}\n\n.ml-32 {\n  margin-left: 128px;\n  margin-left: 8rem;\n}\n\n.mt-auto {\n  margin-top: auto;\n}\n\n.mr-auto {\n  margin-right: auto;\n}\n\n.mb-auto {\n  margin-bottom: auto;\n}\n\n.ml-auto {\n  margin-left: auto;\n}\n\n.mt-px {\n  margin-top: 1px;\n}\n\n.mr-px {\n  margin-right: 1px;\n}\n\n.mb-px {\n  margin-bottom: 1px;\n}\n\n.ml-px {\n  margin-left: 1px;\n}\n\n.max-h-full {\n  max-height: 100%;\n}\n\n.max-h-screen {\n  max-height: 100vh;\n}\n\n.max-w-xs {\n  max-width: 320px;\n  max-width: 20rem;\n}\n\n.max-w-sm {\n  max-width: 480px;\n  max-width: 30rem;\n}\n\n.max-w-md {\n  max-width: 640px;\n  max-width: 40rem;\n}\n\n.max-w-lg {\n  max-width: 800px;\n  max-width: 50rem;\n}\n\n.max-w-xl {\n  max-width: 960px;\n  max-width: 60rem;\n}\n\n.max-w-2xl {\n  max-width: 1120px;\n  max-width: 70rem;\n}\n\n.max-w-3xl {\n  max-width: 1280px;\n  max-width: 80rem;\n}\n\n.max-w-4xl {\n  max-width: 1440px;\n  max-width: 90rem;\n}\n\n.max-w-5xl {\n  max-width: 1600px;\n  max-width: 100rem;\n}\n\n.max-w-full {\n  max-width: 100%;\n}\n\n.min-h-0 {\n  min-height: 0;\n}\n\n.min-h-full {\n  min-height: 100%;\n}\n\n.min-h-screen {\n  min-height: 100vh;\n}\n\n.min-w-0 {\n  min-width: 0;\n}\n\n.min-w-full {\n  min-width: 100%;\n}\n\n.-m-0 {\n  margin: 0;\n}\n\n.-m-1 {\n  margin: -4px;\n  margin: -0.25rem;\n}\n\n.-m-2 {\n  margin: -8px;\n  margin: -0.5rem;\n}\n\n.-m-3 {\n  margin: -12px;\n  margin: -0.75rem;\n}\n\n.-m-4 {\n  margin: -16px;\n  margin: -1rem;\n}\n\n.-m-5 {\n  margin: -20px;\n  margin: -1.25rem;\n}\n\n.-m-6 {\n  margin: -24px;\n  margin: -1.5rem;\n}\n\n.-m-8 {\n  margin: -32px;\n  margin: -2rem;\n}\n\n.-m-10 {\n  margin: -40px;\n  margin: -2.5rem;\n}\n\n.-m-12 {\n  margin: -48px;\n  margin: -3rem;\n}\n\n.-m-16 {\n  margin: -64px;\n  margin: -4rem;\n}\n\n.-m-20 {\n  margin: -80px;\n  margin: -5rem;\n}\n\n.-m-24 {\n  margin: -96px;\n  margin: -6rem;\n}\n\n.-m-32 {\n  margin: -128px;\n  margin: -8rem;\n}\n\n.-m-px {\n  margin: -1px;\n}\n\n.-my-0 {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.-mx-0 {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.-my-1 {\n  margin-top: -4px;\n  margin-top: -0.25rem;\n  margin-bottom: -4px;\n  margin-bottom: -0.25rem;\n}\n\n.-mx-1 {\n  margin-left: -4px;\n  margin-left: -0.25rem;\n  margin-right: -4px;\n  margin-right: -0.25rem;\n}\n\n.-my-2 {\n  margin-top: -8px;\n  margin-top: -0.5rem;\n  margin-bottom: -8px;\n  margin-bottom: -0.5rem;\n}\n\n.-mx-2 {\n  margin-left: -8px;\n  margin-left: -0.5rem;\n  margin-right: -8px;\n  margin-right: -0.5rem;\n}\n\n.-my-3 {\n  margin-top: -12px;\n  margin-top: -0.75rem;\n  margin-bottom: -12px;\n  margin-bottom: -0.75rem;\n}\n\n.-mx-3 {\n  margin-left: -12px;\n  margin-left: -0.75rem;\n  margin-right: -12px;\n  margin-right: -0.75rem;\n}\n\n.-my-4 {\n  margin-top: -16px;\n  margin-top: -1rem;\n  margin-bottom: -16px;\n  margin-bottom: -1rem;\n}\n\n.-mx-4 {\n  margin-left: -16px;\n  margin-left: -1rem;\n  margin-right: -16px;\n  margin-right: -1rem;\n}\n\n.-my-5 {\n  margin-top: -20px;\n  margin-top: -1.25rem;\n  margin-bottom: -20px;\n  margin-bottom: -1.25rem;\n}\n\n.-mx-5 {\n  margin-left: -20px;\n  margin-left: -1.25rem;\n  margin-right: -20px;\n  margin-right: -1.25rem;\n}\n\n.-my-6 {\n  margin-top: -24px;\n  margin-top: -1.5rem;\n  margin-bottom: -24px;\n  margin-bottom: -1.5rem;\n}\n\n.-mx-6 {\n  margin-left: -24px;\n  margin-left: -1.5rem;\n  margin-right: -24px;\n  margin-right: -1.5rem;\n}\n\n.-my-8 {\n  margin-top: -32px;\n  margin-top: -2rem;\n  margin-bottom: -32px;\n  margin-bottom: -2rem;\n}\n\n.-mx-8 {\n  margin-left: -32px;\n  margin-left: -2rem;\n  margin-right: -32px;\n  margin-right: -2rem;\n}\n\n.-my-10 {\n  margin-top: -40px;\n  margin-top: -2.5rem;\n  margin-bottom: -40px;\n  margin-bottom: -2.5rem;\n}\n\n.-mx-10 {\n  margin-left: -40px;\n  margin-left: -2.5rem;\n  margin-right: -40px;\n  margin-right: -2.5rem;\n}\n\n.-my-12 {\n  margin-top: -48px;\n  margin-top: -3rem;\n  margin-bottom: -48px;\n  margin-bottom: -3rem;\n}\n\n.-mx-12 {\n  margin-left: -48px;\n  margin-left: -3rem;\n  margin-right: -48px;\n  margin-right: -3rem;\n}\n\n.-my-16 {\n  margin-top: -64px;\n  margin-top: -4rem;\n  margin-bottom: -64px;\n  margin-bottom: -4rem;\n}\n\n.-mx-16 {\n  margin-left: -64px;\n  margin-left: -4rem;\n  margin-right: -64px;\n  margin-right: -4rem;\n}\n\n.-my-20 {\n  margin-top: -80px;\n  margin-top: -5rem;\n  margin-bottom: -80px;\n  margin-bottom: -5rem;\n}\n\n.-mx-20 {\n  margin-left: -80px;\n  margin-left: -5rem;\n  margin-right: -80px;\n  margin-right: -5rem;\n}\n\n.-my-24 {\n  margin-top: -96px;\n  margin-top: -6rem;\n  margin-bottom: -96px;\n  margin-bottom: -6rem;\n}\n\n.-mx-24 {\n  margin-left: -96px;\n  margin-left: -6rem;\n  margin-right: -96px;\n  margin-right: -6rem;\n}\n\n.-my-32 {\n  margin-top: -128px;\n  margin-top: -8rem;\n  margin-bottom: -128px;\n  margin-bottom: -8rem;\n}\n\n.-mx-32 {\n  margin-left: -128px;\n  margin-left: -8rem;\n  margin-right: -128px;\n  margin-right: -8rem;\n}\n\n.-my-px {\n  margin-top: -1px;\n  margin-bottom: -1px;\n}\n\n.-mx-px {\n  margin-left: -1px;\n  margin-right: -1px;\n}\n\n.-mt-0 {\n  margin-top: 0;\n}\n\n.-mr-0 {\n  margin-right: 0;\n}\n\n.-mb-0 {\n  margin-bottom: 0;\n}\n\n.-ml-0 {\n  margin-left: 0;\n}\n\n.-mt-1 {\n  margin-top: -4px;\n  margin-top: -0.25rem;\n}\n\n.-mr-1 {\n  margin-right: -4px;\n  margin-right: -0.25rem;\n}\n\n.-mb-1 {\n  margin-bottom: -4px;\n  margin-bottom: -0.25rem;\n}\n\n.-ml-1 {\n  margin-left: -4px;\n  margin-left: -0.25rem;\n}\n\n.-mt-2 {\n  margin-top: -8px;\n  margin-top: -0.5rem;\n}\n\n.-mr-2 {\n  margin-right: -8px;\n  margin-right: -0.5rem;\n}\n\n.-mb-2 {\n  margin-bottom: -8px;\n  margin-bottom: -0.5rem;\n}\n\n.-ml-2 {\n  margin-left: -8px;\n  margin-left: -0.5rem;\n}\n\n.-mt-3 {\n  margin-top: -12px;\n  margin-top: -0.75rem;\n}\n\n.-mr-3 {\n  margin-right: -12px;\n  margin-right: -0.75rem;\n}\n\n.-mb-3 {\n  margin-bottom: -12px;\n  margin-bottom: -0.75rem;\n}\n\n.-ml-3 {\n  margin-left: -12px;\n  margin-left: -0.75rem;\n}\n\n.-mt-4 {\n  margin-top: -16px;\n  margin-top: -1rem;\n}\n\n.-mr-4 {\n  margin-right: -16px;\n  margin-right: -1rem;\n}\n\n.-mb-4 {\n  margin-bottom: -16px;\n  margin-bottom: -1rem;\n}\n\n.-ml-4 {\n  margin-left: -16px;\n  margin-left: -1rem;\n}\n\n.-mt-5 {\n  margin-top: -20px;\n  margin-top: -1.25rem;\n}\n\n.-mr-5 {\n  margin-right: -20px;\n  margin-right: -1.25rem;\n}\n\n.-mb-5 {\n  margin-bottom: -20px;\n  margin-bottom: -1.25rem;\n}\n\n.-ml-5 {\n  margin-left: -20px;\n  margin-left: -1.25rem;\n}\n\n.-mt-6 {\n  margin-top: -24px;\n  margin-top: -1.5rem;\n}\n\n.-mr-6 {\n  margin-right: -24px;\n  margin-right: -1.5rem;\n}\n\n.-mb-6 {\n  margin-bottom: -24px;\n  margin-bottom: -1.5rem;\n}\n\n.-ml-6 {\n  margin-left: -24px;\n  margin-left: -1.5rem;\n}\n\n.-mt-8 {\n  margin-top: -32px;\n  margin-top: -2rem;\n}\n\n.-mr-8 {\n  margin-right: -32px;\n  margin-right: -2rem;\n}\n\n.-mb-8 {\n  margin-bottom: -32px;\n  margin-bottom: -2rem;\n}\n\n.-ml-8 {\n  margin-left: -32px;\n  margin-left: -2rem;\n}\n\n.-mt-10 {\n  margin-top: -40px;\n  margin-top: -2.5rem;\n}\n\n.-mr-10 {\n  margin-right: -40px;\n  margin-right: -2.5rem;\n}\n\n.-mb-10 {\n  margin-bottom: -40px;\n  margin-bottom: -2.5rem;\n}\n\n.-ml-10 {\n  margin-left: -40px;\n  margin-left: -2.5rem;\n}\n\n.-mt-12 {\n  margin-top: -48px;\n  margin-top: -3rem;\n}\n\n.-mr-12 {\n  margin-right: -48px;\n  margin-right: -3rem;\n}\n\n.-mb-12 {\n  margin-bottom: -48px;\n  margin-bottom: -3rem;\n}\n\n.-ml-12 {\n  margin-left: -48px;\n  margin-left: -3rem;\n}\n\n.-mt-16 {\n  margin-top: -64px;\n  margin-top: -4rem;\n}\n\n.-mr-16 {\n  margin-right: -64px;\n  margin-right: -4rem;\n}\n\n.-mb-16 {\n  margin-bottom: -64px;\n  margin-bottom: -4rem;\n}\n\n.-ml-16 {\n  margin-left: -64px;\n  margin-left: -4rem;\n}\n\n.-mt-20 {\n  margin-top: -80px;\n  margin-top: -5rem;\n}\n\n.-mr-20 {\n  margin-right: -80px;\n  margin-right: -5rem;\n}\n\n.-mb-20 {\n  margin-bottom: -80px;\n  margin-bottom: -5rem;\n}\n\n.-ml-20 {\n  margin-left: -80px;\n  margin-left: -5rem;\n}\n\n.-mt-24 {\n  margin-top: -96px;\n  margin-top: -6rem;\n}\n\n.-mr-24 {\n  margin-right: -96px;\n  margin-right: -6rem;\n}\n\n.-mb-24 {\n  margin-bottom: -96px;\n  margin-bottom: -6rem;\n}\n\n.-ml-24 {\n  margin-left: -96px;\n  margin-left: -6rem;\n}\n\n.-mt-32 {\n  margin-top: -128px;\n  margin-top: -8rem;\n}\n\n.-mr-32 {\n  margin-right: -128px;\n  margin-right: -8rem;\n}\n\n.-mb-32 {\n  margin-bottom: -128px;\n  margin-bottom: -8rem;\n}\n\n.-ml-32 {\n  margin-left: -128px;\n  margin-left: -8rem;\n}\n\n.-mt-px {\n  margin-top: -1px;\n}\n\n.-mr-px {\n  margin-right: -1px;\n}\n\n.-mb-px {\n  margin-bottom: -1px;\n}\n\n.-ml-px {\n  margin-left: -1px;\n}\n\n.opacity-0 {\n  opacity: 0;\n}\n\n.opacity-25 {\n  opacity: .25;\n}\n\n.opacity-50 {\n  opacity: .5;\n}\n\n.opacity-75 {\n  opacity: .75;\n}\n\n.opacity-100 {\n  opacity: 1;\n}\n\n.outline-none {\n  outline: 0;\n}\n\n.focus\\:outline-none:focus {\n  outline: 0;\n}\n\n.overflow-auto {\n  overflow: auto;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.overflow-visible {\n  overflow: visible;\n}\n\n.overflow-scroll {\n  overflow: scroll;\n}\n\n.overflow-x-auto {\n  overflow-x: auto;\n}\n\n.overflow-y-auto {\n  overflow-y: auto;\n}\n\n.overflow-x-hidden {\n  overflow-x: hidden;\n}\n\n.overflow-y-hidden {\n  overflow-y: hidden;\n}\n\n.overflow-x-visible {\n  overflow-x: visible;\n}\n\n.overflow-y-visible {\n  overflow-y: visible;\n}\n\n.overflow-x-scroll {\n  overflow-x: scroll;\n}\n\n.overflow-y-scroll {\n  overflow-y: scroll;\n}\n\n.scrolling-touch {\n  -webkit-overflow-scrolling: touch;\n}\n\n.scrolling-auto {\n  -webkit-overflow-scrolling: auto;\n}\n\n.p-0 {\n  padding: 0;\n}\n\n.p-1 {\n  padding: 4px;\n  padding: .25rem;\n}\n\n.p-2 {\n  padding: 8px;\n  padding: .5rem;\n}\n\n.p-3 {\n  padding: 12px;\n  padding: .75rem;\n}\n\n.p-4 {\n  padding: 16px;\n  padding: 1rem;\n}\n\n.p-5 {\n  padding: 20px;\n  padding: 1.25rem;\n}\n\n.p-6 {\n  padding: 24px;\n  padding: 1.5rem;\n}\n\n.p-8 {\n  padding: 32px;\n  padding: 2rem;\n}\n\n.p-10 {\n  padding: 40px;\n  padding: 2.5rem;\n}\n\n.p-12 {\n  padding: 48px;\n  padding: 3rem;\n}\n\n.p-16 {\n  padding: 64px;\n  padding: 4rem;\n}\n\n.p-20 {\n  padding: 80px;\n  padding: 5rem;\n}\n\n.p-24 {\n  padding: 96px;\n  padding: 6rem;\n}\n\n.p-32 {\n  padding: 128px;\n  padding: 8rem;\n}\n\n.p-px {\n  padding: 1px;\n}\n\n.py-0 {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.px-0 {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.py-1 {\n  padding-top: 4px;\n  padding-top: .25rem;\n  padding-bottom: 4px;\n  padding-bottom: .25rem;\n}\n\n.px-1 {\n  padding-left: 4px;\n  padding-left: .25rem;\n  padding-right: 4px;\n  padding-right: .25rem;\n}\n\n.py-2 {\n  padding-top: 8px;\n  padding-top: .5rem;\n  padding-bottom: 8px;\n  padding-bottom: .5rem;\n}\n\n.px-2 {\n  padding-left: 8px;\n  padding-left: .5rem;\n  padding-right: 8px;\n  padding-right: .5rem;\n}\n\n.py-3 {\n  padding-top: 12px;\n  padding-top: .75rem;\n  padding-bottom: 12px;\n  padding-bottom: .75rem;\n}\n\n.px-3 {\n  padding-left: 12px;\n  padding-left: .75rem;\n  padding-right: 12px;\n  padding-right: .75rem;\n}\n\n.py-4 {\n  padding-top: 16px;\n  padding-top: 1rem;\n  padding-bottom: 16px;\n  padding-bottom: 1rem;\n}\n\n.px-4 {\n  padding-left: 16px;\n  padding-left: 1rem;\n  padding-right: 16px;\n  padding-right: 1rem;\n}\n\n.py-5 {\n  padding-top: 20px;\n  padding-top: 1.25rem;\n  padding-bottom: 20px;\n  padding-bottom: 1.25rem;\n}\n\n.px-5 {\n  padding-left: 20px;\n  padding-left: 1.25rem;\n  padding-right: 20px;\n  padding-right: 1.25rem;\n}\n\n.py-6 {\n  padding-top: 24px;\n  padding-top: 1.5rem;\n  padding-bottom: 24px;\n  padding-bottom: 1.5rem;\n}\n\n.px-6 {\n  padding-left: 24px;\n  padding-left: 1.5rem;\n  padding-right: 24px;\n  padding-right: 1.5rem;\n}\n\n.py-8 {\n  padding-top: 32px;\n  padding-top: 2rem;\n  padding-bottom: 32px;\n  padding-bottom: 2rem;\n}\n\n.px-8 {\n  padding-left: 32px;\n  padding-left: 2rem;\n  padding-right: 32px;\n  padding-right: 2rem;\n}\n\n.py-10 {\n  padding-top: 40px;\n  padding-top: 2.5rem;\n  padding-bottom: 40px;\n  padding-bottom: 2.5rem;\n}\n\n.px-10 {\n  padding-left: 40px;\n  padding-left: 2.5rem;\n  padding-right: 40px;\n  padding-right: 2.5rem;\n}\n\n.py-12 {\n  padding-top: 48px;\n  padding-top: 3rem;\n  padding-bottom: 48px;\n  padding-bottom: 3rem;\n}\n\n.px-12 {\n  padding-left: 48px;\n  padding-left: 3rem;\n  padding-right: 48px;\n  padding-right: 3rem;\n}\n\n.py-16 {\n  padding-top: 64px;\n  padding-top: 4rem;\n  padding-bottom: 64px;\n  padding-bottom: 4rem;\n}\n\n.px-16 {\n  padding-left: 64px;\n  padding-left: 4rem;\n  padding-right: 64px;\n  padding-right: 4rem;\n}\n\n.py-20 {\n  padding-top: 80px;\n  padding-top: 5rem;\n  padding-bottom: 80px;\n  padding-bottom: 5rem;\n}\n\n.px-20 {\n  padding-left: 80px;\n  padding-left: 5rem;\n  padding-right: 80px;\n  padding-right: 5rem;\n}\n\n.py-24 {\n  padding-top: 96px;\n  padding-top: 6rem;\n  padding-bottom: 96px;\n  padding-bottom: 6rem;\n}\n\n.px-24 {\n  padding-left: 96px;\n  padding-left: 6rem;\n  padding-right: 96px;\n  padding-right: 6rem;\n}\n\n.py-32 {\n  padding-top: 128px;\n  padding-top: 8rem;\n  padding-bottom: 128px;\n  padding-bottom: 8rem;\n}\n\n.px-32 {\n  padding-left: 128px;\n  padding-left: 8rem;\n  padding-right: 128px;\n  padding-right: 8rem;\n}\n\n.py-px {\n  padding-top: 1px;\n  padding-bottom: 1px;\n}\n\n.px-px {\n  padding-left: 1px;\n  padding-right: 1px;\n}\n\n.pt-0 {\n  padding-top: 0;\n}\n\n.pr-0 {\n  padding-right: 0;\n}\n\n.pb-0 {\n  padding-bottom: 0;\n}\n\n.pl-0 {\n  padding-left: 0;\n}\n\n.pt-1 {\n  padding-top: 4px;\n  padding-top: .25rem;\n}\n\n.pr-1 {\n  padding-right: 4px;\n  padding-right: .25rem;\n}\n\n.pb-1 {\n  padding-bottom: 4px;\n  padding-bottom: .25rem;\n}\n\n.pl-1 {\n  padding-left: 4px;\n  padding-left: .25rem;\n}\n\n.pt-2 {\n  padding-top: 8px;\n  padding-top: .5rem;\n}\n\n.pr-2 {\n  padding-right: 8px;\n  padding-right: .5rem;\n}\n\n.pb-2 {\n  padding-bottom: 8px;\n  padding-bottom: .5rem;\n}\n\n.pl-2 {\n  padding-left: 8px;\n  padding-left: .5rem;\n}\n\n.pt-3 {\n  padding-top: 12px;\n  padding-top: .75rem;\n}\n\n.pr-3 {\n  padding-right: 12px;\n  padding-right: .75rem;\n}\n\n.pb-3 {\n  padding-bottom: 12px;\n  padding-bottom: .75rem;\n}\n\n.pl-3 {\n  padding-left: 12px;\n  padding-left: .75rem;\n}\n\n.pt-4 {\n  padding-top: 16px;\n  padding-top: 1rem;\n}\n\n.pr-4 {\n  padding-right: 16px;\n  padding-right: 1rem;\n}\n\n.pb-4 {\n  padding-bottom: 16px;\n  padding-bottom: 1rem;\n}\n\n.pl-4 {\n  padding-left: 16px;\n  padding-left: 1rem;\n}\n\n.pt-5 {\n  padding-top: 20px;\n  padding-top: 1.25rem;\n}\n\n.pr-5 {\n  padding-right: 20px;\n  padding-right: 1.25rem;\n}\n\n.pb-5 {\n  padding-bottom: 20px;\n  padding-bottom: 1.25rem;\n}\n\n.pl-5 {\n  padding-left: 20px;\n  padding-left: 1.25rem;\n}\n\n.pt-6 {\n  padding-top: 24px;\n  padding-top: 1.5rem;\n}\n\n.pr-6 {\n  padding-right: 24px;\n  padding-right: 1.5rem;\n}\n\n.pb-6 {\n  padding-bottom: 24px;\n  padding-bottom: 1.5rem;\n}\n\n.pl-6 {\n  padding-left: 24px;\n  padding-left: 1.5rem;\n}\n\n.pt-8 {\n  padding-top: 32px;\n  padding-top: 2rem;\n}\n\n.pr-8 {\n  padding-right: 32px;\n  padding-right: 2rem;\n}\n\n.pb-8 {\n  padding-bottom: 32px;\n  padding-bottom: 2rem;\n}\n\n.pl-8 {\n  padding-left: 32px;\n  padding-left: 2rem;\n}\n\n.pt-10 {\n  padding-top: 40px;\n  padding-top: 2.5rem;\n}\n\n.pr-10 {\n  padding-right: 40px;\n  padding-right: 2.5rem;\n}\n\n.pb-10 {\n  padding-bottom: 40px;\n  padding-bottom: 2.5rem;\n}\n\n.pl-10 {\n  padding-left: 40px;\n  padding-left: 2.5rem;\n}\n\n.pt-12 {\n  padding-top: 48px;\n  padding-top: 3rem;\n}\n\n.pr-12 {\n  padding-right: 48px;\n  padding-right: 3rem;\n}\n\n.pb-12 {\n  padding-bottom: 48px;\n  padding-bottom: 3rem;\n}\n\n.pl-12 {\n  padding-left: 48px;\n  padding-left: 3rem;\n}\n\n.pt-16 {\n  padding-top: 64px;\n  padding-top: 4rem;\n}\n\n.pr-16 {\n  padding-right: 64px;\n  padding-right: 4rem;\n}\n\n.pb-16 {\n  padding-bottom: 64px;\n  padding-bottom: 4rem;\n}\n\n.pl-16 {\n  padding-left: 64px;\n  padding-left: 4rem;\n}\n\n.pt-20 {\n  padding-top: 80px;\n  padding-top: 5rem;\n}\n\n.pr-20 {\n  padding-right: 80px;\n  padding-right: 5rem;\n}\n\n.pb-20 {\n  padding-bottom: 80px;\n  padding-bottom: 5rem;\n}\n\n.pl-20 {\n  padding-left: 80px;\n  padding-left: 5rem;\n}\n\n.pt-24 {\n  padding-top: 96px;\n  padding-top: 6rem;\n}\n\n.pr-24 {\n  padding-right: 96px;\n  padding-right: 6rem;\n}\n\n.pb-24 {\n  padding-bottom: 96px;\n  padding-bottom: 6rem;\n}\n\n.pl-24 {\n  padding-left: 96px;\n  padding-left: 6rem;\n}\n\n.pt-32 {\n  padding-top: 128px;\n  padding-top: 8rem;\n}\n\n.pr-32 {\n  padding-right: 128px;\n  padding-right: 8rem;\n}\n\n.pb-32 {\n  padding-bottom: 128px;\n  padding-bottom: 8rem;\n}\n\n.pl-32 {\n  padding-left: 128px;\n  padding-left: 8rem;\n}\n\n.pt-px {\n  padding-top: 1px;\n}\n\n.pr-px {\n  padding-right: 1px;\n}\n\n.pb-px {\n  padding-bottom: 1px;\n}\n\n.pl-px {\n  padding-left: 1px;\n}\n\n.pointer-events-none {\n  pointer-events: none;\n}\n\n.pointer-events-auto {\n  pointer-events: auto;\n}\n\n.static {\n  position: static;\n}\n\n.fixed {\n  position: fixed;\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.sticky {\n  position: -webkit-sticky;\n  position: sticky;\n}\n\n.pin-none {\n  top: auto;\n  right: auto;\n  bottom: auto;\n  left: auto;\n}\n\n.pin {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.pin-y {\n  top: 0;\n  bottom: 0;\n}\n\n.pin-x {\n  right: 0;\n  left: 0;\n}\n\n.pin-t {\n  top: 0;\n}\n\n.pin-r {\n  right: 0;\n}\n\n.pin-b {\n  bottom: 0;\n}\n\n.pin-l {\n  left: 0;\n}\n\n.resize-none {\n  resize: none;\n}\n\n.resize-y {\n  resize: vertical;\n}\n\n.resize-x {\n  resize: horizontal;\n}\n\n.resize {\n  resize: both;\n}\n\n.shadow {\n  -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n          box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n}\n\n.shadow-md {\n  -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n          box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n}\n\n.shadow-lg {\n  -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n          box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n}\n\n.shadow-inner {\n  -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n          box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n}\n\n.shadow-outline {\n  -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n          box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n}\n\n.shadow-none {\n  -webkit-box-shadow: none;\n          box-shadow: none;\n}\n\n.hover\\:shadow:hover {\n  -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n          box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n}\n\n.hover\\:shadow-md:hover {\n  -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n          box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n}\n\n.hover\\:shadow-lg:hover {\n  -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n          box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n}\n\n.hover\\:shadow-inner:hover {\n  -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n          box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n}\n\n.hover\\:shadow-outline:hover {\n  -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n          box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n}\n\n.hover\\:shadow-none:hover {\n  -webkit-box-shadow: none;\n          box-shadow: none;\n}\n\n.focus\\:shadow:focus {\n  -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n          box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n}\n\n.focus\\:shadow-md:focus {\n  -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n          box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n}\n\n.focus\\:shadow-lg:focus {\n  -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n          box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n}\n\n.focus\\:shadow-inner:focus {\n  -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n          box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n}\n\n.focus\\:shadow-outline:focus {\n  -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n          box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n}\n\n.focus\\:shadow-none:focus {\n  -webkit-box-shadow: none;\n          box-shadow: none;\n}\n\n.fill-current {\n  fill: currentColor;\n}\n\n.stroke-current {\n  stroke: currentColor;\n}\n\n.table-auto {\n  table-layout: auto;\n}\n\n.table-fixed {\n  table-layout: fixed;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-justify {\n  text-align: justify;\n}\n\n.text-transparent {\n  color: transparent;\n}\n\n.text-black {\n  color: #22292f;\n}\n\n.text-grey-darkest {\n  color: #3d4852;\n}\n\n.text-grey-darker {\n  color: #606f7b;\n}\n\n.text-grey-dark {\n  color: #8795a1;\n}\n\n.text-grey {\n  color: #b8c2cc;\n}\n\n.text-grey-light {\n  color: #dae1e7;\n}\n\n.text-grey-lighter {\n  color: #f1f5f8;\n}\n\n.text-grey-lightest {\n  color: #f8fafc;\n}\n\n.text-white {\n  color: #fff;\n}\n\n.text-red-darkest {\n  color: #3b0d0c;\n}\n\n.text-red-darker {\n  color: #621b18;\n}\n\n.text-red-dark {\n  color: #cc1f1a;\n}\n\n.text-red {\n  color: #e3342f;\n}\n\n.text-red-light {\n  color: #ef5753;\n}\n\n.text-red-lighter {\n  color: #f9acaa;\n}\n\n.text-red-lightest {\n  color: #fcebea;\n}\n\n.text-orange-darkest {\n  color: #462a16;\n}\n\n.text-orange-darker {\n  color: #613b1f;\n}\n\n.text-orange-dark {\n  color: #de751f;\n}\n\n.text-orange {\n  color: #f6993f;\n}\n\n.text-orange-light {\n  color: #faad63;\n}\n\n.text-orange-lighter {\n  color: #fcd9b6;\n}\n\n.text-orange-lightest {\n  color: #fff5eb;\n}\n\n.text-yellow-darkest {\n  color: #453411;\n}\n\n.text-yellow-darker {\n  color: #684f1d;\n}\n\n.text-yellow-dark {\n  color: #f2d024;\n}\n\n.text-yellow {\n  color: #ffed4a;\n}\n\n.text-yellow-light {\n  color: #fff382;\n}\n\n.text-yellow-lighter {\n  color: #fff9c2;\n}\n\n.text-yellow-lightest {\n  color: #fcfbeb;\n}\n\n.text-green-darkest {\n  color: #0f2f21;\n}\n\n.text-green-darker {\n  color: #1a4731;\n}\n\n.text-green-dark {\n  color: #1f9d55;\n}\n\n.text-green {\n  color: #38c172;\n}\n\n.text-green-light {\n  color: #51d88a;\n}\n\n.text-green-lighter {\n  color: #a2f5bf;\n}\n\n.text-green-lightest {\n  color: #e3fcec;\n}\n\n.text-teal-darkest {\n  color: #0d3331;\n}\n\n.text-teal-darker {\n  color: #20504f;\n}\n\n.text-teal-dark {\n  color: #38a89d;\n}\n\n.text-teal {\n  color: #4dc0b5;\n}\n\n.text-teal-light {\n  color: #64d5ca;\n}\n\n.text-teal-lighter {\n  color: #a0f0ed;\n}\n\n.text-teal-lightest {\n  color: #e8fffe;\n}\n\n.text-blue-darkest {\n  color: #12283a;\n}\n\n.text-blue-darker {\n  color: #1c3d5a;\n}\n\n.text-blue-dark {\n  color: #2779bd;\n}\n\n.text-blue {\n  color: #3490dc;\n}\n\n.text-blue-light {\n  color: #6cb2eb;\n}\n\n.text-blue-lighter {\n  color: #bcdefa;\n}\n\n.text-blue-lightest {\n  color: #eff8ff;\n}\n\n.text-indigo-darkest {\n  color: #191e38;\n}\n\n.text-indigo-darker {\n  color: #2f365f;\n}\n\n.text-indigo-dark {\n  color: #5661b3;\n}\n\n.text-indigo {\n  color: #6574cd;\n}\n\n.text-indigo-light {\n  color: #7886d7;\n}\n\n.text-indigo-lighter {\n  color: #b2b7ff;\n}\n\n.text-indigo-lightest {\n  color: #e6e8ff;\n}\n\n.text-purple-darkest {\n  color: #21183c;\n}\n\n.text-purple-darker {\n  color: #382b5f;\n}\n\n.text-purple-dark {\n  color: #794acf;\n}\n\n.text-purple {\n  color: #9561e2;\n}\n\n.text-purple-light {\n  color: #a779e9;\n}\n\n.text-purple-lighter {\n  color: #d6bbfc;\n}\n\n.text-purple-lightest {\n  color: #f3ebff;\n}\n\n.text-pink-darkest {\n  color: #451225;\n}\n\n.text-pink-darker {\n  color: #6f213f;\n}\n\n.text-pink-dark {\n  color: #eb5286;\n}\n\n.text-pink {\n  color: #f66d9b;\n}\n\n.text-pink-light {\n  color: #fa7ea8;\n}\n\n.text-pink-lighter {\n  color: #ffbbca;\n}\n\n.text-pink-lightest {\n  color: #ffebef;\n}\n\n.hover\\:text-transparent:hover {\n  color: transparent;\n}\n\n.hover\\:text-black:hover {\n  color: #22292f;\n}\n\n.hover\\:text-grey-darkest:hover {\n  color: #3d4852;\n}\n\n.hover\\:text-grey-darker:hover {\n  color: #606f7b;\n}\n\n.hover\\:text-grey-dark:hover {\n  color: #8795a1;\n}\n\n.hover\\:text-grey:hover {\n  color: #b8c2cc;\n}\n\n.hover\\:text-grey-light:hover {\n  color: #dae1e7;\n}\n\n.hover\\:text-grey-lighter:hover {\n  color: #f1f5f8;\n}\n\n.hover\\:text-grey-lightest:hover {\n  color: #f8fafc;\n}\n\n.hover\\:text-white:hover {\n  color: #fff;\n}\n\n.hover\\:text-red-darkest:hover {\n  color: #3b0d0c;\n}\n\n.hover\\:text-red-darker:hover {\n  color: #621b18;\n}\n\n.hover\\:text-red-dark:hover {\n  color: #cc1f1a;\n}\n\n.hover\\:text-red:hover {\n  color: #e3342f;\n}\n\n.hover\\:text-red-light:hover {\n  color: #ef5753;\n}\n\n.hover\\:text-red-lighter:hover {\n  color: #f9acaa;\n}\n\n.hover\\:text-red-lightest:hover {\n  color: #fcebea;\n}\n\n.hover\\:text-orange-darkest:hover {\n  color: #462a16;\n}\n\n.hover\\:text-orange-darker:hover {\n  color: #613b1f;\n}\n\n.hover\\:text-orange-dark:hover {\n  color: #de751f;\n}\n\n.hover\\:text-orange:hover {\n  color: #f6993f;\n}\n\n.hover\\:text-orange-light:hover {\n  color: #faad63;\n}\n\n.hover\\:text-orange-lighter:hover {\n  color: #fcd9b6;\n}\n\n.hover\\:text-orange-lightest:hover {\n  color: #fff5eb;\n}\n\n.hover\\:text-yellow-darkest:hover {\n  color: #453411;\n}\n\n.hover\\:text-yellow-darker:hover {\n  color: #684f1d;\n}\n\n.hover\\:text-yellow-dark:hover {\n  color: #f2d024;\n}\n\n.hover\\:text-yellow:hover {\n  color: #ffed4a;\n}\n\n.hover\\:text-yellow-light:hover {\n  color: #fff382;\n}\n\n.hover\\:text-yellow-lighter:hover {\n  color: #fff9c2;\n}\n\n.hover\\:text-yellow-lightest:hover {\n  color: #fcfbeb;\n}\n\n.hover\\:text-green-darkest:hover {\n  color: #0f2f21;\n}\n\n.hover\\:text-green-darker:hover {\n  color: #1a4731;\n}\n\n.hover\\:text-green-dark:hover {\n  color: #1f9d55;\n}\n\n.hover\\:text-green:hover {\n  color: #38c172;\n}\n\n.hover\\:text-green-light:hover {\n  color: #51d88a;\n}\n\n.hover\\:text-green-lighter:hover {\n  color: #a2f5bf;\n}\n\n.hover\\:text-green-lightest:hover {\n  color: #e3fcec;\n}\n\n.hover\\:text-teal-darkest:hover {\n  color: #0d3331;\n}\n\n.hover\\:text-teal-darker:hover {\n  color: #20504f;\n}\n\n.hover\\:text-teal-dark:hover {\n  color: #38a89d;\n}\n\n.hover\\:text-teal:hover {\n  color: #4dc0b5;\n}\n\n.hover\\:text-teal-light:hover {\n  color: #64d5ca;\n}\n\n.hover\\:text-teal-lighter:hover {\n  color: #a0f0ed;\n}\n\n.hover\\:text-teal-lightest:hover {\n  color: #e8fffe;\n}\n\n.hover\\:text-blue-darkest:hover {\n  color: #12283a;\n}\n\n.hover\\:text-blue-darker:hover {\n  color: #1c3d5a;\n}\n\n.hover\\:text-blue-dark:hover {\n  color: #2779bd;\n}\n\n.hover\\:text-blue:hover {\n  color: #3490dc;\n}\n\n.hover\\:text-blue-light:hover {\n  color: #6cb2eb;\n}\n\n.hover\\:text-blue-lighter:hover {\n  color: #bcdefa;\n}\n\n.hover\\:text-blue-lightest:hover {\n  color: #eff8ff;\n}\n\n.hover\\:text-indigo-darkest:hover {\n  color: #191e38;\n}\n\n.hover\\:text-indigo-darker:hover {\n  color: #2f365f;\n}\n\n.hover\\:text-indigo-dark:hover {\n  color: #5661b3;\n}\n\n.hover\\:text-indigo:hover {\n  color: #6574cd;\n}\n\n.hover\\:text-indigo-light:hover {\n  color: #7886d7;\n}\n\n.hover\\:text-indigo-lighter:hover {\n  color: #b2b7ff;\n}\n\n.hover\\:text-indigo-lightest:hover {\n  color: #e6e8ff;\n}\n\n.hover\\:text-purple-darkest:hover {\n  color: #21183c;\n}\n\n.hover\\:text-purple-darker:hover {\n  color: #382b5f;\n}\n\n.hover\\:text-purple-dark:hover {\n  color: #794acf;\n}\n\n.hover\\:text-purple:hover {\n  color: #9561e2;\n}\n\n.hover\\:text-purple-light:hover {\n  color: #a779e9;\n}\n\n.hover\\:text-purple-lighter:hover {\n  color: #d6bbfc;\n}\n\n.hover\\:text-purple-lightest:hover {\n  color: #f3ebff;\n}\n\n.hover\\:text-pink-darkest:hover {\n  color: #451225;\n}\n\n.hover\\:text-pink-darker:hover {\n  color: #6f213f;\n}\n\n.hover\\:text-pink-dark:hover {\n  color: #eb5286;\n}\n\n.hover\\:text-pink:hover {\n  color: #f66d9b;\n}\n\n.hover\\:text-pink-light:hover {\n  color: #fa7ea8;\n}\n\n.hover\\:text-pink-lighter:hover {\n  color: #ffbbca;\n}\n\n.hover\\:text-pink-lightest:hover {\n  color: #ffebef;\n}\n\n.focus\\:text-transparent:focus {\n  color: transparent;\n}\n\n.focus\\:text-black:focus {\n  color: #22292f;\n}\n\n.focus\\:text-grey-darkest:focus {\n  color: #3d4852;\n}\n\n.focus\\:text-grey-darker:focus {\n  color: #606f7b;\n}\n\n.focus\\:text-grey-dark:focus {\n  color: #8795a1;\n}\n\n.focus\\:text-grey:focus {\n  color: #b8c2cc;\n}\n\n.focus\\:text-grey-light:focus {\n  color: #dae1e7;\n}\n\n.focus\\:text-grey-lighter:focus {\n  color: #f1f5f8;\n}\n\n.focus\\:text-grey-lightest:focus {\n  color: #f8fafc;\n}\n\n.focus\\:text-white:focus {\n  color: #fff;\n}\n\n.focus\\:text-red-darkest:focus {\n  color: #3b0d0c;\n}\n\n.focus\\:text-red-darker:focus {\n  color: #621b18;\n}\n\n.focus\\:text-red-dark:focus {\n  color: #cc1f1a;\n}\n\n.focus\\:text-red:focus {\n  color: #e3342f;\n}\n\n.focus\\:text-red-light:focus {\n  color: #ef5753;\n}\n\n.focus\\:text-red-lighter:focus {\n  color: #f9acaa;\n}\n\n.focus\\:text-red-lightest:focus {\n  color: #fcebea;\n}\n\n.focus\\:text-orange-darkest:focus {\n  color: #462a16;\n}\n\n.focus\\:text-orange-darker:focus {\n  color: #613b1f;\n}\n\n.focus\\:text-orange-dark:focus {\n  color: #de751f;\n}\n\n.focus\\:text-orange:focus {\n  color: #f6993f;\n}\n\n.focus\\:text-orange-light:focus {\n  color: #faad63;\n}\n\n.focus\\:text-orange-lighter:focus {\n  color: #fcd9b6;\n}\n\n.focus\\:text-orange-lightest:focus {\n  color: #fff5eb;\n}\n\n.focus\\:text-yellow-darkest:focus {\n  color: #453411;\n}\n\n.focus\\:text-yellow-darker:focus {\n  color: #684f1d;\n}\n\n.focus\\:text-yellow-dark:focus {\n  color: #f2d024;\n}\n\n.focus\\:text-yellow:focus {\n  color: #ffed4a;\n}\n\n.focus\\:text-yellow-light:focus {\n  color: #fff382;\n}\n\n.focus\\:text-yellow-lighter:focus {\n  color: #fff9c2;\n}\n\n.focus\\:text-yellow-lightest:focus {\n  color: #fcfbeb;\n}\n\n.focus\\:text-green-darkest:focus {\n  color: #0f2f21;\n}\n\n.focus\\:text-green-darker:focus {\n  color: #1a4731;\n}\n\n.focus\\:text-green-dark:focus {\n  color: #1f9d55;\n}\n\n.focus\\:text-green:focus {\n  color: #38c172;\n}\n\n.focus\\:text-green-light:focus {\n  color: #51d88a;\n}\n\n.focus\\:text-green-lighter:focus {\n  color: #a2f5bf;\n}\n\n.focus\\:text-green-lightest:focus {\n  color: #e3fcec;\n}\n\n.focus\\:text-teal-darkest:focus {\n  color: #0d3331;\n}\n\n.focus\\:text-teal-darker:focus {\n  color: #20504f;\n}\n\n.focus\\:text-teal-dark:focus {\n  color: #38a89d;\n}\n\n.focus\\:text-teal:focus {\n  color: #4dc0b5;\n}\n\n.focus\\:text-teal-light:focus {\n  color: #64d5ca;\n}\n\n.focus\\:text-teal-lighter:focus {\n  color: #a0f0ed;\n}\n\n.focus\\:text-teal-lightest:focus {\n  color: #e8fffe;\n}\n\n.focus\\:text-blue-darkest:focus {\n  color: #12283a;\n}\n\n.focus\\:text-blue-darker:focus {\n  color: #1c3d5a;\n}\n\n.focus\\:text-blue-dark:focus {\n  color: #2779bd;\n}\n\n.focus\\:text-blue:focus {\n  color: #3490dc;\n}\n\n.focus\\:text-blue-light:focus {\n  color: #6cb2eb;\n}\n\n.focus\\:text-blue-lighter:focus {\n  color: #bcdefa;\n}\n\n.focus\\:text-blue-lightest:focus {\n  color: #eff8ff;\n}\n\n.focus\\:text-indigo-darkest:focus {\n  color: #191e38;\n}\n\n.focus\\:text-indigo-darker:focus {\n  color: #2f365f;\n}\n\n.focus\\:text-indigo-dark:focus {\n  color: #5661b3;\n}\n\n.focus\\:text-indigo:focus {\n  color: #6574cd;\n}\n\n.focus\\:text-indigo-light:focus {\n  color: #7886d7;\n}\n\n.focus\\:text-indigo-lighter:focus {\n  color: #b2b7ff;\n}\n\n.focus\\:text-indigo-lightest:focus {\n  color: #e6e8ff;\n}\n\n.focus\\:text-purple-darkest:focus {\n  color: #21183c;\n}\n\n.focus\\:text-purple-darker:focus {\n  color: #382b5f;\n}\n\n.focus\\:text-purple-dark:focus {\n  color: #794acf;\n}\n\n.focus\\:text-purple:focus {\n  color: #9561e2;\n}\n\n.focus\\:text-purple-light:focus {\n  color: #a779e9;\n}\n\n.focus\\:text-purple-lighter:focus {\n  color: #d6bbfc;\n}\n\n.focus\\:text-purple-lightest:focus {\n  color: #f3ebff;\n}\n\n.focus\\:text-pink-darkest:focus {\n  color: #451225;\n}\n\n.focus\\:text-pink-darker:focus {\n  color: #6f213f;\n}\n\n.focus\\:text-pink-dark:focus {\n  color: #eb5286;\n}\n\n.focus\\:text-pink:focus {\n  color: #f66d9b;\n}\n\n.focus\\:text-pink-light:focus {\n  color: #fa7ea8;\n}\n\n.focus\\:text-pink-lighter:focus {\n  color: #ffbbca;\n}\n\n.focus\\:text-pink-lightest:focus {\n  color: #ffebef;\n}\n\n.text-xs {\n  font-size: 12px;\n  font-size: .75rem;\n}\n\n.text-sm {\n  font-size: 14px;\n  font-size: .875rem;\n}\n\n.text-base {\n  font-size: 16px;\n  font-size: 1rem;\n}\n\n.text-lg {\n  font-size: 18px;\n  font-size: 1.125rem;\n}\n\n.text-xl {\n  font-size: 20px;\n  font-size: 1.25rem;\n}\n\n.text-2xl {\n  font-size: 24px;\n  font-size: 1.5rem;\n}\n\n.text-3xl {\n  font-size: 30px;\n  font-size: 1.875rem;\n}\n\n.text-4xl {\n  font-size: 36px;\n  font-size: 2.25rem;\n}\n\n.text-5xl {\n  font-size: 48px;\n  font-size: 3rem;\n}\n\n.italic {\n  font-style: italic;\n}\n\n.roman {\n  font-style: normal;\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.lowercase {\n  text-transform: lowercase;\n}\n\n.capitalize {\n  text-transform: capitalize;\n}\n\n.normal-case {\n  text-transform: none;\n}\n\n.underline {\n  text-decoration: underline;\n}\n\n.line-through {\n  text-decoration: line-through;\n}\n\n.no-underline {\n  text-decoration: none;\n}\n\n.antialiased {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.subpixel-antialiased {\n  -webkit-font-smoothing: auto;\n  -moz-osx-font-smoothing: auto;\n}\n\n.hover\\:italic:hover {\n  font-style: italic;\n}\n\n.hover\\:roman:hover {\n  font-style: normal;\n}\n\n.hover\\:uppercase:hover {\n  text-transform: uppercase;\n}\n\n.hover\\:lowercase:hover {\n  text-transform: lowercase;\n}\n\n.hover\\:capitalize:hover {\n  text-transform: capitalize;\n}\n\n.hover\\:normal-case:hover {\n  text-transform: none;\n}\n\n.hover\\:underline:hover {\n  text-decoration: underline;\n}\n\n.hover\\:line-through:hover {\n  text-decoration: line-through;\n}\n\n.hover\\:no-underline:hover {\n  text-decoration: none;\n}\n\n.hover\\:antialiased:hover {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.hover\\:subpixel-antialiased:hover {\n  -webkit-font-smoothing: auto;\n  -moz-osx-font-smoothing: auto;\n}\n\n.focus\\:italic:focus {\n  font-style: italic;\n}\n\n.focus\\:roman:focus {\n  font-style: normal;\n}\n\n.focus\\:uppercase:focus {\n  text-transform: uppercase;\n}\n\n.focus\\:lowercase:focus {\n  text-transform: lowercase;\n}\n\n.focus\\:capitalize:focus {\n  text-transform: capitalize;\n}\n\n.focus\\:normal-case:focus {\n  text-transform: none;\n}\n\n.focus\\:underline:focus {\n  text-decoration: underline;\n}\n\n.focus\\:line-through:focus {\n  text-decoration: line-through;\n}\n\n.focus\\:no-underline:focus {\n  text-decoration: none;\n}\n\n.focus\\:antialiased:focus {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.focus\\:subpixel-antialiased:focus {\n  -webkit-font-smoothing: auto;\n  -moz-osx-font-smoothing: auto;\n}\n\n.tracking-tight {\n  letter-spacing: -0.05em;\n}\n\n.tracking-normal {\n  letter-spacing: 0;\n}\n\n.tracking-wide {\n  letter-spacing: .05em;\n}\n\n.select-none {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n.select-text {\n  -webkit-user-select: text;\n     -moz-user-select: text;\n      -ms-user-select: text;\n          user-select: text;\n}\n\n.align-baseline {\n  vertical-align: baseline;\n}\n\n.align-top {\n  vertical-align: top;\n}\n\n.align-middle {\n  vertical-align: middle;\n}\n\n.align-bottom {\n  vertical-align: bottom;\n}\n\n.align-text-top {\n  vertical-align: text-top;\n}\n\n.align-text-bottom {\n  vertical-align: text-bottom;\n}\n\n.visible {\n  visibility: visible;\n}\n\n.invisible {\n  visibility: hidden;\n}\n\n.whitespace-normal {\n  white-space: normal;\n}\n\n.whitespace-no-wrap {\n  white-space: nowrap;\n}\n\n.whitespace-pre {\n  white-space: pre;\n}\n\n.whitespace-pre-line {\n  white-space: pre-line;\n}\n\n.whitespace-pre-wrap {\n  white-space: pre-wrap;\n}\n\n.break-words {\n  word-wrap: break-word;\n}\n\n.break-normal {\n  word-wrap: normal;\n}\n\n.truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.w-1 {\n  width: 4px;\n  width: .25rem;\n}\n\n.w-2 {\n  width: 8px;\n  width: .5rem;\n}\n\n.w-3 {\n  width: 12px;\n  width: .75rem;\n}\n\n.w-4 {\n  width: 16px;\n  width: 1rem;\n}\n\n.w-5 {\n  width: 20px;\n  width: 1.25rem;\n}\n\n.w-6 {\n  width: 24px;\n  width: 1.5rem;\n}\n\n.w-8 {\n  width: 32px;\n  width: 2rem;\n}\n\n.w-10 {\n  width: 40px;\n  width: 2.5rem;\n}\n\n.w-12 {\n  width: 48px;\n  width: 3rem;\n}\n\n.w-16 {\n  width: 64px;\n  width: 4rem;\n}\n\n.w-24 {\n  width: 96px;\n  width: 6rem;\n}\n\n.w-32 {\n  width: 128px;\n  width: 8rem;\n}\n\n.w-48 {\n  width: 192px;\n  width: 12rem;\n}\n\n.w-64 {\n  width: 256px;\n  width: 16rem;\n}\n\n.w-auto {\n  width: auto;\n}\n\n.w-px {\n  width: 1px;\n}\n\n.w-1\\/2 {\n  width: 50%;\n}\n\n.w-1\\/3 {\n  width: 33.33333%;\n}\n\n.w-2\\/3 {\n  width: 66.66667%;\n}\n\n.w-1\\/4 {\n  width: 25%;\n}\n\n.w-3\\/4 {\n  width: 75%;\n}\n\n.w-1\\/5 {\n  width: 20%;\n}\n\n.w-2\\/5 {\n  width: 40%;\n}\n\n.w-3\\/5 {\n  width: 60%;\n}\n\n.w-4\\/5 {\n  width: 80%;\n}\n\n.w-1\\/6 {\n  width: 16.66667%;\n}\n\n.w-5\\/6 {\n  width: 83.33333%;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.w-screen {\n  width: 100vw;\n}\n\n.z-0 {\n  z-index: 0;\n}\n\n.z-10 {\n  z-index: 10;\n}\n\n.z-20 {\n  z-index: 20;\n}\n\n.z-30 {\n  z-index: 30;\n}\n\n.z-40 {\n  z-index: 40;\n}\n\n.z-50 {\n  z-index: 50;\n}\n\n.z-auto {\n  z-index: auto;\n}\n\n@media (min-width: 576px) {\n  .sm\\:list-reset {\n    list-style: none;\n    padding: 0;\n  }\n\n  .sm\\:appearance-none {\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n  }\n\n  .sm\\:bg-fixed {\n    background-attachment: fixed;\n  }\n\n  .sm\\:bg-local {\n    background-attachment: local;\n  }\n\n  .sm\\:bg-scroll {\n    background-attachment: scroll;\n  }\n\n  .sm\\:bg-transparent {\n    background-color: transparent;\n  }\n\n  .sm\\:bg-black {\n    background-color: #22292f;\n  }\n\n  .sm\\:bg-grey-darkest {\n    background-color: #3d4852;\n  }\n\n  .sm\\:bg-grey-darker {\n    background-color: #606f7b;\n  }\n\n  .sm\\:bg-grey-dark {\n    background-color: #8795a1;\n  }\n\n  .sm\\:bg-grey {\n    background-color: #b8c2cc;\n  }\n\n  .sm\\:bg-grey-light {\n    background-color: #dae1e7;\n  }\n\n  .sm\\:bg-grey-lighter {\n    background-color: #f1f5f8;\n  }\n\n  .sm\\:bg-grey-lightest {\n    background-color: #f8fafc;\n  }\n\n  .sm\\:bg-white {\n    background-color: #fff;\n  }\n\n  .sm\\:bg-red-darkest {\n    background-color: #3b0d0c;\n  }\n\n  .sm\\:bg-red-darker {\n    background-color: #621b18;\n  }\n\n  .sm\\:bg-red-dark {\n    background-color: #cc1f1a;\n  }\n\n  .sm\\:bg-red {\n    background-color: #e3342f;\n  }\n\n  .sm\\:bg-red-light {\n    background-color: #ef5753;\n  }\n\n  .sm\\:bg-red-lighter {\n    background-color: #f9acaa;\n  }\n\n  .sm\\:bg-red-lightest {\n    background-color: #fcebea;\n  }\n\n  .sm\\:bg-orange-darkest {\n    background-color: #462a16;\n  }\n\n  .sm\\:bg-orange-darker {\n    background-color: #613b1f;\n  }\n\n  .sm\\:bg-orange-dark {\n    background-color: #de751f;\n  }\n\n  .sm\\:bg-orange {\n    background-color: #f6993f;\n  }\n\n  .sm\\:bg-orange-light {\n    background-color: #faad63;\n  }\n\n  .sm\\:bg-orange-lighter {\n    background-color: #fcd9b6;\n  }\n\n  .sm\\:bg-orange-lightest {\n    background-color: #fff5eb;\n  }\n\n  .sm\\:bg-yellow-darkest {\n    background-color: #453411;\n  }\n\n  .sm\\:bg-yellow-darker {\n    background-color: #684f1d;\n  }\n\n  .sm\\:bg-yellow-dark {\n    background-color: #f2d024;\n  }\n\n  .sm\\:bg-yellow {\n    background-color: #ffed4a;\n  }\n\n  .sm\\:bg-yellow-light {\n    background-color: #fff382;\n  }\n\n  .sm\\:bg-yellow-lighter {\n    background-color: #fff9c2;\n  }\n\n  .sm\\:bg-yellow-lightest {\n    background-color: #fcfbeb;\n  }\n\n  .sm\\:bg-green-darkest {\n    background-color: #0f2f21;\n  }\n\n  .sm\\:bg-green-darker {\n    background-color: #1a4731;\n  }\n\n  .sm\\:bg-green-dark {\n    background-color: #1f9d55;\n  }\n\n  .sm\\:bg-green {\n    background-color: #38c172;\n  }\n\n  .sm\\:bg-green-light {\n    background-color: #51d88a;\n  }\n\n  .sm\\:bg-green-lighter {\n    background-color: #a2f5bf;\n  }\n\n  .sm\\:bg-green-lightest {\n    background-color: #e3fcec;\n  }\n\n  .sm\\:bg-teal-darkest {\n    background-color: #0d3331;\n  }\n\n  .sm\\:bg-teal-darker {\n    background-color: #20504f;\n  }\n\n  .sm\\:bg-teal-dark {\n    background-color: #38a89d;\n  }\n\n  .sm\\:bg-teal {\n    background-color: #4dc0b5;\n  }\n\n  .sm\\:bg-teal-light {\n    background-color: #64d5ca;\n  }\n\n  .sm\\:bg-teal-lighter {\n    background-color: #a0f0ed;\n  }\n\n  .sm\\:bg-teal-lightest {\n    background-color: #e8fffe;\n  }\n\n  .sm\\:bg-blue-darkest {\n    background-color: #12283a;\n  }\n\n  .sm\\:bg-blue-darker {\n    background-color: #1c3d5a;\n  }\n\n  .sm\\:bg-blue-dark {\n    background-color: #2779bd;\n  }\n\n  .sm\\:bg-blue {\n    background-color: #3490dc;\n  }\n\n  .sm\\:bg-blue-light {\n    background-color: #6cb2eb;\n  }\n\n  .sm\\:bg-blue-lighter {\n    background-color: #bcdefa;\n  }\n\n  .sm\\:bg-blue-lightest {\n    background-color: #eff8ff;\n  }\n\n  .sm\\:bg-indigo-darkest {\n    background-color: #191e38;\n  }\n\n  .sm\\:bg-indigo-darker {\n    background-color: #2f365f;\n  }\n\n  .sm\\:bg-indigo-dark {\n    background-color: #5661b3;\n  }\n\n  .sm\\:bg-indigo {\n    background-color: #6574cd;\n  }\n\n  .sm\\:bg-indigo-light {\n    background-color: #7886d7;\n  }\n\n  .sm\\:bg-indigo-lighter {\n    background-color: #b2b7ff;\n  }\n\n  .sm\\:bg-indigo-lightest {\n    background-color: #e6e8ff;\n  }\n\n  .sm\\:bg-purple-darkest {\n    background-color: #21183c;\n  }\n\n  .sm\\:bg-purple-darker {\n    background-color: #382b5f;\n  }\n\n  .sm\\:bg-purple-dark {\n    background-color: #794acf;\n  }\n\n  .sm\\:bg-purple {\n    background-color: #9561e2;\n  }\n\n  .sm\\:bg-purple-light {\n    background-color: #a779e9;\n  }\n\n  .sm\\:bg-purple-lighter {\n    background-color: #d6bbfc;\n  }\n\n  .sm\\:bg-purple-lightest {\n    background-color: #f3ebff;\n  }\n\n  .sm\\:bg-pink-darkest {\n    background-color: #451225;\n  }\n\n  .sm\\:bg-pink-darker {\n    background-color: #6f213f;\n  }\n\n  .sm\\:bg-pink-dark {\n    background-color: #eb5286;\n  }\n\n  .sm\\:bg-pink {\n    background-color: #f66d9b;\n  }\n\n  .sm\\:bg-pink-light {\n    background-color: #fa7ea8;\n  }\n\n  .sm\\:bg-pink-lighter {\n    background-color: #ffbbca;\n  }\n\n  .sm\\:bg-pink-lightest {\n    background-color: #ffebef;\n  }\n\n  .sm\\:hover\\:bg-transparent:hover {\n    background-color: transparent;\n  }\n\n  .sm\\:hover\\:bg-black:hover {\n    background-color: #22292f;\n  }\n\n  .sm\\:hover\\:bg-grey-darkest:hover {\n    background-color: #3d4852;\n  }\n\n  .sm\\:hover\\:bg-grey-darker:hover {\n    background-color: #606f7b;\n  }\n\n  .sm\\:hover\\:bg-grey-dark:hover {\n    background-color: #8795a1;\n  }\n\n  .sm\\:hover\\:bg-grey:hover {\n    background-color: #b8c2cc;\n  }\n\n  .sm\\:hover\\:bg-grey-light:hover {\n    background-color: #dae1e7;\n  }\n\n  .sm\\:hover\\:bg-grey-lighter:hover {\n    background-color: #f1f5f8;\n  }\n\n  .sm\\:hover\\:bg-grey-lightest:hover {\n    background-color: #f8fafc;\n  }\n\n  .sm\\:hover\\:bg-white:hover {\n    background-color: #fff;\n  }\n\n  .sm\\:hover\\:bg-red-darkest:hover {\n    background-color: #3b0d0c;\n  }\n\n  .sm\\:hover\\:bg-red-darker:hover {\n    background-color: #621b18;\n  }\n\n  .sm\\:hover\\:bg-red-dark:hover {\n    background-color: #cc1f1a;\n  }\n\n  .sm\\:hover\\:bg-red:hover {\n    background-color: #e3342f;\n  }\n\n  .sm\\:hover\\:bg-red-light:hover {\n    background-color: #ef5753;\n  }\n\n  .sm\\:hover\\:bg-red-lighter:hover {\n    background-color: #f9acaa;\n  }\n\n  .sm\\:hover\\:bg-red-lightest:hover {\n    background-color: #fcebea;\n  }\n\n  .sm\\:hover\\:bg-orange-darkest:hover {\n    background-color: #462a16;\n  }\n\n  .sm\\:hover\\:bg-orange-darker:hover {\n    background-color: #613b1f;\n  }\n\n  .sm\\:hover\\:bg-orange-dark:hover {\n    background-color: #de751f;\n  }\n\n  .sm\\:hover\\:bg-orange:hover {\n    background-color: #f6993f;\n  }\n\n  .sm\\:hover\\:bg-orange-light:hover {\n    background-color: #faad63;\n  }\n\n  .sm\\:hover\\:bg-orange-lighter:hover {\n    background-color: #fcd9b6;\n  }\n\n  .sm\\:hover\\:bg-orange-lightest:hover {\n    background-color: #fff5eb;\n  }\n\n  .sm\\:hover\\:bg-yellow-darkest:hover {\n    background-color: #453411;\n  }\n\n  .sm\\:hover\\:bg-yellow-darker:hover {\n    background-color: #684f1d;\n  }\n\n  .sm\\:hover\\:bg-yellow-dark:hover {\n    background-color: #f2d024;\n  }\n\n  .sm\\:hover\\:bg-yellow:hover {\n    background-color: #ffed4a;\n  }\n\n  .sm\\:hover\\:bg-yellow-light:hover {\n    background-color: #fff382;\n  }\n\n  .sm\\:hover\\:bg-yellow-lighter:hover {\n    background-color: #fff9c2;\n  }\n\n  .sm\\:hover\\:bg-yellow-lightest:hover {\n    background-color: #fcfbeb;\n  }\n\n  .sm\\:hover\\:bg-green-darkest:hover {\n    background-color: #0f2f21;\n  }\n\n  .sm\\:hover\\:bg-green-darker:hover {\n    background-color: #1a4731;\n  }\n\n  .sm\\:hover\\:bg-green-dark:hover {\n    background-color: #1f9d55;\n  }\n\n  .sm\\:hover\\:bg-green:hover {\n    background-color: #38c172;\n  }\n\n  .sm\\:hover\\:bg-green-light:hover {\n    background-color: #51d88a;\n  }\n\n  .sm\\:hover\\:bg-green-lighter:hover {\n    background-color: #a2f5bf;\n  }\n\n  .sm\\:hover\\:bg-green-lightest:hover {\n    background-color: #e3fcec;\n  }\n\n  .sm\\:hover\\:bg-teal-darkest:hover {\n    background-color: #0d3331;\n  }\n\n  .sm\\:hover\\:bg-teal-darker:hover {\n    background-color: #20504f;\n  }\n\n  .sm\\:hover\\:bg-teal-dark:hover {\n    background-color: #38a89d;\n  }\n\n  .sm\\:hover\\:bg-teal:hover {\n    background-color: #4dc0b5;\n  }\n\n  .sm\\:hover\\:bg-teal-light:hover {\n    background-color: #64d5ca;\n  }\n\n  .sm\\:hover\\:bg-teal-lighter:hover {\n    background-color: #a0f0ed;\n  }\n\n  .sm\\:hover\\:bg-teal-lightest:hover {\n    background-color: #e8fffe;\n  }\n\n  .sm\\:hover\\:bg-blue-darkest:hover {\n    background-color: #12283a;\n  }\n\n  .sm\\:hover\\:bg-blue-darker:hover {\n    background-color: #1c3d5a;\n  }\n\n  .sm\\:hover\\:bg-blue-dark:hover {\n    background-color: #2779bd;\n  }\n\n  .sm\\:hover\\:bg-blue:hover {\n    background-color: #3490dc;\n  }\n\n  .sm\\:hover\\:bg-blue-light:hover {\n    background-color: #6cb2eb;\n  }\n\n  .sm\\:hover\\:bg-blue-lighter:hover {\n    background-color: #bcdefa;\n  }\n\n  .sm\\:hover\\:bg-blue-lightest:hover {\n    background-color: #eff8ff;\n  }\n\n  .sm\\:hover\\:bg-indigo-darkest:hover {\n    background-color: #191e38;\n  }\n\n  .sm\\:hover\\:bg-indigo-darker:hover {\n    background-color: #2f365f;\n  }\n\n  .sm\\:hover\\:bg-indigo-dark:hover {\n    background-color: #5661b3;\n  }\n\n  .sm\\:hover\\:bg-indigo:hover {\n    background-color: #6574cd;\n  }\n\n  .sm\\:hover\\:bg-indigo-light:hover {\n    background-color: #7886d7;\n  }\n\n  .sm\\:hover\\:bg-indigo-lighter:hover {\n    background-color: #b2b7ff;\n  }\n\n  .sm\\:hover\\:bg-indigo-lightest:hover {\n    background-color: #e6e8ff;\n  }\n\n  .sm\\:hover\\:bg-purple-darkest:hover {\n    background-color: #21183c;\n  }\n\n  .sm\\:hover\\:bg-purple-darker:hover {\n    background-color: #382b5f;\n  }\n\n  .sm\\:hover\\:bg-purple-dark:hover {\n    background-color: #794acf;\n  }\n\n  .sm\\:hover\\:bg-purple:hover {\n    background-color: #9561e2;\n  }\n\n  .sm\\:hover\\:bg-purple-light:hover {\n    background-color: #a779e9;\n  }\n\n  .sm\\:hover\\:bg-purple-lighter:hover {\n    background-color: #d6bbfc;\n  }\n\n  .sm\\:hover\\:bg-purple-lightest:hover {\n    background-color: #f3ebff;\n  }\n\n  .sm\\:hover\\:bg-pink-darkest:hover {\n    background-color: #451225;\n  }\n\n  .sm\\:hover\\:bg-pink-darker:hover {\n    background-color: #6f213f;\n  }\n\n  .sm\\:hover\\:bg-pink-dark:hover {\n    background-color: #eb5286;\n  }\n\n  .sm\\:hover\\:bg-pink:hover {\n    background-color: #f66d9b;\n  }\n\n  .sm\\:hover\\:bg-pink-light:hover {\n    background-color: #fa7ea8;\n  }\n\n  .sm\\:hover\\:bg-pink-lighter:hover {\n    background-color: #ffbbca;\n  }\n\n  .sm\\:hover\\:bg-pink-lightest:hover {\n    background-color: #ffebef;\n  }\n\n  .sm\\:focus\\:bg-transparent:focus {\n    background-color: transparent;\n  }\n\n  .sm\\:focus\\:bg-black:focus {\n    background-color: #22292f;\n  }\n\n  .sm\\:focus\\:bg-grey-darkest:focus {\n    background-color: #3d4852;\n  }\n\n  .sm\\:focus\\:bg-grey-darker:focus {\n    background-color: #606f7b;\n  }\n\n  .sm\\:focus\\:bg-grey-dark:focus {\n    background-color: #8795a1;\n  }\n\n  .sm\\:focus\\:bg-grey:focus {\n    background-color: #b8c2cc;\n  }\n\n  .sm\\:focus\\:bg-grey-light:focus {\n    background-color: #dae1e7;\n  }\n\n  .sm\\:focus\\:bg-grey-lighter:focus {\n    background-color: #f1f5f8;\n  }\n\n  .sm\\:focus\\:bg-grey-lightest:focus {\n    background-color: #f8fafc;\n  }\n\n  .sm\\:focus\\:bg-white:focus {\n    background-color: #fff;\n  }\n\n  .sm\\:focus\\:bg-red-darkest:focus {\n    background-color: #3b0d0c;\n  }\n\n  .sm\\:focus\\:bg-red-darker:focus {\n    background-color: #621b18;\n  }\n\n  .sm\\:focus\\:bg-red-dark:focus {\n    background-color: #cc1f1a;\n  }\n\n  .sm\\:focus\\:bg-red:focus {\n    background-color: #e3342f;\n  }\n\n  .sm\\:focus\\:bg-red-light:focus {\n    background-color: #ef5753;\n  }\n\n  .sm\\:focus\\:bg-red-lighter:focus {\n    background-color: #f9acaa;\n  }\n\n  .sm\\:focus\\:bg-red-lightest:focus {\n    background-color: #fcebea;\n  }\n\n  .sm\\:focus\\:bg-orange-darkest:focus {\n    background-color: #462a16;\n  }\n\n  .sm\\:focus\\:bg-orange-darker:focus {\n    background-color: #613b1f;\n  }\n\n  .sm\\:focus\\:bg-orange-dark:focus {\n    background-color: #de751f;\n  }\n\n  .sm\\:focus\\:bg-orange:focus {\n    background-color: #f6993f;\n  }\n\n  .sm\\:focus\\:bg-orange-light:focus {\n    background-color: #faad63;\n  }\n\n  .sm\\:focus\\:bg-orange-lighter:focus {\n    background-color: #fcd9b6;\n  }\n\n  .sm\\:focus\\:bg-orange-lightest:focus {\n    background-color: #fff5eb;\n  }\n\n  .sm\\:focus\\:bg-yellow-darkest:focus {\n    background-color: #453411;\n  }\n\n  .sm\\:focus\\:bg-yellow-darker:focus {\n    background-color: #684f1d;\n  }\n\n  .sm\\:focus\\:bg-yellow-dark:focus {\n    background-color: #f2d024;\n  }\n\n  .sm\\:focus\\:bg-yellow:focus {\n    background-color: #ffed4a;\n  }\n\n  .sm\\:focus\\:bg-yellow-light:focus {\n    background-color: #fff382;\n  }\n\n  .sm\\:focus\\:bg-yellow-lighter:focus {\n    background-color: #fff9c2;\n  }\n\n  .sm\\:focus\\:bg-yellow-lightest:focus {\n    background-color: #fcfbeb;\n  }\n\n  .sm\\:focus\\:bg-green-darkest:focus {\n    background-color: #0f2f21;\n  }\n\n  .sm\\:focus\\:bg-green-darker:focus {\n    background-color: #1a4731;\n  }\n\n  .sm\\:focus\\:bg-green-dark:focus {\n    background-color: #1f9d55;\n  }\n\n  .sm\\:focus\\:bg-green:focus {\n    background-color: #38c172;\n  }\n\n  .sm\\:focus\\:bg-green-light:focus {\n    background-color: #51d88a;\n  }\n\n  .sm\\:focus\\:bg-green-lighter:focus {\n    background-color: #a2f5bf;\n  }\n\n  .sm\\:focus\\:bg-green-lightest:focus {\n    background-color: #e3fcec;\n  }\n\n  .sm\\:focus\\:bg-teal-darkest:focus {\n    background-color: #0d3331;\n  }\n\n  .sm\\:focus\\:bg-teal-darker:focus {\n    background-color: #20504f;\n  }\n\n  .sm\\:focus\\:bg-teal-dark:focus {\n    background-color: #38a89d;\n  }\n\n  .sm\\:focus\\:bg-teal:focus {\n    background-color: #4dc0b5;\n  }\n\n  .sm\\:focus\\:bg-teal-light:focus {\n    background-color: #64d5ca;\n  }\n\n  .sm\\:focus\\:bg-teal-lighter:focus {\n    background-color: #a0f0ed;\n  }\n\n  .sm\\:focus\\:bg-teal-lightest:focus {\n    background-color: #e8fffe;\n  }\n\n  .sm\\:focus\\:bg-blue-darkest:focus {\n    background-color: #12283a;\n  }\n\n  .sm\\:focus\\:bg-blue-darker:focus {\n    background-color: #1c3d5a;\n  }\n\n  .sm\\:focus\\:bg-blue-dark:focus {\n    background-color: #2779bd;\n  }\n\n  .sm\\:focus\\:bg-blue:focus {\n    background-color: #3490dc;\n  }\n\n  .sm\\:focus\\:bg-blue-light:focus {\n    background-color: #6cb2eb;\n  }\n\n  .sm\\:focus\\:bg-blue-lighter:focus {\n    background-color: #bcdefa;\n  }\n\n  .sm\\:focus\\:bg-blue-lightest:focus {\n    background-color: #eff8ff;\n  }\n\n  .sm\\:focus\\:bg-indigo-darkest:focus {\n    background-color: #191e38;\n  }\n\n  .sm\\:focus\\:bg-indigo-darker:focus {\n    background-color: #2f365f;\n  }\n\n  .sm\\:focus\\:bg-indigo-dark:focus {\n    background-color: #5661b3;\n  }\n\n  .sm\\:focus\\:bg-indigo:focus {\n    background-color: #6574cd;\n  }\n\n  .sm\\:focus\\:bg-indigo-light:focus {\n    background-color: #7886d7;\n  }\n\n  .sm\\:focus\\:bg-indigo-lighter:focus {\n    background-color: #b2b7ff;\n  }\n\n  .sm\\:focus\\:bg-indigo-lightest:focus {\n    background-color: #e6e8ff;\n  }\n\n  .sm\\:focus\\:bg-purple-darkest:focus {\n    background-color: #21183c;\n  }\n\n  .sm\\:focus\\:bg-purple-darker:focus {\n    background-color: #382b5f;\n  }\n\n  .sm\\:focus\\:bg-purple-dark:focus {\n    background-color: #794acf;\n  }\n\n  .sm\\:focus\\:bg-purple:focus {\n    background-color: #9561e2;\n  }\n\n  .sm\\:focus\\:bg-purple-light:focus {\n    background-color: #a779e9;\n  }\n\n  .sm\\:focus\\:bg-purple-lighter:focus {\n    background-color: #d6bbfc;\n  }\n\n  .sm\\:focus\\:bg-purple-lightest:focus {\n    background-color: #f3ebff;\n  }\n\n  .sm\\:focus\\:bg-pink-darkest:focus {\n    background-color: #451225;\n  }\n\n  .sm\\:focus\\:bg-pink-darker:focus {\n    background-color: #6f213f;\n  }\n\n  .sm\\:focus\\:bg-pink-dark:focus {\n    background-color: #eb5286;\n  }\n\n  .sm\\:focus\\:bg-pink:focus {\n    background-color: #f66d9b;\n  }\n\n  .sm\\:focus\\:bg-pink-light:focus {\n    background-color: #fa7ea8;\n  }\n\n  .sm\\:focus\\:bg-pink-lighter:focus {\n    background-color: #ffbbca;\n  }\n\n  .sm\\:focus\\:bg-pink-lightest:focus {\n    background-color: #ffebef;\n  }\n\n  .sm\\:bg-bottom {\n    background-position: bottom;\n  }\n\n  .sm\\:bg-center {\n    background-position: center;\n  }\n\n  .sm\\:bg-left {\n    background-position: left;\n  }\n\n  .sm\\:bg-left-bottom {\n    background-position: left bottom;\n  }\n\n  .sm\\:bg-left-top {\n    background-position: left top;\n  }\n\n  .sm\\:bg-right {\n    background-position: right;\n  }\n\n  .sm\\:bg-right-bottom {\n    background-position: right bottom;\n  }\n\n  .sm\\:bg-right-top {\n    background-position: right top;\n  }\n\n  .sm\\:bg-top {\n    background-position: top;\n  }\n\n  .sm\\:bg-repeat {\n    background-repeat: repeat;\n  }\n\n  .sm\\:bg-no-repeat {\n    background-repeat: no-repeat;\n  }\n\n  .sm\\:bg-repeat-x {\n    background-repeat: repeat-x;\n  }\n\n  .sm\\:bg-repeat-y {\n    background-repeat: repeat-y;\n  }\n\n  .sm\\:bg-auto {\n    background-size: auto;\n  }\n\n  .sm\\:bg-cover {\n    background-size: cover;\n  }\n\n  .sm\\:bg-contain {\n    background-size: contain;\n  }\n\n  .sm\\:border-transparent {\n    border-color: transparent;\n  }\n\n  .sm\\:border-black {\n    border-color: #22292f;\n  }\n\n  .sm\\:border-grey-darkest {\n    border-color: #3d4852;\n  }\n\n  .sm\\:border-grey-darker {\n    border-color: #606f7b;\n  }\n\n  .sm\\:border-grey-dark {\n    border-color: #8795a1;\n  }\n\n  .sm\\:border-grey {\n    border-color: #b8c2cc;\n  }\n\n  .sm\\:border-grey-light {\n    border-color: #dae1e7;\n  }\n\n  .sm\\:border-grey-lighter {\n    border-color: #f1f5f8;\n  }\n\n  .sm\\:border-grey-lightest {\n    border-color: #f8fafc;\n  }\n\n  .sm\\:border-white {\n    border-color: #fff;\n  }\n\n  .sm\\:border-red-darkest {\n    border-color: #3b0d0c;\n  }\n\n  .sm\\:border-red-darker {\n    border-color: #621b18;\n  }\n\n  .sm\\:border-red-dark {\n    border-color: #cc1f1a;\n  }\n\n  .sm\\:border-red {\n    border-color: #e3342f;\n  }\n\n  .sm\\:border-red-light {\n    border-color: #ef5753;\n  }\n\n  .sm\\:border-red-lighter {\n    border-color: #f9acaa;\n  }\n\n  .sm\\:border-red-lightest {\n    border-color: #fcebea;\n  }\n\n  .sm\\:border-orange-darkest {\n    border-color: #462a16;\n  }\n\n  .sm\\:border-orange-darker {\n    border-color: #613b1f;\n  }\n\n  .sm\\:border-orange-dark {\n    border-color: #de751f;\n  }\n\n  .sm\\:border-orange {\n    border-color: #f6993f;\n  }\n\n  .sm\\:border-orange-light {\n    border-color: #faad63;\n  }\n\n  .sm\\:border-orange-lighter {\n    border-color: #fcd9b6;\n  }\n\n  .sm\\:border-orange-lightest {\n    border-color: #fff5eb;\n  }\n\n  .sm\\:border-yellow-darkest {\n    border-color: #453411;\n  }\n\n  .sm\\:border-yellow-darker {\n    border-color: #684f1d;\n  }\n\n  .sm\\:border-yellow-dark {\n    border-color: #f2d024;\n  }\n\n  .sm\\:border-yellow {\n    border-color: #ffed4a;\n  }\n\n  .sm\\:border-yellow-light {\n    border-color: #fff382;\n  }\n\n  .sm\\:border-yellow-lighter {\n    border-color: #fff9c2;\n  }\n\n  .sm\\:border-yellow-lightest {\n    border-color: #fcfbeb;\n  }\n\n  .sm\\:border-green-darkest {\n    border-color: #0f2f21;\n  }\n\n  .sm\\:border-green-darker {\n    border-color: #1a4731;\n  }\n\n  .sm\\:border-green-dark {\n    border-color: #1f9d55;\n  }\n\n  .sm\\:border-green {\n    border-color: #38c172;\n  }\n\n  .sm\\:border-green-light {\n    border-color: #51d88a;\n  }\n\n  .sm\\:border-green-lighter {\n    border-color: #a2f5bf;\n  }\n\n  .sm\\:border-green-lightest {\n    border-color: #e3fcec;\n  }\n\n  .sm\\:border-teal-darkest {\n    border-color: #0d3331;\n  }\n\n  .sm\\:border-teal-darker {\n    border-color: #20504f;\n  }\n\n  .sm\\:border-teal-dark {\n    border-color: #38a89d;\n  }\n\n  .sm\\:border-teal {\n    border-color: #4dc0b5;\n  }\n\n  .sm\\:border-teal-light {\n    border-color: #64d5ca;\n  }\n\n  .sm\\:border-teal-lighter {\n    border-color: #a0f0ed;\n  }\n\n  .sm\\:border-teal-lightest {\n    border-color: #e8fffe;\n  }\n\n  .sm\\:border-blue-darkest {\n    border-color: #12283a;\n  }\n\n  .sm\\:border-blue-darker {\n    border-color: #1c3d5a;\n  }\n\n  .sm\\:border-blue-dark {\n    border-color: #2779bd;\n  }\n\n  .sm\\:border-blue {\n    border-color: #3490dc;\n  }\n\n  .sm\\:border-blue-light {\n    border-color: #6cb2eb;\n  }\n\n  .sm\\:border-blue-lighter {\n    border-color: #bcdefa;\n  }\n\n  .sm\\:border-blue-lightest {\n    border-color: #eff8ff;\n  }\n\n  .sm\\:border-indigo-darkest {\n    border-color: #191e38;\n  }\n\n  .sm\\:border-indigo-darker {\n    border-color: #2f365f;\n  }\n\n  .sm\\:border-indigo-dark {\n    border-color: #5661b3;\n  }\n\n  .sm\\:border-indigo {\n    border-color: #6574cd;\n  }\n\n  .sm\\:border-indigo-light {\n    border-color: #7886d7;\n  }\n\n  .sm\\:border-indigo-lighter {\n    border-color: #b2b7ff;\n  }\n\n  .sm\\:border-indigo-lightest {\n    border-color: #e6e8ff;\n  }\n\n  .sm\\:border-purple-darkest {\n    border-color: #21183c;\n  }\n\n  .sm\\:border-purple-darker {\n    border-color: #382b5f;\n  }\n\n  .sm\\:border-purple-dark {\n    border-color: #794acf;\n  }\n\n  .sm\\:border-purple {\n    border-color: #9561e2;\n  }\n\n  .sm\\:border-purple-light {\n    border-color: #a779e9;\n  }\n\n  .sm\\:border-purple-lighter {\n    border-color: #d6bbfc;\n  }\n\n  .sm\\:border-purple-lightest {\n    border-color: #f3ebff;\n  }\n\n  .sm\\:border-pink-darkest {\n    border-color: #451225;\n  }\n\n  .sm\\:border-pink-darker {\n    border-color: #6f213f;\n  }\n\n  .sm\\:border-pink-dark {\n    border-color: #eb5286;\n  }\n\n  .sm\\:border-pink {\n    border-color: #f66d9b;\n  }\n\n  .sm\\:border-pink-light {\n    border-color: #fa7ea8;\n  }\n\n  .sm\\:border-pink-lighter {\n    border-color: #ffbbca;\n  }\n\n  .sm\\:border-pink-lightest {\n    border-color: #ffebef;\n  }\n\n  .sm\\:hover\\:border-transparent:hover {\n    border-color: transparent;\n  }\n\n  .sm\\:hover\\:border-black:hover {\n    border-color: #22292f;\n  }\n\n  .sm\\:hover\\:border-grey-darkest:hover {\n    border-color: #3d4852;\n  }\n\n  .sm\\:hover\\:border-grey-darker:hover {\n    border-color: #606f7b;\n  }\n\n  .sm\\:hover\\:border-grey-dark:hover {\n    border-color: #8795a1;\n  }\n\n  .sm\\:hover\\:border-grey:hover {\n    border-color: #b8c2cc;\n  }\n\n  .sm\\:hover\\:border-grey-light:hover {\n    border-color: #dae1e7;\n  }\n\n  .sm\\:hover\\:border-grey-lighter:hover {\n    border-color: #f1f5f8;\n  }\n\n  .sm\\:hover\\:border-grey-lightest:hover {\n    border-color: #f8fafc;\n  }\n\n  .sm\\:hover\\:border-white:hover {\n    border-color: #fff;\n  }\n\n  .sm\\:hover\\:border-red-darkest:hover {\n    border-color: #3b0d0c;\n  }\n\n  .sm\\:hover\\:border-red-darker:hover {\n    border-color: #621b18;\n  }\n\n  .sm\\:hover\\:border-red-dark:hover {\n    border-color: #cc1f1a;\n  }\n\n  .sm\\:hover\\:border-red:hover {\n    border-color: #e3342f;\n  }\n\n  .sm\\:hover\\:border-red-light:hover {\n    border-color: #ef5753;\n  }\n\n  .sm\\:hover\\:border-red-lighter:hover {\n    border-color: #f9acaa;\n  }\n\n  .sm\\:hover\\:border-red-lightest:hover {\n    border-color: #fcebea;\n  }\n\n  .sm\\:hover\\:border-orange-darkest:hover {\n    border-color: #462a16;\n  }\n\n  .sm\\:hover\\:border-orange-darker:hover {\n    border-color: #613b1f;\n  }\n\n  .sm\\:hover\\:border-orange-dark:hover {\n    border-color: #de751f;\n  }\n\n  .sm\\:hover\\:border-orange:hover {\n    border-color: #f6993f;\n  }\n\n  .sm\\:hover\\:border-orange-light:hover {\n    border-color: #faad63;\n  }\n\n  .sm\\:hover\\:border-orange-lighter:hover {\n    border-color: #fcd9b6;\n  }\n\n  .sm\\:hover\\:border-orange-lightest:hover {\n    border-color: #fff5eb;\n  }\n\n  .sm\\:hover\\:border-yellow-darkest:hover {\n    border-color: #453411;\n  }\n\n  .sm\\:hover\\:border-yellow-darker:hover {\n    border-color: #684f1d;\n  }\n\n  .sm\\:hover\\:border-yellow-dark:hover {\n    border-color: #f2d024;\n  }\n\n  .sm\\:hover\\:border-yellow:hover {\n    border-color: #ffed4a;\n  }\n\n  .sm\\:hover\\:border-yellow-light:hover {\n    border-color: #fff382;\n  }\n\n  .sm\\:hover\\:border-yellow-lighter:hover {\n    border-color: #fff9c2;\n  }\n\n  .sm\\:hover\\:border-yellow-lightest:hover {\n    border-color: #fcfbeb;\n  }\n\n  .sm\\:hover\\:border-green-darkest:hover {\n    border-color: #0f2f21;\n  }\n\n  .sm\\:hover\\:border-green-darker:hover {\n    border-color: #1a4731;\n  }\n\n  .sm\\:hover\\:border-green-dark:hover {\n    border-color: #1f9d55;\n  }\n\n  .sm\\:hover\\:border-green:hover {\n    border-color: #38c172;\n  }\n\n  .sm\\:hover\\:border-green-light:hover {\n    border-color: #51d88a;\n  }\n\n  .sm\\:hover\\:border-green-lighter:hover {\n    border-color: #a2f5bf;\n  }\n\n  .sm\\:hover\\:border-green-lightest:hover {\n    border-color: #e3fcec;\n  }\n\n  .sm\\:hover\\:border-teal-darkest:hover {\n    border-color: #0d3331;\n  }\n\n  .sm\\:hover\\:border-teal-darker:hover {\n    border-color: #20504f;\n  }\n\n  .sm\\:hover\\:border-teal-dark:hover {\n    border-color: #38a89d;\n  }\n\n  .sm\\:hover\\:border-teal:hover {\n    border-color: #4dc0b5;\n  }\n\n  .sm\\:hover\\:border-teal-light:hover {\n    border-color: #64d5ca;\n  }\n\n  .sm\\:hover\\:border-teal-lighter:hover {\n    border-color: #a0f0ed;\n  }\n\n  .sm\\:hover\\:border-teal-lightest:hover {\n    border-color: #e8fffe;\n  }\n\n  .sm\\:hover\\:border-blue-darkest:hover {\n    border-color: #12283a;\n  }\n\n  .sm\\:hover\\:border-blue-darker:hover {\n    border-color: #1c3d5a;\n  }\n\n  .sm\\:hover\\:border-blue-dark:hover {\n    border-color: #2779bd;\n  }\n\n  .sm\\:hover\\:border-blue:hover {\n    border-color: #3490dc;\n  }\n\n  .sm\\:hover\\:border-blue-light:hover {\n    border-color: #6cb2eb;\n  }\n\n  .sm\\:hover\\:border-blue-lighter:hover {\n    border-color: #bcdefa;\n  }\n\n  .sm\\:hover\\:border-blue-lightest:hover {\n    border-color: #eff8ff;\n  }\n\n  .sm\\:hover\\:border-indigo-darkest:hover {\n    border-color: #191e38;\n  }\n\n  .sm\\:hover\\:border-indigo-darker:hover {\n    border-color: #2f365f;\n  }\n\n  .sm\\:hover\\:border-indigo-dark:hover {\n    border-color: #5661b3;\n  }\n\n  .sm\\:hover\\:border-indigo:hover {\n    border-color: #6574cd;\n  }\n\n  .sm\\:hover\\:border-indigo-light:hover {\n    border-color: #7886d7;\n  }\n\n  .sm\\:hover\\:border-indigo-lighter:hover {\n    border-color: #b2b7ff;\n  }\n\n  .sm\\:hover\\:border-indigo-lightest:hover {\n    border-color: #e6e8ff;\n  }\n\n  .sm\\:hover\\:border-purple-darkest:hover {\n    border-color: #21183c;\n  }\n\n  .sm\\:hover\\:border-purple-darker:hover {\n    border-color: #382b5f;\n  }\n\n  .sm\\:hover\\:border-purple-dark:hover {\n    border-color: #794acf;\n  }\n\n  .sm\\:hover\\:border-purple:hover {\n    border-color: #9561e2;\n  }\n\n  .sm\\:hover\\:border-purple-light:hover {\n    border-color: #a779e9;\n  }\n\n  .sm\\:hover\\:border-purple-lighter:hover {\n    border-color: #d6bbfc;\n  }\n\n  .sm\\:hover\\:border-purple-lightest:hover {\n    border-color: #f3ebff;\n  }\n\n  .sm\\:hover\\:border-pink-darkest:hover {\n    border-color: #451225;\n  }\n\n  .sm\\:hover\\:border-pink-darker:hover {\n    border-color: #6f213f;\n  }\n\n  .sm\\:hover\\:border-pink-dark:hover {\n    border-color: #eb5286;\n  }\n\n  .sm\\:hover\\:border-pink:hover {\n    border-color: #f66d9b;\n  }\n\n  .sm\\:hover\\:border-pink-light:hover {\n    border-color: #fa7ea8;\n  }\n\n  .sm\\:hover\\:border-pink-lighter:hover {\n    border-color: #ffbbca;\n  }\n\n  .sm\\:hover\\:border-pink-lightest:hover {\n    border-color: #ffebef;\n  }\n\n  .sm\\:focus\\:border-transparent:focus {\n    border-color: transparent;\n  }\n\n  .sm\\:focus\\:border-black:focus {\n    border-color: #22292f;\n  }\n\n  .sm\\:focus\\:border-grey-darkest:focus {\n    border-color: #3d4852;\n  }\n\n  .sm\\:focus\\:border-grey-darker:focus {\n    border-color: #606f7b;\n  }\n\n  .sm\\:focus\\:border-grey-dark:focus {\n    border-color: #8795a1;\n  }\n\n  .sm\\:focus\\:border-grey:focus {\n    border-color: #b8c2cc;\n  }\n\n  .sm\\:focus\\:border-grey-light:focus {\n    border-color: #dae1e7;\n  }\n\n  .sm\\:focus\\:border-grey-lighter:focus {\n    border-color: #f1f5f8;\n  }\n\n  .sm\\:focus\\:border-grey-lightest:focus {\n    border-color: #f8fafc;\n  }\n\n  .sm\\:focus\\:border-white:focus {\n    border-color: #fff;\n  }\n\n  .sm\\:focus\\:border-red-darkest:focus {\n    border-color: #3b0d0c;\n  }\n\n  .sm\\:focus\\:border-red-darker:focus {\n    border-color: #621b18;\n  }\n\n  .sm\\:focus\\:border-red-dark:focus {\n    border-color: #cc1f1a;\n  }\n\n  .sm\\:focus\\:border-red:focus {\n    border-color: #e3342f;\n  }\n\n  .sm\\:focus\\:border-red-light:focus {\n    border-color: #ef5753;\n  }\n\n  .sm\\:focus\\:border-red-lighter:focus {\n    border-color: #f9acaa;\n  }\n\n  .sm\\:focus\\:border-red-lightest:focus {\n    border-color: #fcebea;\n  }\n\n  .sm\\:focus\\:border-orange-darkest:focus {\n    border-color: #462a16;\n  }\n\n  .sm\\:focus\\:border-orange-darker:focus {\n    border-color: #613b1f;\n  }\n\n  .sm\\:focus\\:border-orange-dark:focus {\n    border-color: #de751f;\n  }\n\n  .sm\\:focus\\:border-orange:focus {\n    border-color: #f6993f;\n  }\n\n  .sm\\:focus\\:border-orange-light:focus {\n    border-color: #faad63;\n  }\n\n  .sm\\:focus\\:border-orange-lighter:focus {\n    border-color: #fcd9b6;\n  }\n\n  .sm\\:focus\\:border-orange-lightest:focus {\n    border-color: #fff5eb;\n  }\n\n  .sm\\:focus\\:border-yellow-darkest:focus {\n    border-color: #453411;\n  }\n\n  .sm\\:focus\\:border-yellow-darker:focus {\n    border-color: #684f1d;\n  }\n\n  .sm\\:focus\\:border-yellow-dark:focus {\n    border-color: #f2d024;\n  }\n\n  .sm\\:focus\\:border-yellow:focus {\n    border-color: #ffed4a;\n  }\n\n  .sm\\:focus\\:border-yellow-light:focus {\n    border-color: #fff382;\n  }\n\n  .sm\\:focus\\:border-yellow-lighter:focus {\n    border-color: #fff9c2;\n  }\n\n  .sm\\:focus\\:border-yellow-lightest:focus {\n    border-color: #fcfbeb;\n  }\n\n  .sm\\:focus\\:border-green-darkest:focus {\n    border-color: #0f2f21;\n  }\n\n  .sm\\:focus\\:border-green-darker:focus {\n    border-color: #1a4731;\n  }\n\n  .sm\\:focus\\:border-green-dark:focus {\n    border-color: #1f9d55;\n  }\n\n  .sm\\:focus\\:border-green:focus {\n    border-color: #38c172;\n  }\n\n  .sm\\:focus\\:border-green-light:focus {\n    border-color: #51d88a;\n  }\n\n  .sm\\:focus\\:border-green-lighter:focus {\n    border-color: #a2f5bf;\n  }\n\n  .sm\\:focus\\:border-green-lightest:focus {\n    border-color: #e3fcec;\n  }\n\n  .sm\\:focus\\:border-teal-darkest:focus {\n    border-color: #0d3331;\n  }\n\n  .sm\\:focus\\:border-teal-darker:focus {\n    border-color: #20504f;\n  }\n\n  .sm\\:focus\\:border-teal-dark:focus {\n    border-color: #38a89d;\n  }\n\n  .sm\\:focus\\:border-teal:focus {\n    border-color: #4dc0b5;\n  }\n\n  .sm\\:focus\\:border-teal-light:focus {\n    border-color: #64d5ca;\n  }\n\n  .sm\\:focus\\:border-teal-lighter:focus {\n    border-color: #a0f0ed;\n  }\n\n  .sm\\:focus\\:border-teal-lightest:focus {\n    border-color: #e8fffe;\n  }\n\n  .sm\\:focus\\:border-blue-darkest:focus {\n    border-color: #12283a;\n  }\n\n  .sm\\:focus\\:border-blue-darker:focus {\n    border-color: #1c3d5a;\n  }\n\n  .sm\\:focus\\:border-blue-dark:focus {\n    border-color: #2779bd;\n  }\n\n  .sm\\:focus\\:border-blue:focus {\n    border-color: #3490dc;\n  }\n\n  .sm\\:focus\\:border-blue-light:focus {\n    border-color: #6cb2eb;\n  }\n\n  .sm\\:focus\\:border-blue-lighter:focus {\n    border-color: #bcdefa;\n  }\n\n  .sm\\:focus\\:border-blue-lightest:focus {\n    border-color: #eff8ff;\n  }\n\n  .sm\\:focus\\:border-indigo-darkest:focus {\n    border-color: #191e38;\n  }\n\n  .sm\\:focus\\:border-indigo-darker:focus {\n    border-color: #2f365f;\n  }\n\n  .sm\\:focus\\:border-indigo-dark:focus {\n    border-color: #5661b3;\n  }\n\n  .sm\\:focus\\:border-indigo:focus {\n    border-color: #6574cd;\n  }\n\n  .sm\\:focus\\:border-indigo-light:focus {\n    border-color: #7886d7;\n  }\n\n  .sm\\:focus\\:border-indigo-lighter:focus {\n    border-color: #b2b7ff;\n  }\n\n  .sm\\:focus\\:border-indigo-lightest:focus {\n    border-color: #e6e8ff;\n  }\n\n  .sm\\:focus\\:border-purple-darkest:focus {\n    border-color: #21183c;\n  }\n\n  .sm\\:focus\\:border-purple-darker:focus {\n    border-color: #382b5f;\n  }\n\n  .sm\\:focus\\:border-purple-dark:focus {\n    border-color: #794acf;\n  }\n\n  .sm\\:focus\\:border-purple:focus {\n    border-color: #9561e2;\n  }\n\n  .sm\\:focus\\:border-purple-light:focus {\n    border-color: #a779e9;\n  }\n\n  .sm\\:focus\\:border-purple-lighter:focus {\n    border-color: #d6bbfc;\n  }\n\n  .sm\\:focus\\:border-purple-lightest:focus {\n    border-color: #f3ebff;\n  }\n\n  .sm\\:focus\\:border-pink-darkest:focus {\n    border-color: #451225;\n  }\n\n  .sm\\:focus\\:border-pink-darker:focus {\n    border-color: #6f213f;\n  }\n\n  .sm\\:focus\\:border-pink-dark:focus {\n    border-color: #eb5286;\n  }\n\n  .sm\\:focus\\:border-pink:focus {\n    border-color: #f66d9b;\n  }\n\n  .sm\\:focus\\:border-pink-light:focus {\n    border-color: #fa7ea8;\n  }\n\n  .sm\\:focus\\:border-pink-lighter:focus {\n    border-color: #ffbbca;\n  }\n\n  .sm\\:focus\\:border-pink-lightest:focus {\n    border-color: #ffebef;\n  }\n\n  .sm\\:rounded-none {\n    border-radius: 0;\n  }\n\n  .sm\\:rounded-sm {\n    border-radius: .125rem;\n  }\n\n  .sm\\:rounded {\n    border-radius: .25rem;\n  }\n\n  .sm\\:rounded-lg {\n    border-radius: .5rem;\n  }\n\n  .sm\\:rounded-full {\n    border-radius: 9999px;\n  }\n\n  .sm\\:rounded-t-none {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  .sm\\:rounded-r-none {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  .sm\\:rounded-b-none {\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .sm\\:rounded-l-none {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .sm\\:rounded-t-sm {\n    border-top-left-radius: .125rem;\n    border-top-right-radius: .125rem;\n  }\n\n  .sm\\:rounded-r-sm {\n    border-top-right-radius: .125rem;\n    border-bottom-right-radius: .125rem;\n  }\n\n  .sm\\:rounded-b-sm {\n    border-bottom-right-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .sm\\:rounded-l-sm {\n    border-top-left-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .sm\\:rounded-t {\n    border-top-left-radius: .25rem;\n    border-top-right-radius: .25rem;\n  }\n\n  .sm\\:rounded-r {\n    border-top-right-radius: .25rem;\n    border-bottom-right-radius: .25rem;\n  }\n\n  .sm\\:rounded-b {\n    border-bottom-right-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .sm\\:rounded-l {\n    border-top-left-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .sm\\:rounded-t-lg {\n    border-top-left-radius: .5rem;\n    border-top-right-radius: .5rem;\n  }\n\n  .sm\\:rounded-r-lg {\n    border-top-right-radius: .5rem;\n    border-bottom-right-radius: .5rem;\n  }\n\n  .sm\\:rounded-b-lg {\n    border-bottom-right-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .sm\\:rounded-l-lg {\n    border-top-left-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .sm\\:rounded-t-full {\n    border-top-left-radius: 9999px;\n    border-top-right-radius: 9999px;\n  }\n\n  .sm\\:rounded-r-full {\n    border-top-right-radius: 9999px;\n    border-bottom-right-radius: 9999px;\n  }\n\n  .sm\\:rounded-b-full {\n    border-bottom-right-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .sm\\:rounded-l-full {\n    border-top-left-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .sm\\:rounded-tl-none {\n    border-top-left-radius: 0;\n  }\n\n  .sm\\:rounded-tr-none {\n    border-top-right-radius: 0;\n  }\n\n  .sm\\:rounded-br-none {\n    border-bottom-right-radius: 0;\n  }\n\n  .sm\\:rounded-bl-none {\n    border-bottom-left-radius: 0;\n  }\n\n  .sm\\:rounded-tl-sm {\n    border-top-left-radius: .125rem;\n  }\n\n  .sm\\:rounded-tr-sm {\n    border-top-right-radius: .125rem;\n  }\n\n  .sm\\:rounded-br-sm {\n    border-bottom-right-radius: .125rem;\n  }\n\n  .sm\\:rounded-bl-sm {\n    border-bottom-left-radius: .125rem;\n  }\n\n  .sm\\:rounded-tl {\n    border-top-left-radius: .25rem;\n  }\n\n  .sm\\:rounded-tr {\n    border-top-right-radius: .25rem;\n  }\n\n  .sm\\:rounded-br {\n    border-bottom-right-radius: .25rem;\n  }\n\n  .sm\\:rounded-bl {\n    border-bottom-left-radius: .25rem;\n  }\n\n  .sm\\:rounded-tl-lg {\n    border-top-left-radius: .5rem;\n  }\n\n  .sm\\:rounded-tr-lg {\n    border-top-right-radius: .5rem;\n  }\n\n  .sm\\:rounded-br-lg {\n    border-bottom-right-radius: .5rem;\n  }\n\n  .sm\\:rounded-bl-lg {\n    border-bottom-left-radius: .5rem;\n  }\n\n  .sm\\:rounded-tl-full {\n    border-top-left-radius: 9999px;\n  }\n\n  .sm\\:rounded-tr-full {\n    border-top-right-radius: 9999px;\n  }\n\n  .sm\\:rounded-br-full {\n    border-bottom-right-radius: 9999px;\n  }\n\n  .sm\\:rounded-bl-full {\n    border-bottom-left-radius: 9999px;\n  }\n\n  .sm\\:border-solid {\n    border-style: solid;\n  }\n\n  .sm\\:border-dashed {\n    border-style: dashed;\n  }\n\n  .sm\\:border-dotted {\n    border-style: dotted;\n  }\n\n  .sm\\:border-none {\n    border-style: none;\n  }\n\n  .sm\\:border-0 {\n    border-width: 0;\n  }\n\n  .sm\\:border-2 {\n    border-width: 2px;\n  }\n\n  .sm\\:border-4 {\n    border-width: 4px;\n  }\n\n  .sm\\:border-8 {\n    border-width: 8px;\n  }\n\n  .sm\\:border {\n    border-width: 1px;\n  }\n\n  .sm\\:border-t-0 {\n    border-top-width: 0;\n  }\n\n  .sm\\:border-r-0 {\n    border-right-width: 0;\n  }\n\n  .sm\\:border-b-0 {\n    border-bottom-width: 0;\n  }\n\n  .sm\\:border-l-0 {\n    border-left-width: 0;\n  }\n\n  .sm\\:border-t-2 {\n    border-top-width: 2px;\n  }\n\n  .sm\\:border-r-2 {\n    border-right-width: 2px;\n  }\n\n  .sm\\:border-b-2 {\n    border-bottom-width: 2px;\n  }\n\n  .sm\\:border-l-2 {\n    border-left-width: 2px;\n  }\n\n  .sm\\:border-t-4 {\n    border-top-width: 4px;\n  }\n\n  .sm\\:border-r-4 {\n    border-right-width: 4px;\n  }\n\n  .sm\\:border-b-4 {\n    border-bottom-width: 4px;\n  }\n\n  .sm\\:border-l-4 {\n    border-left-width: 4px;\n  }\n\n  .sm\\:border-t-8 {\n    border-top-width: 8px;\n  }\n\n  .sm\\:border-r-8 {\n    border-right-width: 8px;\n  }\n\n  .sm\\:border-b-8 {\n    border-bottom-width: 8px;\n  }\n\n  .sm\\:border-l-8 {\n    border-left-width: 8px;\n  }\n\n  .sm\\:border-t {\n    border-top-width: 1px;\n  }\n\n  .sm\\:border-r {\n    border-right-width: 1px;\n  }\n\n  .sm\\:border-b {\n    border-bottom-width: 1px;\n  }\n\n  .sm\\:border-l {\n    border-left-width: 1px;\n  }\n\n  .sm\\:cursor-auto {\n    cursor: auto;\n  }\n\n  .sm\\:cursor-default {\n    cursor: default;\n  }\n\n  .sm\\:cursor-pointer {\n    cursor: pointer;\n  }\n\n  .sm\\:cursor-wait {\n    cursor: wait;\n  }\n\n  .sm\\:cursor-move {\n    cursor: move;\n  }\n\n  .sm\\:cursor-not-allowed {\n    cursor: not-allowed;\n  }\n\n  .sm\\:block {\n    display: block;\n  }\n\n  .sm\\:inline-block {\n    display: inline-block;\n  }\n\n  .sm\\:inline {\n    display: inline;\n  }\n\n  .sm\\:table {\n    display: table;\n  }\n\n  .sm\\:table-row {\n    display: table-row;\n  }\n\n  .sm\\:table-cell {\n    display: table-cell;\n  }\n\n  .sm\\:hidden {\n    display: none;\n  }\n\n  .sm\\:flex {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\n\n  .sm\\:inline-flex {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  }\n\n  .sm\\:flex-row {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n  }\n\n  .sm\\:flex-row-reverse {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: row-reverse;\n            flex-direction: row-reverse;\n  }\n\n  .sm\\:flex-col {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n  }\n\n  .sm\\:flex-col-reverse {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: column-reverse;\n            flex-direction: column-reverse;\n  }\n\n  .sm\\:flex-wrap {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n  }\n\n  .sm\\:flex-wrap-reverse {\n    -ms-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n  }\n\n  .sm\\:flex-no-wrap {\n    -ms-flex-wrap: nowrap;\n        flex-wrap: nowrap;\n  }\n\n  .sm\\:items-start {\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n  }\n\n  .sm\\:items-end {\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n  }\n\n  .sm\\:items-center {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n  }\n\n  .sm\\:items-baseline {\n    -webkit-box-align: baseline;\n        -ms-flex-align: baseline;\n            align-items: baseline;\n  }\n\n  .sm\\:items-stretch {\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch;\n  }\n\n  .sm\\:self-auto {\n    -ms-flex-item-align: auto;\n        align-self: auto;\n  }\n\n  .sm\\:self-start {\n    -ms-flex-item-align: start;\n        align-self: flex-start;\n  }\n\n  .sm\\:self-end {\n    -ms-flex-item-align: end;\n        align-self: flex-end;\n  }\n\n  .sm\\:self-center {\n    -ms-flex-item-align: center;\n        align-self: center;\n  }\n\n  .sm\\:self-stretch {\n    -ms-flex-item-align: stretch;\n        align-self: stretch;\n  }\n\n  .sm\\:justify-start {\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start;\n  }\n\n  .sm\\:justify-end {\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end;\n  }\n\n  .sm\\:justify-center {\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n  }\n\n  .sm\\:justify-between {\n    -webkit-box-pack: justify;\n        -ms-flex-pack: justify;\n            justify-content: space-between;\n  }\n\n  .sm\\:justify-around {\n    -ms-flex-pack: distribute;\n        justify-content: space-around;\n  }\n\n  .sm\\:content-center {\n    -ms-flex-line-pack: center;\n        align-content: center;\n  }\n\n  .sm\\:content-start {\n    -ms-flex-line-pack: start;\n        align-content: flex-start;\n  }\n\n  .sm\\:content-end {\n    -ms-flex-line-pack: end;\n        align-content: flex-end;\n  }\n\n  .sm\\:content-between {\n    -ms-flex-line-pack: justify;\n        align-content: space-between;\n  }\n\n  .sm\\:content-around {\n    -ms-flex-line-pack: distribute;\n        align-content: space-around;\n  }\n\n  .sm\\:flex-1 {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n  }\n\n  .sm\\:flex-auto {\n    -webkit-box-flex: 1;\n        -ms-flex: auto;\n            flex: auto;\n  }\n\n  .sm\\:flex-initial {\n    -webkit-box-flex: initial;\n        -ms-flex: initial;\n            flex: initial;\n  }\n\n  .sm\\:flex-none {\n    -webkit-box-flex: 0;\n        -ms-flex: none;\n            flex: none;\n  }\n\n  .sm\\:flex-grow {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1;\n  }\n\n  .sm\\:flex-shrink {\n    -ms-flex-negative: 1;\n        flex-shrink: 1;\n  }\n\n  .sm\\:flex-no-grow {\n    -webkit-box-flex: 0;\n        -ms-flex-positive: 0;\n            flex-grow: 0;\n  }\n\n  .sm\\:flex-no-shrink {\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n  }\n\n  .sm\\:float-right {\n    float: right;\n  }\n\n  .sm\\:float-left {\n    float: left;\n  }\n\n  .sm\\:float-none {\n    float: none;\n  }\n\n  .sm\\:clearfix:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  .sm\\:font-sans {\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue, -apple-system, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n  }\n\n  .sm\\:font-serif {\n    font-family: Constantia, Lucida Bright, Lucidabright, Lucida Serif, Lucida, DejaVu Serif, Bitstream Vera Serif, Liberation Serif, Georgia, serif;\n  }\n\n  .sm\\:font-mono {\n    font-family: Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;\n  }\n\n  .sm\\:font-hairline {\n    font-weight: 100;\n  }\n\n  .sm\\:font-thin {\n    font-weight: 200;\n  }\n\n  .sm\\:font-light {\n    font-weight: 300;\n  }\n\n  .sm\\:font-normal {\n    font-weight: 400;\n  }\n\n  .sm\\:font-medium {\n    font-weight: 500;\n  }\n\n  .sm\\:font-semibold {\n    font-weight: 600;\n  }\n\n  .sm\\:font-bold {\n    font-weight: 700;\n  }\n\n  .sm\\:font-extrabold {\n    font-weight: 800;\n  }\n\n  .sm\\:font-black {\n    font-weight: 900;\n  }\n\n  .sm\\:hover\\:font-hairline:hover {\n    font-weight: 100;\n  }\n\n  .sm\\:hover\\:font-thin:hover {\n    font-weight: 200;\n  }\n\n  .sm\\:hover\\:font-light:hover {\n    font-weight: 300;\n  }\n\n  .sm\\:hover\\:font-normal:hover {\n    font-weight: 400;\n  }\n\n  .sm\\:hover\\:font-medium:hover {\n    font-weight: 500;\n  }\n\n  .sm\\:hover\\:font-semibold:hover {\n    font-weight: 600;\n  }\n\n  .sm\\:hover\\:font-bold:hover {\n    font-weight: 700;\n  }\n\n  .sm\\:hover\\:font-extrabold:hover {\n    font-weight: 800;\n  }\n\n  .sm\\:hover\\:font-black:hover {\n    font-weight: 900;\n  }\n\n  .sm\\:focus\\:font-hairline:focus {\n    font-weight: 100;\n  }\n\n  .sm\\:focus\\:font-thin:focus {\n    font-weight: 200;\n  }\n\n  .sm\\:focus\\:font-light:focus {\n    font-weight: 300;\n  }\n\n  .sm\\:focus\\:font-normal:focus {\n    font-weight: 400;\n  }\n\n  .sm\\:focus\\:font-medium:focus {\n    font-weight: 500;\n  }\n\n  .sm\\:focus\\:font-semibold:focus {\n    font-weight: 600;\n  }\n\n  .sm\\:focus\\:font-bold:focus {\n    font-weight: 700;\n  }\n\n  .sm\\:focus\\:font-extrabold:focus {\n    font-weight: 800;\n  }\n\n  .sm\\:focus\\:font-black:focus {\n    font-weight: 900;\n  }\n\n  .sm\\:h-1 {\n    height: .25rem;\n  }\n\n  .sm\\:h-2 {\n    height: .5rem;\n  }\n\n  .sm\\:h-3 {\n    height: .75rem;\n  }\n\n  .sm\\:h-4 {\n    height: 1rem;\n  }\n\n  .sm\\:h-5 {\n    height: 1.25rem;\n  }\n\n  .sm\\:h-6 {\n    height: 1.5rem;\n  }\n\n  .sm\\:h-8 {\n    height: 2rem;\n  }\n\n  .sm\\:h-10 {\n    height: 2.5rem;\n  }\n\n  .sm\\:h-12 {\n    height: 3rem;\n  }\n\n  .sm\\:h-16 {\n    height: 4rem;\n  }\n\n  .sm\\:h-24 {\n    height: 6rem;\n  }\n\n  .sm\\:h-32 {\n    height: 8rem;\n  }\n\n  .sm\\:h-48 {\n    height: 12rem;\n  }\n\n  .sm\\:h-64 {\n    height: 16rem;\n  }\n\n  .sm\\:h-auto {\n    height: auto;\n  }\n\n  .sm\\:h-px {\n    height: 1px;\n  }\n\n  .sm\\:h-full {\n    height: 100%;\n  }\n\n  .sm\\:h-screen {\n    height: 100vh;\n  }\n\n  .sm\\:leading-none {\n    line-height: 1;\n  }\n\n  .sm\\:leading-tight {\n    line-height: 1.25;\n  }\n\n  .sm\\:leading-normal {\n    line-height: 1.5;\n  }\n\n  .sm\\:leading-loose {\n    line-height: 2;\n  }\n\n  .sm\\:m-0 {\n    margin: 0;\n  }\n\n  .sm\\:m-1 {\n    margin: .25rem;\n  }\n\n  .sm\\:m-2 {\n    margin: .5rem;\n  }\n\n  .sm\\:m-3 {\n    margin: .75rem;\n  }\n\n  .sm\\:m-4 {\n    margin: 1rem;\n  }\n\n  .sm\\:m-5 {\n    margin: 1.25rem;\n  }\n\n  .sm\\:m-6 {\n    margin: 1.5rem;\n  }\n\n  .sm\\:m-8 {\n    margin: 2rem;\n  }\n\n  .sm\\:m-10 {\n    margin: 2.5rem;\n  }\n\n  .sm\\:m-12 {\n    margin: 3rem;\n  }\n\n  .sm\\:m-16 {\n    margin: 4rem;\n  }\n\n  .sm\\:m-20 {\n    margin: 5rem;\n  }\n\n  .sm\\:m-24 {\n    margin: 6rem;\n  }\n\n  .sm\\:m-32 {\n    margin: 8rem;\n  }\n\n  .sm\\:m-auto {\n    margin: auto;\n  }\n\n  .sm\\:m-px {\n    margin: 1px;\n  }\n\n  .sm\\:my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .sm\\:mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .sm\\:my-1 {\n    margin-top: .25rem;\n    margin-bottom: .25rem;\n  }\n\n  .sm\\:mx-1 {\n    margin-left: .25rem;\n    margin-right: .25rem;\n  }\n\n  .sm\\:my-2 {\n    margin-top: .5rem;\n    margin-bottom: .5rem;\n  }\n\n  .sm\\:mx-2 {\n    margin-left: .5rem;\n    margin-right: .5rem;\n  }\n\n  .sm\\:my-3 {\n    margin-top: .75rem;\n    margin-bottom: .75rem;\n  }\n\n  .sm\\:mx-3 {\n    margin-left: .75rem;\n    margin-right: .75rem;\n  }\n\n  .sm\\:my-4 {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  .sm\\:mx-4 {\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n\n  .sm\\:my-5 {\n    margin-top: 1.25rem;\n    margin-bottom: 1.25rem;\n  }\n\n  .sm\\:mx-5 {\n    margin-left: 1.25rem;\n    margin-right: 1.25rem;\n  }\n\n  .sm\\:my-6 {\n    margin-top: 1.5rem;\n    margin-bottom: 1.5rem;\n  }\n\n  .sm\\:mx-6 {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  .sm\\:my-8 {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  .sm\\:mx-8 {\n    margin-left: 2rem;\n    margin-right: 2rem;\n  }\n\n  .sm\\:my-10 {\n    margin-top: 2.5rem;\n    margin-bottom: 2.5rem;\n  }\n\n  .sm\\:mx-10 {\n    margin-left: 2.5rem;\n    margin-right: 2.5rem;\n  }\n\n  .sm\\:my-12 {\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n  }\n\n  .sm\\:mx-12 {\n    margin-left: 3rem;\n    margin-right: 3rem;\n  }\n\n  .sm\\:my-16 {\n    margin-top: 4rem;\n    margin-bottom: 4rem;\n  }\n\n  .sm\\:mx-16 {\n    margin-left: 4rem;\n    margin-right: 4rem;\n  }\n\n  .sm\\:my-20 {\n    margin-top: 5rem;\n    margin-bottom: 5rem;\n  }\n\n  .sm\\:mx-20 {\n    margin-left: 5rem;\n    margin-right: 5rem;\n  }\n\n  .sm\\:my-24 {\n    margin-top: 6rem;\n    margin-bottom: 6rem;\n  }\n\n  .sm\\:mx-24 {\n    margin-left: 6rem;\n    margin-right: 6rem;\n  }\n\n  .sm\\:my-32 {\n    margin-top: 8rem;\n    margin-bottom: 8rem;\n  }\n\n  .sm\\:mx-32 {\n    margin-left: 8rem;\n    margin-right: 8rem;\n  }\n\n  .sm\\:my-auto {\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n\n  .sm\\:mx-auto {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .sm\\:my-px {\n    margin-top: 1px;\n    margin-bottom: 1px;\n  }\n\n  .sm\\:mx-px {\n    margin-left: 1px;\n    margin-right: 1px;\n  }\n\n  .sm\\:mt-0 {\n    margin-top: 0;\n  }\n\n  .sm\\:mr-0 {\n    margin-right: 0;\n  }\n\n  .sm\\:mb-0 {\n    margin-bottom: 0;\n  }\n\n  .sm\\:ml-0 {\n    margin-left: 0;\n  }\n\n  .sm\\:mt-1 {\n    margin-top: .25rem;\n  }\n\n  .sm\\:mr-1 {\n    margin-right: .25rem;\n  }\n\n  .sm\\:mb-1 {\n    margin-bottom: .25rem;\n  }\n\n  .sm\\:ml-1 {\n    margin-left: .25rem;\n  }\n\n  .sm\\:mt-2 {\n    margin-top: .5rem;\n  }\n\n  .sm\\:mr-2 {\n    margin-right: .5rem;\n  }\n\n  .sm\\:mb-2 {\n    margin-bottom: .5rem;\n  }\n\n  .sm\\:ml-2 {\n    margin-left: .5rem;\n  }\n\n  .sm\\:mt-3 {\n    margin-top: .75rem;\n  }\n\n  .sm\\:mr-3 {\n    margin-right: .75rem;\n  }\n\n  .sm\\:mb-3 {\n    margin-bottom: .75rem;\n  }\n\n  .sm\\:ml-3 {\n    margin-left: .75rem;\n  }\n\n  .sm\\:mt-4 {\n    margin-top: 1rem;\n  }\n\n  .sm\\:mr-4 {\n    margin-right: 1rem;\n  }\n\n  .sm\\:mb-4 {\n    margin-bottom: 1rem;\n  }\n\n  .sm\\:ml-4 {\n    margin-left: 1rem;\n  }\n\n  .sm\\:mt-5 {\n    margin-top: 1.25rem;\n  }\n\n  .sm\\:mr-5 {\n    margin-right: 1.25rem;\n  }\n\n  .sm\\:mb-5 {\n    margin-bottom: 1.25rem;\n  }\n\n  .sm\\:ml-5 {\n    margin-left: 1.25rem;\n  }\n\n  .sm\\:mt-6 {\n    margin-top: 1.5rem;\n  }\n\n  .sm\\:mr-6 {\n    margin-right: 1.5rem;\n  }\n\n  .sm\\:mb-6 {\n    margin-bottom: 1.5rem;\n  }\n\n  .sm\\:ml-6 {\n    margin-left: 1.5rem;\n  }\n\n  .sm\\:mt-8 {\n    margin-top: 2rem;\n  }\n\n  .sm\\:mr-8 {\n    margin-right: 2rem;\n  }\n\n  .sm\\:mb-8 {\n    margin-bottom: 2rem;\n  }\n\n  .sm\\:ml-8 {\n    margin-left: 2rem;\n  }\n\n  .sm\\:mt-10 {\n    margin-top: 2.5rem;\n  }\n\n  .sm\\:mr-10 {\n    margin-right: 2.5rem;\n  }\n\n  .sm\\:mb-10 {\n    margin-bottom: 2.5rem;\n  }\n\n  .sm\\:ml-10 {\n    margin-left: 2.5rem;\n  }\n\n  .sm\\:mt-12 {\n    margin-top: 3rem;\n  }\n\n  .sm\\:mr-12 {\n    margin-right: 3rem;\n  }\n\n  .sm\\:mb-12 {\n    margin-bottom: 3rem;\n  }\n\n  .sm\\:ml-12 {\n    margin-left: 3rem;\n  }\n\n  .sm\\:mt-16 {\n    margin-top: 4rem;\n  }\n\n  .sm\\:mr-16 {\n    margin-right: 4rem;\n  }\n\n  .sm\\:mb-16 {\n    margin-bottom: 4rem;\n  }\n\n  .sm\\:ml-16 {\n    margin-left: 4rem;\n  }\n\n  .sm\\:mt-20 {\n    margin-top: 5rem;\n  }\n\n  .sm\\:mr-20 {\n    margin-right: 5rem;\n  }\n\n  .sm\\:mb-20 {\n    margin-bottom: 5rem;\n  }\n\n  .sm\\:ml-20 {\n    margin-left: 5rem;\n  }\n\n  .sm\\:mt-24 {\n    margin-top: 6rem;\n  }\n\n  .sm\\:mr-24 {\n    margin-right: 6rem;\n  }\n\n  .sm\\:mb-24 {\n    margin-bottom: 6rem;\n  }\n\n  .sm\\:ml-24 {\n    margin-left: 6rem;\n  }\n\n  .sm\\:mt-32 {\n    margin-top: 8rem;\n  }\n\n  .sm\\:mr-32 {\n    margin-right: 8rem;\n  }\n\n  .sm\\:mb-32 {\n    margin-bottom: 8rem;\n  }\n\n  .sm\\:ml-32 {\n    margin-left: 8rem;\n  }\n\n  .sm\\:mt-auto {\n    margin-top: auto;\n  }\n\n  .sm\\:mr-auto {\n    margin-right: auto;\n  }\n\n  .sm\\:mb-auto {\n    margin-bottom: auto;\n  }\n\n  .sm\\:ml-auto {\n    margin-left: auto;\n  }\n\n  .sm\\:mt-px {\n    margin-top: 1px;\n  }\n\n  .sm\\:mr-px {\n    margin-right: 1px;\n  }\n\n  .sm\\:mb-px {\n    margin-bottom: 1px;\n  }\n\n  .sm\\:ml-px {\n    margin-left: 1px;\n  }\n\n  .sm\\:max-h-full {\n    max-height: 100%;\n  }\n\n  .sm\\:max-h-screen {\n    max-height: 100vh;\n  }\n\n  .sm\\:max-w-xs {\n    max-width: 20rem;\n  }\n\n  .sm\\:max-w-sm {\n    max-width: 30rem;\n  }\n\n  .sm\\:max-w-md {\n    max-width: 40rem;\n  }\n\n  .sm\\:max-w-lg {\n    max-width: 50rem;\n  }\n\n  .sm\\:max-w-xl {\n    max-width: 60rem;\n  }\n\n  .sm\\:max-w-2xl {\n    max-width: 70rem;\n  }\n\n  .sm\\:max-w-3xl {\n    max-width: 80rem;\n  }\n\n  .sm\\:max-w-4xl {\n    max-width: 90rem;\n  }\n\n  .sm\\:max-w-5xl {\n    max-width: 100rem;\n  }\n\n  .sm\\:max-w-full {\n    max-width: 100%;\n  }\n\n  .sm\\:min-h-0 {\n    min-height: 0;\n  }\n\n  .sm\\:min-h-full {\n    min-height: 100%;\n  }\n\n  .sm\\:min-h-screen {\n    min-height: 100vh;\n  }\n\n  .sm\\:min-w-0 {\n    min-width: 0;\n  }\n\n  .sm\\:min-w-full {\n    min-width: 100%;\n  }\n\n  .sm\\:-m-0 {\n    margin: 0;\n  }\n\n  .sm\\:-m-1 {\n    margin: -0.25rem;\n  }\n\n  .sm\\:-m-2 {\n    margin: -0.5rem;\n  }\n\n  .sm\\:-m-3 {\n    margin: -0.75rem;\n  }\n\n  .sm\\:-m-4 {\n    margin: -1rem;\n  }\n\n  .sm\\:-m-5 {\n    margin: -1.25rem;\n  }\n\n  .sm\\:-m-6 {\n    margin: -1.5rem;\n  }\n\n  .sm\\:-m-8 {\n    margin: -2rem;\n  }\n\n  .sm\\:-m-10 {\n    margin: -2.5rem;\n  }\n\n  .sm\\:-m-12 {\n    margin: -3rem;\n  }\n\n  .sm\\:-m-16 {\n    margin: -4rem;\n  }\n\n  .sm\\:-m-20 {\n    margin: -5rem;\n  }\n\n  .sm\\:-m-24 {\n    margin: -6rem;\n  }\n\n  .sm\\:-m-32 {\n    margin: -8rem;\n  }\n\n  .sm\\:-m-px {\n    margin: -1px;\n  }\n\n  .sm\\:-my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .sm\\:-mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .sm\\:-my-1 {\n    margin-top: -0.25rem;\n    margin-bottom: -0.25rem;\n  }\n\n  .sm\\:-mx-1 {\n    margin-left: -0.25rem;\n    margin-right: -0.25rem;\n  }\n\n  .sm\\:-my-2 {\n    margin-top: -0.5rem;\n    margin-bottom: -0.5rem;\n  }\n\n  .sm\\:-mx-2 {\n    margin-left: -0.5rem;\n    margin-right: -0.5rem;\n  }\n\n  .sm\\:-my-3 {\n    margin-top: -0.75rem;\n    margin-bottom: -0.75rem;\n  }\n\n  .sm\\:-mx-3 {\n    margin-left: -0.75rem;\n    margin-right: -0.75rem;\n  }\n\n  .sm\\:-my-4 {\n    margin-top: -1rem;\n    margin-bottom: -1rem;\n  }\n\n  .sm\\:-mx-4 {\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n\n  .sm\\:-my-5 {\n    margin-top: -1.25rem;\n    margin-bottom: -1.25rem;\n  }\n\n  .sm\\:-mx-5 {\n    margin-left: -1.25rem;\n    margin-right: -1.25rem;\n  }\n\n  .sm\\:-my-6 {\n    margin-top: -1.5rem;\n    margin-bottom: -1.5rem;\n  }\n\n  .sm\\:-mx-6 {\n    margin-left: -1.5rem;\n    margin-right: -1.5rem;\n  }\n\n  .sm\\:-my-8 {\n    margin-top: -2rem;\n    margin-bottom: -2rem;\n  }\n\n  .sm\\:-mx-8 {\n    margin-left: -2rem;\n    margin-right: -2rem;\n  }\n\n  .sm\\:-my-10 {\n    margin-top: -2.5rem;\n    margin-bottom: -2.5rem;\n  }\n\n  .sm\\:-mx-10 {\n    margin-left: -2.5rem;\n    margin-right: -2.5rem;\n  }\n\n  .sm\\:-my-12 {\n    margin-top: -3rem;\n    margin-bottom: -3rem;\n  }\n\n  .sm\\:-mx-12 {\n    margin-left: -3rem;\n    margin-right: -3rem;\n  }\n\n  .sm\\:-my-16 {\n    margin-top: -4rem;\n    margin-bottom: -4rem;\n  }\n\n  .sm\\:-mx-16 {\n    margin-left: -4rem;\n    margin-right: -4rem;\n  }\n\n  .sm\\:-my-20 {\n    margin-top: -5rem;\n    margin-bottom: -5rem;\n  }\n\n  .sm\\:-mx-20 {\n    margin-left: -5rem;\n    margin-right: -5rem;\n  }\n\n  .sm\\:-my-24 {\n    margin-top: -6rem;\n    margin-bottom: -6rem;\n  }\n\n  .sm\\:-mx-24 {\n    margin-left: -6rem;\n    margin-right: -6rem;\n  }\n\n  .sm\\:-my-32 {\n    margin-top: -8rem;\n    margin-bottom: -8rem;\n  }\n\n  .sm\\:-mx-32 {\n    margin-left: -8rem;\n    margin-right: -8rem;\n  }\n\n  .sm\\:-my-px {\n    margin-top: -1px;\n    margin-bottom: -1px;\n  }\n\n  .sm\\:-mx-px {\n    margin-left: -1px;\n    margin-right: -1px;\n  }\n\n  .sm\\:-mt-0 {\n    margin-top: 0;\n  }\n\n  .sm\\:-mr-0 {\n    margin-right: 0;\n  }\n\n  .sm\\:-mb-0 {\n    margin-bottom: 0;\n  }\n\n  .sm\\:-ml-0 {\n    margin-left: 0;\n  }\n\n  .sm\\:-mt-1 {\n    margin-top: -0.25rem;\n  }\n\n  .sm\\:-mr-1 {\n    margin-right: -0.25rem;\n  }\n\n  .sm\\:-mb-1 {\n    margin-bottom: -0.25rem;\n  }\n\n  .sm\\:-ml-1 {\n    margin-left: -0.25rem;\n  }\n\n  .sm\\:-mt-2 {\n    margin-top: -0.5rem;\n  }\n\n  .sm\\:-mr-2 {\n    margin-right: -0.5rem;\n  }\n\n  .sm\\:-mb-2 {\n    margin-bottom: -0.5rem;\n  }\n\n  .sm\\:-ml-2 {\n    margin-left: -0.5rem;\n  }\n\n  .sm\\:-mt-3 {\n    margin-top: -0.75rem;\n  }\n\n  .sm\\:-mr-3 {\n    margin-right: -0.75rem;\n  }\n\n  .sm\\:-mb-3 {\n    margin-bottom: -0.75rem;\n  }\n\n  .sm\\:-ml-3 {\n    margin-left: -0.75rem;\n  }\n\n  .sm\\:-mt-4 {\n    margin-top: -1rem;\n  }\n\n  .sm\\:-mr-4 {\n    margin-right: -1rem;\n  }\n\n  .sm\\:-mb-4 {\n    margin-bottom: -1rem;\n  }\n\n  .sm\\:-ml-4 {\n    margin-left: -1rem;\n  }\n\n  .sm\\:-mt-5 {\n    margin-top: -1.25rem;\n  }\n\n  .sm\\:-mr-5 {\n    margin-right: -1.25rem;\n  }\n\n  .sm\\:-mb-5 {\n    margin-bottom: -1.25rem;\n  }\n\n  .sm\\:-ml-5 {\n    margin-left: -1.25rem;\n  }\n\n  .sm\\:-mt-6 {\n    margin-top: -1.5rem;\n  }\n\n  .sm\\:-mr-6 {\n    margin-right: -1.5rem;\n  }\n\n  .sm\\:-mb-6 {\n    margin-bottom: -1.5rem;\n  }\n\n  .sm\\:-ml-6 {\n    margin-left: -1.5rem;\n  }\n\n  .sm\\:-mt-8 {\n    margin-top: -2rem;\n  }\n\n  .sm\\:-mr-8 {\n    margin-right: -2rem;\n  }\n\n  .sm\\:-mb-8 {\n    margin-bottom: -2rem;\n  }\n\n  .sm\\:-ml-8 {\n    margin-left: -2rem;\n  }\n\n  .sm\\:-mt-10 {\n    margin-top: -2.5rem;\n  }\n\n  .sm\\:-mr-10 {\n    margin-right: -2.5rem;\n  }\n\n  .sm\\:-mb-10 {\n    margin-bottom: -2.5rem;\n  }\n\n  .sm\\:-ml-10 {\n    margin-left: -2.5rem;\n  }\n\n  .sm\\:-mt-12 {\n    margin-top: -3rem;\n  }\n\n  .sm\\:-mr-12 {\n    margin-right: -3rem;\n  }\n\n  .sm\\:-mb-12 {\n    margin-bottom: -3rem;\n  }\n\n  .sm\\:-ml-12 {\n    margin-left: -3rem;\n  }\n\n  .sm\\:-mt-16 {\n    margin-top: -4rem;\n  }\n\n  .sm\\:-mr-16 {\n    margin-right: -4rem;\n  }\n\n  .sm\\:-mb-16 {\n    margin-bottom: -4rem;\n  }\n\n  .sm\\:-ml-16 {\n    margin-left: -4rem;\n  }\n\n  .sm\\:-mt-20 {\n    margin-top: -5rem;\n  }\n\n  .sm\\:-mr-20 {\n    margin-right: -5rem;\n  }\n\n  .sm\\:-mb-20 {\n    margin-bottom: -5rem;\n  }\n\n  .sm\\:-ml-20 {\n    margin-left: -5rem;\n  }\n\n  .sm\\:-mt-24 {\n    margin-top: -6rem;\n  }\n\n  .sm\\:-mr-24 {\n    margin-right: -6rem;\n  }\n\n  .sm\\:-mb-24 {\n    margin-bottom: -6rem;\n  }\n\n  .sm\\:-ml-24 {\n    margin-left: -6rem;\n  }\n\n  .sm\\:-mt-32 {\n    margin-top: -8rem;\n  }\n\n  .sm\\:-mr-32 {\n    margin-right: -8rem;\n  }\n\n  .sm\\:-mb-32 {\n    margin-bottom: -8rem;\n  }\n\n  .sm\\:-ml-32 {\n    margin-left: -8rem;\n  }\n\n  .sm\\:-mt-px {\n    margin-top: -1px;\n  }\n\n  .sm\\:-mr-px {\n    margin-right: -1px;\n  }\n\n  .sm\\:-mb-px {\n    margin-bottom: -1px;\n  }\n\n  .sm\\:-ml-px {\n    margin-left: -1px;\n  }\n\n  .sm\\:opacity-0 {\n    opacity: 0;\n  }\n\n  .sm\\:opacity-25 {\n    opacity: .25;\n  }\n\n  .sm\\:opacity-50 {\n    opacity: .5;\n  }\n\n  .sm\\:opacity-75 {\n    opacity: .75;\n  }\n\n  .sm\\:opacity-100 {\n    opacity: 1;\n  }\n\n  .sm\\:overflow-auto {\n    overflow: auto;\n  }\n\n  .sm\\:overflow-hidden {\n    overflow: hidden;\n  }\n\n  .sm\\:overflow-visible {\n    overflow: visible;\n  }\n\n  .sm\\:overflow-scroll {\n    overflow: scroll;\n  }\n\n  .sm\\:overflow-x-auto {\n    overflow-x: auto;\n  }\n\n  .sm\\:overflow-y-auto {\n    overflow-y: auto;\n  }\n\n  .sm\\:overflow-x-hidden {\n    overflow-x: hidden;\n  }\n\n  .sm\\:overflow-y-hidden {\n    overflow-y: hidden;\n  }\n\n  .sm\\:overflow-x-visible {\n    overflow-x: visible;\n  }\n\n  .sm\\:overflow-y-visible {\n    overflow-y: visible;\n  }\n\n  .sm\\:overflow-x-scroll {\n    overflow-x: scroll;\n  }\n\n  .sm\\:overflow-y-scroll {\n    overflow-y: scroll;\n  }\n\n  .sm\\:scrolling-touch {\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .sm\\:scrolling-auto {\n    -webkit-overflow-scrolling: auto;\n  }\n\n  .sm\\:p-0 {\n    padding: 0;\n  }\n\n  .sm\\:p-1 {\n    padding: .25rem;\n  }\n\n  .sm\\:p-2 {\n    padding: .5rem;\n  }\n\n  .sm\\:p-3 {\n    padding: .75rem;\n  }\n\n  .sm\\:p-4 {\n    padding: 1rem;\n  }\n\n  .sm\\:p-5 {\n    padding: 1.25rem;\n  }\n\n  .sm\\:p-6 {\n    padding: 1.5rem;\n  }\n\n  .sm\\:p-8 {\n    padding: 2rem;\n  }\n\n  .sm\\:p-10 {\n    padding: 2.5rem;\n  }\n\n  .sm\\:p-12 {\n    padding: 3rem;\n  }\n\n  .sm\\:p-16 {\n    padding: 4rem;\n  }\n\n  .sm\\:p-20 {\n    padding: 5rem;\n  }\n\n  .sm\\:p-24 {\n    padding: 6rem;\n  }\n\n  .sm\\:p-32 {\n    padding: 8rem;\n  }\n\n  .sm\\:p-px {\n    padding: 1px;\n  }\n\n  .sm\\:py-0 {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n\n  .sm\\:px-0 {\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  .sm\\:py-1 {\n    padding-top: .25rem;\n    padding-bottom: .25rem;\n  }\n\n  .sm\\:px-1 {\n    padding-left: .25rem;\n    padding-right: .25rem;\n  }\n\n  .sm\\:py-2 {\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n  }\n\n  .sm\\:px-2 {\n    padding-left: .5rem;\n    padding-right: .5rem;\n  }\n\n  .sm\\:py-3 {\n    padding-top: .75rem;\n    padding-bottom: .75rem;\n  }\n\n  .sm\\:px-3 {\n    padding-left: .75rem;\n    padding-right: .75rem;\n  }\n\n  .sm\\:py-4 {\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n\n  .sm\\:px-4 {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  .sm\\:py-5 {\n    padding-top: 1.25rem;\n    padding-bottom: 1.25rem;\n  }\n\n  .sm\\:px-5 {\n    padding-left: 1.25rem;\n    padding-right: 1.25rem;\n  }\n\n  .sm\\:py-6 {\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n  }\n\n  .sm\\:px-6 {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n\n  .sm\\:py-8 {\n    padding-top: 2rem;\n    padding-bottom: 2rem;\n  }\n\n  .sm\\:px-8 {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  .sm\\:py-10 {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n\n  .sm\\:px-10 {\n    padding-left: 2.5rem;\n    padding-right: 2.5rem;\n  }\n\n  .sm\\:py-12 {\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n  }\n\n  .sm\\:px-12 {\n    padding-left: 3rem;\n    padding-right: 3rem;\n  }\n\n  .sm\\:py-16 {\n    padding-top: 4rem;\n    padding-bottom: 4rem;\n  }\n\n  .sm\\:px-16 {\n    padding-left: 4rem;\n    padding-right: 4rem;\n  }\n\n  .sm\\:py-20 {\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n  }\n\n  .sm\\:px-20 {\n    padding-left: 5rem;\n    padding-right: 5rem;\n  }\n\n  .sm\\:py-24 {\n    padding-top: 6rem;\n    padding-bottom: 6rem;\n  }\n\n  .sm\\:px-24 {\n    padding-left: 6rem;\n    padding-right: 6rem;\n  }\n\n  .sm\\:py-32 {\n    padding-top: 8rem;\n    padding-bottom: 8rem;\n  }\n\n  .sm\\:px-32 {\n    padding-left: 8rem;\n    padding-right: 8rem;\n  }\n\n  .sm\\:py-px {\n    padding-top: 1px;\n    padding-bottom: 1px;\n  }\n\n  .sm\\:px-px {\n    padding-left: 1px;\n    padding-right: 1px;\n  }\n\n  .sm\\:pt-0 {\n    padding-top: 0;\n  }\n\n  .sm\\:pr-0 {\n    padding-right: 0;\n  }\n\n  .sm\\:pb-0 {\n    padding-bottom: 0;\n  }\n\n  .sm\\:pl-0 {\n    padding-left: 0;\n  }\n\n  .sm\\:pt-1 {\n    padding-top: .25rem;\n  }\n\n  .sm\\:pr-1 {\n    padding-right: .25rem;\n  }\n\n  .sm\\:pb-1 {\n    padding-bottom: .25rem;\n  }\n\n  .sm\\:pl-1 {\n    padding-left: .25rem;\n  }\n\n  .sm\\:pt-2 {\n    padding-top: .5rem;\n  }\n\n  .sm\\:pr-2 {\n    padding-right: .5rem;\n  }\n\n  .sm\\:pb-2 {\n    padding-bottom: .5rem;\n  }\n\n  .sm\\:pl-2 {\n    padding-left: .5rem;\n  }\n\n  .sm\\:pt-3 {\n    padding-top: .75rem;\n  }\n\n  .sm\\:pr-3 {\n    padding-right: .75rem;\n  }\n\n  .sm\\:pb-3 {\n    padding-bottom: .75rem;\n  }\n\n  .sm\\:pl-3 {\n    padding-left: .75rem;\n  }\n\n  .sm\\:pt-4 {\n    padding-top: 1rem;\n  }\n\n  .sm\\:pr-4 {\n    padding-right: 1rem;\n  }\n\n  .sm\\:pb-4 {\n    padding-bottom: 1rem;\n  }\n\n  .sm\\:pl-4 {\n    padding-left: 1rem;\n  }\n\n  .sm\\:pt-5 {\n    padding-top: 1.25rem;\n  }\n\n  .sm\\:pr-5 {\n    padding-right: 1.25rem;\n  }\n\n  .sm\\:pb-5 {\n    padding-bottom: 1.25rem;\n  }\n\n  .sm\\:pl-5 {\n    padding-left: 1.25rem;\n  }\n\n  .sm\\:pt-6 {\n    padding-top: 1.5rem;\n  }\n\n  .sm\\:pr-6 {\n    padding-right: 1.5rem;\n  }\n\n  .sm\\:pb-6 {\n    padding-bottom: 1.5rem;\n  }\n\n  .sm\\:pl-6 {\n    padding-left: 1.5rem;\n  }\n\n  .sm\\:pt-8 {\n    padding-top: 2rem;\n  }\n\n  .sm\\:pr-8 {\n    padding-right: 2rem;\n  }\n\n  .sm\\:pb-8 {\n    padding-bottom: 2rem;\n  }\n\n  .sm\\:pl-8 {\n    padding-left: 2rem;\n  }\n\n  .sm\\:pt-10 {\n    padding-top: 2.5rem;\n  }\n\n  .sm\\:pr-10 {\n    padding-right: 2.5rem;\n  }\n\n  .sm\\:pb-10 {\n    padding-bottom: 2.5rem;\n  }\n\n  .sm\\:pl-10 {\n    padding-left: 2.5rem;\n  }\n\n  .sm\\:pt-12 {\n    padding-top: 3rem;\n  }\n\n  .sm\\:pr-12 {\n    padding-right: 3rem;\n  }\n\n  .sm\\:pb-12 {\n    padding-bottom: 3rem;\n  }\n\n  .sm\\:pl-12 {\n    padding-left: 3rem;\n  }\n\n  .sm\\:pt-16 {\n    padding-top: 4rem;\n  }\n\n  .sm\\:pr-16 {\n    padding-right: 4rem;\n  }\n\n  .sm\\:pb-16 {\n    padding-bottom: 4rem;\n  }\n\n  .sm\\:pl-16 {\n    padding-left: 4rem;\n  }\n\n  .sm\\:pt-20 {\n    padding-top: 5rem;\n  }\n\n  .sm\\:pr-20 {\n    padding-right: 5rem;\n  }\n\n  .sm\\:pb-20 {\n    padding-bottom: 5rem;\n  }\n\n  .sm\\:pl-20 {\n    padding-left: 5rem;\n  }\n\n  .sm\\:pt-24 {\n    padding-top: 6rem;\n  }\n\n  .sm\\:pr-24 {\n    padding-right: 6rem;\n  }\n\n  .sm\\:pb-24 {\n    padding-bottom: 6rem;\n  }\n\n  .sm\\:pl-24 {\n    padding-left: 6rem;\n  }\n\n  .sm\\:pt-32 {\n    padding-top: 8rem;\n  }\n\n  .sm\\:pr-32 {\n    padding-right: 8rem;\n  }\n\n  .sm\\:pb-32 {\n    padding-bottom: 8rem;\n  }\n\n  .sm\\:pl-32 {\n    padding-left: 8rem;\n  }\n\n  .sm\\:pt-px {\n    padding-top: 1px;\n  }\n\n  .sm\\:pr-px {\n    padding-right: 1px;\n  }\n\n  .sm\\:pb-px {\n    padding-bottom: 1px;\n  }\n\n  .sm\\:pl-px {\n    padding-left: 1px;\n  }\n\n  .sm\\:pointer-events-none {\n    pointer-events: none;\n  }\n\n  .sm\\:pointer-events-auto {\n    pointer-events: auto;\n  }\n\n  .sm\\:static {\n    position: static;\n  }\n\n  .sm\\:fixed {\n    position: fixed;\n  }\n\n  .sm\\:absolute {\n    position: absolute;\n  }\n\n  .sm\\:relative {\n    position: relative;\n  }\n\n  .sm\\:sticky {\n    position: -webkit-sticky;\n    position: sticky;\n  }\n\n  .sm\\:pin-none {\n    top: auto;\n    right: auto;\n    bottom: auto;\n    left: auto;\n  }\n\n  .sm\\:pin {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  .sm\\:pin-y {\n    top: 0;\n    bottom: 0;\n  }\n\n  .sm\\:pin-x {\n    right: 0;\n    left: 0;\n  }\n\n  .sm\\:pin-t {\n    top: 0;\n  }\n\n  .sm\\:pin-r {\n    right: 0;\n  }\n\n  .sm\\:pin-b {\n    bottom: 0;\n  }\n\n  .sm\\:pin-l {\n    left: 0;\n  }\n\n  .sm\\:resize-none {\n    resize: none;\n  }\n\n  .sm\\:resize-y {\n    resize: vertical;\n  }\n\n  .sm\\:resize-x {\n    resize: horizontal;\n  }\n\n  .sm\\:resize {\n    resize: both;\n  }\n\n  .sm\\:shadow {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .sm\\:shadow-md {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .sm\\:shadow-lg {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .sm\\:shadow-inner {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .sm\\:shadow-outline {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .sm\\:shadow-none {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .sm\\:hover\\:shadow:hover {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .sm\\:hover\\:shadow-md:hover {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .sm\\:hover\\:shadow-lg:hover {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .sm\\:hover\\:shadow-inner:hover {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .sm\\:hover\\:shadow-outline:hover {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .sm\\:hover\\:shadow-none:hover {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .sm\\:focus\\:shadow:focus {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .sm\\:focus\\:shadow-md:focus {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .sm\\:focus\\:shadow-lg:focus {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .sm\\:focus\\:shadow-inner:focus {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .sm\\:focus\\:shadow-outline:focus {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .sm\\:focus\\:shadow-none:focus {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .sm\\:table-auto {\n    table-layout: auto;\n  }\n\n  .sm\\:table-fixed {\n    table-layout: fixed;\n  }\n\n  .sm\\:text-left {\n    text-align: left;\n  }\n\n  .sm\\:text-center {\n    text-align: center;\n  }\n\n  .sm\\:text-right {\n    text-align: right;\n  }\n\n  .sm\\:text-justify {\n    text-align: justify;\n  }\n\n  .sm\\:text-transparent {\n    color: transparent;\n  }\n\n  .sm\\:text-black {\n    color: #22292f;\n  }\n\n  .sm\\:text-grey-darkest {\n    color: #3d4852;\n  }\n\n  .sm\\:text-grey-darker {\n    color: #606f7b;\n  }\n\n  .sm\\:text-grey-dark {\n    color: #8795a1;\n  }\n\n  .sm\\:text-grey {\n    color: #b8c2cc;\n  }\n\n  .sm\\:text-grey-light {\n    color: #dae1e7;\n  }\n\n  .sm\\:text-grey-lighter {\n    color: #f1f5f8;\n  }\n\n  .sm\\:text-grey-lightest {\n    color: #f8fafc;\n  }\n\n  .sm\\:text-white {\n    color: #fff;\n  }\n\n  .sm\\:text-red-darkest {\n    color: #3b0d0c;\n  }\n\n  .sm\\:text-red-darker {\n    color: #621b18;\n  }\n\n  .sm\\:text-red-dark {\n    color: #cc1f1a;\n  }\n\n  .sm\\:text-red {\n    color: #e3342f;\n  }\n\n  .sm\\:text-red-light {\n    color: #ef5753;\n  }\n\n  .sm\\:text-red-lighter {\n    color: #f9acaa;\n  }\n\n  .sm\\:text-red-lightest {\n    color: #fcebea;\n  }\n\n  .sm\\:text-orange-darkest {\n    color: #462a16;\n  }\n\n  .sm\\:text-orange-darker {\n    color: #613b1f;\n  }\n\n  .sm\\:text-orange-dark {\n    color: #de751f;\n  }\n\n  .sm\\:text-orange {\n    color: #f6993f;\n  }\n\n  .sm\\:text-orange-light {\n    color: #faad63;\n  }\n\n  .sm\\:text-orange-lighter {\n    color: #fcd9b6;\n  }\n\n  .sm\\:text-orange-lightest {\n    color: #fff5eb;\n  }\n\n  .sm\\:text-yellow-darkest {\n    color: #453411;\n  }\n\n  .sm\\:text-yellow-darker {\n    color: #684f1d;\n  }\n\n  .sm\\:text-yellow-dark {\n    color: #f2d024;\n  }\n\n  .sm\\:text-yellow {\n    color: #ffed4a;\n  }\n\n  .sm\\:text-yellow-light {\n    color: #fff382;\n  }\n\n  .sm\\:text-yellow-lighter {\n    color: #fff9c2;\n  }\n\n  .sm\\:text-yellow-lightest {\n    color: #fcfbeb;\n  }\n\n  .sm\\:text-green-darkest {\n    color: #0f2f21;\n  }\n\n  .sm\\:text-green-darker {\n    color: #1a4731;\n  }\n\n  .sm\\:text-green-dark {\n    color: #1f9d55;\n  }\n\n  .sm\\:text-green {\n    color: #38c172;\n  }\n\n  .sm\\:text-green-light {\n    color: #51d88a;\n  }\n\n  .sm\\:text-green-lighter {\n    color: #a2f5bf;\n  }\n\n  .sm\\:text-green-lightest {\n    color: #e3fcec;\n  }\n\n  .sm\\:text-teal-darkest {\n    color: #0d3331;\n  }\n\n  .sm\\:text-teal-darker {\n    color: #20504f;\n  }\n\n  .sm\\:text-teal-dark {\n    color: #38a89d;\n  }\n\n  .sm\\:text-teal {\n    color: #4dc0b5;\n  }\n\n  .sm\\:text-teal-light {\n    color: #64d5ca;\n  }\n\n  .sm\\:text-teal-lighter {\n    color: #a0f0ed;\n  }\n\n  .sm\\:text-teal-lightest {\n    color: #e8fffe;\n  }\n\n  .sm\\:text-blue-darkest {\n    color: #12283a;\n  }\n\n  .sm\\:text-blue-darker {\n    color: #1c3d5a;\n  }\n\n  .sm\\:text-blue-dark {\n    color: #2779bd;\n  }\n\n  .sm\\:text-blue {\n    color: #3490dc;\n  }\n\n  .sm\\:text-blue-light {\n    color: #6cb2eb;\n  }\n\n  .sm\\:text-blue-lighter {\n    color: #bcdefa;\n  }\n\n  .sm\\:text-blue-lightest {\n    color: #eff8ff;\n  }\n\n  .sm\\:text-indigo-darkest {\n    color: #191e38;\n  }\n\n  .sm\\:text-indigo-darker {\n    color: #2f365f;\n  }\n\n  .sm\\:text-indigo-dark {\n    color: #5661b3;\n  }\n\n  .sm\\:text-indigo {\n    color: #6574cd;\n  }\n\n  .sm\\:text-indigo-light {\n    color: #7886d7;\n  }\n\n  .sm\\:text-indigo-lighter {\n    color: #b2b7ff;\n  }\n\n  .sm\\:text-indigo-lightest {\n    color: #e6e8ff;\n  }\n\n  .sm\\:text-purple-darkest {\n    color: #21183c;\n  }\n\n  .sm\\:text-purple-darker {\n    color: #382b5f;\n  }\n\n  .sm\\:text-purple-dark {\n    color: #794acf;\n  }\n\n  .sm\\:text-purple {\n    color: #9561e2;\n  }\n\n  .sm\\:text-purple-light {\n    color: #a779e9;\n  }\n\n  .sm\\:text-purple-lighter {\n    color: #d6bbfc;\n  }\n\n  .sm\\:text-purple-lightest {\n    color: #f3ebff;\n  }\n\n  .sm\\:text-pink-darkest {\n    color: #451225;\n  }\n\n  .sm\\:text-pink-darker {\n    color: #6f213f;\n  }\n\n  .sm\\:text-pink-dark {\n    color: #eb5286;\n  }\n\n  .sm\\:text-pink {\n    color: #f66d9b;\n  }\n\n  .sm\\:text-pink-light {\n    color: #fa7ea8;\n  }\n\n  .sm\\:text-pink-lighter {\n    color: #ffbbca;\n  }\n\n  .sm\\:text-pink-lightest {\n    color: #ffebef;\n  }\n\n  .sm\\:hover\\:text-transparent:hover {\n    color: transparent;\n  }\n\n  .sm\\:hover\\:text-black:hover {\n    color: #22292f;\n  }\n\n  .sm\\:hover\\:text-grey-darkest:hover {\n    color: #3d4852;\n  }\n\n  .sm\\:hover\\:text-grey-darker:hover {\n    color: #606f7b;\n  }\n\n  .sm\\:hover\\:text-grey-dark:hover {\n    color: #8795a1;\n  }\n\n  .sm\\:hover\\:text-grey:hover {\n    color: #b8c2cc;\n  }\n\n  .sm\\:hover\\:text-grey-light:hover {\n    color: #dae1e7;\n  }\n\n  .sm\\:hover\\:text-grey-lighter:hover {\n    color: #f1f5f8;\n  }\n\n  .sm\\:hover\\:text-grey-lightest:hover {\n    color: #f8fafc;\n  }\n\n  .sm\\:hover\\:text-white:hover {\n    color: #fff;\n  }\n\n  .sm\\:hover\\:text-red-darkest:hover {\n    color: #3b0d0c;\n  }\n\n  .sm\\:hover\\:text-red-darker:hover {\n    color: #621b18;\n  }\n\n  .sm\\:hover\\:text-red-dark:hover {\n    color: #cc1f1a;\n  }\n\n  .sm\\:hover\\:text-red:hover {\n    color: #e3342f;\n  }\n\n  .sm\\:hover\\:text-red-light:hover {\n    color: #ef5753;\n  }\n\n  .sm\\:hover\\:text-red-lighter:hover {\n    color: #f9acaa;\n  }\n\n  .sm\\:hover\\:text-red-lightest:hover {\n    color: #fcebea;\n  }\n\n  .sm\\:hover\\:text-orange-darkest:hover {\n    color: #462a16;\n  }\n\n  .sm\\:hover\\:text-orange-darker:hover {\n    color: #613b1f;\n  }\n\n  .sm\\:hover\\:text-orange-dark:hover {\n    color: #de751f;\n  }\n\n  .sm\\:hover\\:text-orange:hover {\n    color: #f6993f;\n  }\n\n  .sm\\:hover\\:text-orange-light:hover {\n    color: #faad63;\n  }\n\n  .sm\\:hover\\:text-orange-lighter:hover {\n    color: #fcd9b6;\n  }\n\n  .sm\\:hover\\:text-orange-lightest:hover {\n    color: #fff5eb;\n  }\n\n  .sm\\:hover\\:text-yellow-darkest:hover {\n    color: #453411;\n  }\n\n  .sm\\:hover\\:text-yellow-darker:hover {\n    color: #684f1d;\n  }\n\n  .sm\\:hover\\:text-yellow-dark:hover {\n    color: #f2d024;\n  }\n\n  .sm\\:hover\\:text-yellow:hover {\n    color: #ffed4a;\n  }\n\n  .sm\\:hover\\:text-yellow-light:hover {\n    color: #fff382;\n  }\n\n  .sm\\:hover\\:text-yellow-lighter:hover {\n    color: #fff9c2;\n  }\n\n  .sm\\:hover\\:text-yellow-lightest:hover {\n    color: #fcfbeb;\n  }\n\n  .sm\\:hover\\:text-green-darkest:hover {\n    color: #0f2f21;\n  }\n\n  .sm\\:hover\\:text-green-darker:hover {\n    color: #1a4731;\n  }\n\n  .sm\\:hover\\:text-green-dark:hover {\n    color: #1f9d55;\n  }\n\n  .sm\\:hover\\:text-green:hover {\n    color: #38c172;\n  }\n\n  .sm\\:hover\\:text-green-light:hover {\n    color: #51d88a;\n  }\n\n  .sm\\:hover\\:text-green-lighter:hover {\n    color: #a2f5bf;\n  }\n\n  .sm\\:hover\\:text-green-lightest:hover {\n    color: #e3fcec;\n  }\n\n  .sm\\:hover\\:text-teal-darkest:hover {\n    color: #0d3331;\n  }\n\n  .sm\\:hover\\:text-teal-darker:hover {\n    color: #20504f;\n  }\n\n  .sm\\:hover\\:text-teal-dark:hover {\n    color: #38a89d;\n  }\n\n  .sm\\:hover\\:text-teal:hover {\n    color: #4dc0b5;\n  }\n\n  .sm\\:hover\\:text-teal-light:hover {\n    color: #64d5ca;\n  }\n\n  .sm\\:hover\\:text-teal-lighter:hover {\n    color: #a0f0ed;\n  }\n\n  .sm\\:hover\\:text-teal-lightest:hover {\n    color: #e8fffe;\n  }\n\n  .sm\\:hover\\:text-blue-darkest:hover {\n    color: #12283a;\n  }\n\n  .sm\\:hover\\:text-blue-darker:hover {\n    color: #1c3d5a;\n  }\n\n  .sm\\:hover\\:text-blue-dark:hover {\n    color: #2779bd;\n  }\n\n  .sm\\:hover\\:text-blue:hover {\n    color: #3490dc;\n  }\n\n  .sm\\:hover\\:text-blue-light:hover {\n    color: #6cb2eb;\n  }\n\n  .sm\\:hover\\:text-blue-lighter:hover {\n    color: #bcdefa;\n  }\n\n  .sm\\:hover\\:text-blue-lightest:hover {\n    color: #eff8ff;\n  }\n\n  .sm\\:hover\\:text-indigo-darkest:hover {\n    color: #191e38;\n  }\n\n  .sm\\:hover\\:text-indigo-darker:hover {\n    color: #2f365f;\n  }\n\n  .sm\\:hover\\:text-indigo-dark:hover {\n    color: #5661b3;\n  }\n\n  .sm\\:hover\\:text-indigo:hover {\n    color: #6574cd;\n  }\n\n  .sm\\:hover\\:text-indigo-light:hover {\n    color: #7886d7;\n  }\n\n  .sm\\:hover\\:text-indigo-lighter:hover {\n    color: #b2b7ff;\n  }\n\n  .sm\\:hover\\:text-indigo-lightest:hover {\n    color: #e6e8ff;\n  }\n\n  .sm\\:hover\\:text-purple-darkest:hover {\n    color: #21183c;\n  }\n\n  .sm\\:hover\\:text-purple-darker:hover {\n    color: #382b5f;\n  }\n\n  .sm\\:hover\\:text-purple-dark:hover {\n    color: #794acf;\n  }\n\n  .sm\\:hover\\:text-purple:hover {\n    color: #9561e2;\n  }\n\n  .sm\\:hover\\:text-purple-light:hover {\n    color: #a779e9;\n  }\n\n  .sm\\:hover\\:text-purple-lighter:hover {\n    color: #d6bbfc;\n  }\n\n  .sm\\:hover\\:text-purple-lightest:hover {\n    color: #f3ebff;\n  }\n\n  .sm\\:hover\\:text-pink-darkest:hover {\n    color: #451225;\n  }\n\n  .sm\\:hover\\:text-pink-darker:hover {\n    color: #6f213f;\n  }\n\n  .sm\\:hover\\:text-pink-dark:hover {\n    color: #eb5286;\n  }\n\n  .sm\\:hover\\:text-pink:hover {\n    color: #f66d9b;\n  }\n\n  .sm\\:hover\\:text-pink-light:hover {\n    color: #fa7ea8;\n  }\n\n  .sm\\:hover\\:text-pink-lighter:hover {\n    color: #ffbbca;\n  }\n\n  .sm\\:hover\\:text-pink-lightest:hover {\n    color: #ffebef;\n  }\n\n  .sm\\:focus\\:text-transparent:focus {\n    color: transparent;\n  }\n\n  .sm\\:focus\\:text-black:focus {\n    color: #22292f;\n  }\n\n  .sm\\:focus\\:text-grey-darkest:focus {\n    color: #3d4852;\n  }\n\n  .sm\\:focus\\:text-grey-darker:focus {\n    color: #606f7b;\n  }\n\n  .sm\\:focus\\:text-grey-dark:focus {\n    color: #8795a1;\n  }\n\n  .sm\\:focus\\:text-grey:focus {\n    color: #b8c2cc;\n  }\n\n  .sm\\:focus\\:text-grey-light:focus {\n    color: #dae1e7;\n  }\n\n  .sm\\:focus\\:text-grey-lighter:focus {\n    color: #f1f5f8;\n  }\n\n  .sm\\:focus\\:text-grey-lightest:focus {\n    color: #f8fafc;\n  }\n\n  .sm\\:focus\\:text-white:focus {\n    color: #fff;\n  }\n\n  .sm\\:focus\\:text-red-darkest:focus {\n    color: #3b0d0c;\n  }\n\n  .sm\\:focus\\:text-red-darker:focus {\n    color: #621b18;\n  }\n\n  .sm\\:focus\\:text-red-dark:focus {\n    color: #cc1f1a;\n  }\n\n  .sm\\:focus\\:text-red:focus {\n    color: #e3342f;\n  }\n\n  .sm\\:focus\\:text-red-light:focus {\n    color: #ef5753;\n  }\n\n  .sm\\:focus\\:text-red-lighter:focus {\n    color: #f9acaa;\n  }\n\n  .sm\\:focus\\:text-red-lightest:focus {\n    color: #fcebea;\n  }\n\n  .sm\\:focus\\:text-orange-darkest:focus {\n    color: #462a16;\n  }\n\n  .sm\\:focus\\:text-orange-darker:focus {\n    color: #613b1f;\n  }\n\n  .sm\\:focus\\:text-orange-dark:focus {\n    color: #de751f;\n  }\n\n  .sm\\:focus\\:text-orange:focus {\n    color: #f6993f;\n  }\n\n  .sm\\:focus\\:text-orange-light:focus {\n    color: #faad63;\n  }\n\n  .sm\\:focus\\:text-orange-lighter:focus {\n    color: #fcd9b6;\n  }\n\n  .sm\\:focus\\:text-orange-lightest:focus {\n    color: #fff5eb;\n  }\n\n  .sm\\:focus\\:text-yellow-darkest:focus {\n    color: #453411;\n  }\n\n  .sm\\:focus\\:text-yellow-darker:focus {\n    color: #684f1d;\n  }\n\n  .sm\\:focus\\:text-yellow-dark:focus {\n    color: #f2d024;\n  }\n\n  .sm\\:focus\\:text-yellow:focus {\n    color: #ffed4a;\n  }\n\n  .sm\\:focus\\:text-yellow-light:focus {\n    color: #fff382;\n  }\n\n  .sm\\:focus\\:text-yellow-lighter:focus {\n    color: #fff9c2;\n  }\n\n  .sm\\:focus\\:text-yellow-lightest:focus {\n    color: #fcfbeb;\n  }\n\n  .sm\\:focus\\:text-green-darkest:focus {\n    color: #0f2f21;\n  }\n\n  .sm\\:focus\\:text-green-darker:focus {\n    color: #1a4731;\n  }\n\n  .sm\\:focus\\:text-green-dark:focus {\n    color: #1f9d55;\n  }\n\n  .sm\\:focus\\:text-green:focus {\n    color: #38c172;\n  }\n\n  .sm\\:focus\\:text-green-light:focus {\n    color: #51d88a;\n  }\n\n  .sm\\:focus\\:text-green-lighter:focus {\n    color: #a2f5bf;\n  }\n\n  .sm\\:focus\\:text-green-lightest:focus {\n    color: #e3fcec;\n  }\n\n  .sm\\:focus\\:text-teal-darkest:focus {\n    color: #0d3331;\n  }\n\n  .sm\\:focus\\:text-teal-darker:focus {\n    color: #20504f;\n  }\n\n  .sm\\:focus\\:text-teal-dark:focus {\n    color: #38a89d;\n  }\n\n  .sm\\:focus\\:text-teal:focus {\n    color: #4dc0b5;\n  }\n\n  .sm\\:focus\\:text-teal-light:focus {\n    color: #64d5ca;\n  }\n\n  .sm\\:focus\\:text-teal-lighter:focus {\n    color: #a0f0ed;\n  }\n\n  .sm\\:focus\\:text-teal-lightest:focus {\n    color: #e8fffe;\n  }\n\n  .sm\\:focus\\:text-blue-darkest:focus {\n    color: #12283a;\n  }\n\n  .sm\\:focus\\:text-blue-darker:focus {\n    color: #1c3d5a;\n  }\n\n  .sm\\:focus\\:text-blue-dark:focus {\n    color: #2779bd;\n  }\n\n  .sm\\:focus\\:text-blue:focus {\n    color: #3490dc;\n  }\n\n  .sm\\:focus\\:text-blue-light:focus {\n    color: #6cb2eb;\n  }\n\n  .sm\\:focus\\:text-blue-lighter:focus {\n    color: #bcdefa;\n  }\n\n  .sm\\:focus\\:text-blue-lightest:focus {\n    color: #eff8ff;\n  }\n\n  .sm\\:focus\\:text-indigo-darkest:focus {\n    color: #191e38;\n  }\n\n  .sm\\:focus\\:text-indigo-darker:focus {\n    color: #2f365f;\n  }\n\n  .sm\\:focus\\:text-indigo-dark:focus {\n    color: #5661b3;\n  }\n\n  .sm\\:focus\\:text-indigo:focus {\n    color: #6574cd;\n  }\n\n  .sm\\:focus\\:text-indigo-light:focus {\n    color: #7886d7;\n  }\n\n  .sm\\:focus\\:text-indigo-lighter:focus {\n    color: #b2b7ff;\n  }\n\n  .sm\\:focus\\:text-indigo-lightest:focus {\n    color: #e6e8ff;\n  }\n\n  .sm\\:focus\\:text-purple-darkest:focus {\n    color: #21183c;\n  }\n\n  .sm\\:focus\\:text-purple-darker:focus {\n    color: #382b5f;\n  }\n\n  .sm\\:focus\\:text-purple-dark:focus {\n    color: #794acf;\n  }\n\n  .sm\\:focus\\:text-purple:focus {\n    color: #9561e2;\n  }\n\n  .sm\\:focus\\:text-purple-light:focus {\n    color: #a779e9;\n  }\n\n  .sm\\:focus\\:text-purple-lighter:focus {\n    color: #d6bbfc;\n  }\n\n  .sm\\:focus\\:text-purple-lightest:focus {\n    color: #f3ebff;\n  }\n\n  .sm\\:focus\\:text-pink-darkest:focus {\n    color: #451225;\n  }\n\n  .sm\\:focus\\:text-pink-darker:focus {\n    color: #6f213f;\n  }\n\n  .sm\\:focus\\:text-pink-dark:focus {\n    color: #eb5286;\n  }\n\n  .sm\\:focus\\:text-pink:focus {\n    color: #f66d9b;\n  }\n\n  .sm\\:focus\\:text-pink-light:focus {\n    color: #fa7ea8;\n  }\n\n  .sm\\:focus\\:text-pink-lighter:focus {\n    color: #ffbbca;\n  }\n\n  .sm\\:focus\\:text-pink-lightest:focus {\n    color: #ffebef;\n  }\n\n  .sm\\:text-xs {\n    font-size: .75rem;\n  }\n\n  .sm\\:text-sm {\n    font-size: .875rem;\n  }\n\n  .sm\\:text-base {\n    font-size: 1rem;\n  }\n\n  .sm\\:text-lg {\n    font-size: 1.125rem;\n  }\n\n  .sm\\:text-xl {\n    font-size: 1.25rem;\n  }\n\n  .sm\\:text-2xl {\n    font-size: 1.5rem;\n  }\n\n  .sm\\:text-3xl {\n    font-size: 1.875rem;\n  }\n\n  .sm\\:text-4xl {\n    font-size: 2.25rem;\n  }\n\n  .sm\\:text-5xl {\n    font-size: 3rem;\n  }\n\n  .sm\\:italic {\n    font-style: italic;\n  }\n\n  .sm\\:roman {\n    font-style: normal;\n  }\n\n  .sm\\:uppercase {\n    text-transform: uppercase;\n  }\n\n  .sm\\:lowercase {\n    text-transform: lowercase;\n  }\n\n  .sm\\:capitalize {\n    text-transform: capitalize;\n  }\n\n  .sm\\:normal-case {\n    text-transform: none;\n  }\n\n  .sm\\:underline {\n    text-decoration: underline;\n  }\n\n  .sm\\:line-through {\n    text-decoration: line-through;\n  }\n\n  .sm\\:no-underline {\n    text-decoration: none;\n  }\n\n  .sm\\:antialiased {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .sm\\:subpixel-antialiased {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .sm\\:hover\\:italic:hover {\n    font-style: italic;\n  }\n\n  .sm\\:hover\\:roman:hover {\n    font-style: normal;\n  }\n\n  .sm\\:hover\\:uppercase:hover {\n    text-transform: uppercase;\n  }\n\n  .sm\\:hover\\:lowercase:hover {\n    text-transform: lowercase;\n  }\n\n  .sm\\:hover\\:capitalize:hover {\n    text-transform: capitalize;\n  }\n\n  .sm\\:hover\\:normal-case:hover {\n    text-transform: none;\n  }\n\n  .sm\\:hover\\:underline:hover {\n    text-decoration: underline;\n  }\n\n  .sm\\:hover\\:line-through:hover {\n    text-decoration: line-through;\n  }\n\n  .sm\\:hover\\:no-underline:hover {\n    text-decoration: none;\n  }\n\n  .sm\\:hover\\:antialiased:hover {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .sm\\:hover\\:subpixel-antialiased:hover {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .sm\\:focus\\:italic:focus {\n    font-style: italic;\n  }\n\n  .sm\\:focus\\:roman:focus {\n    font-style: normal;\n  }\n\n  .sm\\:focus\\:uppercase:focus {\n    text-transform: uppercase;\n  }\n\n  .sm\\:focus\\:lowercase:focus {\n    text-transform: lowercase;\n  }\n\n  .sm\\:focus\\:capitalize:focus {\n    text-transform: capitalize;\n  }\n\n  .sm\\:focus\\:normal-case:focus {\n    text-transform: none;\n  }\n\n  .sm\\:focus\\:underline:focus {\n    text-decoration: underline;\n  }\n\n  .sm\\:focus\\:line-through:focus {\n    text-decoration: line-through;\n  }\n\n  .sm\\:focus\\:no-underline:focus {\n    text-decoration: none;\n  }\n\n  .sm\\:focus\\:antialiased:focus {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .sm\\:focus\\:subpixel-antialiased:focus {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .sm\\:tracking-tight {\n    letter-spacing: -0.05em;\n  }\n\n  .sm\\:tracking-normal {\n    letter-spacing: 0;\n  }\n\n  .sm\\:tracking-wide {\n    letter-spacing: .05em;\n  }\n\n  .sm\\:select-none {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n  }\n\n  .sm\\:select-text {\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n  }\n\n  .sm\\:align-baseline {\n    vertical-align: baseline;\n  }\n\n  .sm\\:align-top {\n    vertical-align: top;\n  }\n\n  .sm\\:align-middle {\n    vertical-align: middle;\n  }\n\n  .sm\\:align-bottom {\n    vertical-align: bottom;\n  }\n\n  .sm\\:align-text-top {\n    vertical-align: text-top;\n  }\n\n  .sm\\:align-text-bottom {\n    vertical-align: text-bottom;\n  }\n\n  .sm\\:visible {\n    visibility: visible;\n  }\n\n  .sm\\:invisible {\n    visibility: hidden;\n  }\n\n  .sm\\:whitespace-normal {\n    white-space: normal;\n  }\n\n  .sm\\:whitespace-no-wrap {\n    white-space: nowrap;\n  }\n\n  .sm\\:whitespace-pre {\n    white-space: pre;\n  }\n\n  .sm\\:whitespace-pre-line {\n    white-space: pre-line;\n  }\n\n  .sm\\:whitespace-pre-wrap {\n    white-space: pre-wrap;\n  }\n\n  .sm\\:break-words {\n    word-wrap: break-word;\n  }\n\n  .sm\\:break-normal {\n    word-wrap: normal;\n  }\n\n  .sm\\:truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .sm\\:w-1 {\n    width: .25rem;\n  }\n\n  .sm\\:w-2 {\n    width: .5rem;\n  }\n\n  .sm\\:w-3 {\n    width: .75rem;\n  }\n\n  .sm\\:w-4 {\n    width: 1rem;\n  }\n\n  .sm\\:w-5 {\n    width: 1.25rem;\n  }\n\n  .sm\\:w-6 {\n    width: 1.5rem;\n  }\n\n  .sm\\:w-8 {\n    width: 2rem;\n  }\n\n  .sm\\:w-10 {\n    width: 2.5rem;\n  }\n\n  .sm\\:w-12 {\n    width: 3rem;\n  }\n\n  .sm\\:w-16 {\n    width: 4rem;\n  }\n\n  .sm\\:w-24 {\n    width: 6rem;\n  }\n\n  .sm\\:w-32 {\n    width: 8rem;\n  }\n\n  .sm\\:w-48 {\n    width: 12rem;\n  }\n\n  .sm\\:w-64 {\n    width: 16rem;\n  }\n\n  .sm\\:w-auto {\n    width: auto;\n  }\n\n  .sm\\:w-px {\n    width: 1px;\n  }\n\n  .sm\\:w-1\\/2 {\n    width: 50%;\n  }\n\n  .sm\\:w-1\\/3 {\n    width: 33.33333%;\n  }\n\n  .sm\\:w-2\\/3 {\n    width: 66.66667%;\n  }\n\n  .sm\\:w-1\\/4 {\n    width: 25%;\n  }\n\n  .sm\\:w-3\\/4 {\n    width: 75%;\n  }\n\n  .sm\\:w-1\\/5 {\n    width: 20%;\n  }\n\n  .sm\\:w-2\\/5 {\n    width: 40%;\n  }\n\n  .sm\\:w-3\\/5 {\n    width: 60%;\n  }\n\n  .sm\\:w-4\\/5 {\n    width: 80%;\n  }\n\n  .sm\\:w-1\\/6 {\n    width: 16.66667%;\n  }\n\n  .sm\\:w-5\\/6 {\n    width: 83.33333%;\n  }\n\n  .sm\\:w-full {\n    width: 100%;\n  }\n\n  .sm\\:w-screen {\n    width: 100vw;\n  }\n\n  .sm\\:z-0 {\n    z-index: 0;\n  }\n\n  .sm\\:z-10 {\n    z-index: 10;\n  }\n\n  .sm\\:z-20 {\n    z-index: 20;\n  }\n\n  .sm\\:z-30 {\n    z-index: 30;\n  }\n\n  .sm\\:z-40 {\n    z-index: 40;\n  }\n\n  .sm\\:z-50 {\n    z-index: 50;\n  }\n\n  .sm\\:z-auto {\n    z-index: auto;\n  }\n}\n\n@media (min-width: 768px) {\n  .md\\:list-reset {\n    list-style: none;\n    padding: 0;\n  }\n\n  .md\\:appearance-none {\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n  }\n\n  .md\\:bg-fixed {\n    background-attachment: fixed;\n  }\n\n  .md\\:bg-local {\n    background-attachment: local;\n  }\n\n  .md\\:bg-scroll {\n    background-attachment: scroll;\n  }\n\n  .md\\:bg-transparent {\n    background-color: transparent;\n  }\n\n  .md\\:bg-black {\n    background-color: #22292f;\n  }\n\n  .md\\:bg-grey-darkest {\n    background-color: #3d4852;\n  }\n\n  .md\\:bg-grey-darker {\n    background-color: #606f7b;\n  }\n\n  .md\\:bg-grey-dark {\n    background-color: #8795a1;\n  }\n\n  .md\\:bg-grey {\n    background-color: #b8c2cc;\n  }\n\n  .md\\:bg-grey-light {\n    background-color: #dae1e7;\n  }\n\n  .md\\:bg-grey-lighter {\n    background-color: #f1f5f8;\n  }\n\n  .md\\:bg-grey-lightest {\n    background-color: #f8fafc;\n  }\n\n  .md\\:bg-white {\n    background-color: #fff;\n  }\n\n  .md\\:bg-red-darkest {\n    background-color: #3b0d0c;\n  }\n\n  .md\\:bg-red-darker {\n    background-color: #621b18;\n  }\n\n  .md\\:bg-red-dark {\n    background-color: #cc1f1a;\n  }\n\n  .md\\:bg-red {\n    background-color: #e3342f;\n  }\n\n  .md\\:bg-red-light {\n    background-color: #ef5753;\n  }\n\n  .md\\:bg-red-lighter {\n    background-color: #f9acaa;\n  }\n\n  .md\\:bg-red-lightest {\n    background-color: #fcebea;\n  }\n\n  .md\\:bg-orange-darkest {\n    background-color: #462a16;\n  }\n\n  .md\\:bg-orange-darker {\n    background-color: #613b1f;\n  }\n\n  .md\\:bg-orange-dark {\n    background-color: #de751f;\n  }\n\n  .md\\:bg-orange {\n    background-color: #f6993f;\n  }\n\n  .md\\:bg-orange-light {\n    background-color: #faad63;\n  }\n\n  .md\\:bg-orange-lighter {\n    background-color: #fcd9b6;\n  }\n\n  .md\\:bg-orange-lightest {\n    background-color: #fff5eb;\n  }\n\n  .md\\:bg-yellow-darkest {\n    background-color: #453411;\n  }\n\n  .md\\:bg-yellow-darker {\n    background-color: #684f1d;\n  }\n\n  .md\\:bg-yellow-dark {\n    background-color: #f2d024;\n  }\n\n  .md\\:bg-yellow {\n    background-color: #ffed4a;\n  }\n\n  .md\\:bg-yellow-light {\n    background-color: #fff382;\n  }\n\n  .md\\:bg-yellow-lighter {\n    background-color: #fff9c2;\n  }\n\n  .md\\:bg-yellow-lightest {\n    background-color: #fcfbeb;\n  }\n\n  .md\\:bg-green-darkest {\n    background-color: #0f2f21;\n  }\n\n  .md\\:bg-green-darker {\n    background-color: #1a4731;\n  }\n\n  .md\\:bg-green-dark {\n    background-color: #1f9d55;\n  }\n\n  .md\\:bg-green {\n    background-color: #38c172;\n  }\n\n  .md\\:bg-green-light {\n    background-color: #51d88a;\n  }\n\n  .md\\:bg-green-lighter {\n    background-color: #a2f5bf;\n  }\n\n  .md\\:bg-green-lightest {\n    background-color: #e3fcec;\n  }\n\n  .md\\:bg-teal-darkest {\n    background-color: #0d3331;\n  }\n\n  .md\\:bg-teal-darker {\n    background-color: #20504f;\n  }\n\n  .md\\:bg-teal-dark {\n    background-color: #38a89d;\n  }\n\n  .md\\:bg-teal {\n    background-color: #4dc0b5;\n  }\n\n  .md\\:bg-teal-light {\n    background-color: #64d5ca;\n  }\n\n  .md\\:bg-teal-lighter {\n    background-color: #a0f0ed;\n  }\n\n  .md\\:bg-teal-lightest {\n    background-color: #e8fffe;\n  }\n\n  .md\\:bg-blue-darkest {\n    background-color: #12283a;\n  }\n\n  .md\\:bg-blue-darker {\n    background-color: #1c3d5a;\n  }\n\n  .md\\:bg-blue-dark {\n    background-color: #2779bd;\n  }\n\n  .md\\:bg-blue {\n    background-color: #3490dc;\n  }\n\n  .md\\:bg-blue-light {\n    background-color: #6cb2eb;\n  }\n\n  .md\\:bg-blue-lighter {\n    background-color: #bcdefa;\n  }\n\n  .md\\:bg-blue-lightest {\n    background-color: #eff8ff;\n  }\n\n  .md\\:bg-indigo-darkest {\n    background-color: #191e38;\n  }\n\n  .md\\:bg-indigo-darker {\n    background-color: #2f365f;\n  }\n\n  .md\\:bg-indigo-dark {\n    background-color: #5661b3;\n  }\n\n  .md\\:bg-indigo {\n    background-color: #6574cd;\n  }\n\n  .md\\:bg-indigo-light {\n    background-color: #7886d7;\n  }\n\n  .md\\:bg-indigo-lighter {\n    background-color: #b2b7ff;\n  }\n\n  .md\\:bg-indigo-lightest {\n    background-color: #e6e8ff;\n  }\n\n  .md\\:bg-purple-darkest {\n    background-color: #21183c;\n  }\n\n  .md\\:bg-purple-darker {\n    background-color: #382b5f;\n  }\n\n  .md\\:bg-purple-dark {\n    background-color: #794acf;\n  }\n\n  .md\\:bg-purple {\n    background-color: #9561e2;\n  }\n\n  .md\\:bg-purple-light {\n    background-color: #a779e9;\n  }\n\n  .md\\:bg-purple-lighter {\n    background-color: #d6bbfc;\n  }\n\n  .md\\:bg-purple-lightest {\n    background-color: #f3ebff;\n  }\n\n  .md\\:bg-pink-darkest {\n    background-color: #451225;\n  }\n\n  .md\\:bg-pink-darker {\n    background-color: #6f213f;\n  }\n\n  .md\\:bg-pink-dark {\n    background-color: #eb5286;\n  }\n\n  .md\\:bg-pink {\n    background-color: #f66d9b;\n  }\n\n  .md\\:bg-pink-light {\n    background-color: #fa7ea8;\n  }\n\n  .md\\:bg-pink-lighter {\n    background-color: #ffbbca;\n  }\n\n  .md\\:bg-pink-lightest {\n    background-color: #ffebef;\n  }\n\n  .md\\:hover\\:bg-transparent:hover {\n    background-color: transparent;\n  }\n\n  .md\\:hover\\:bg-black:hover {\n    background-color: #22292f;\n  }\n\n  .md\\:hover\\:bg-grey-darkest:hover {\n    background-color: #3d4852;\n  }\n\n  .md\\:hover\\:bg-grey-darker:hover {\n    background-color: #606f7b;\n  }\n\n  .md\\:hover\\:bg-grey-dark:hover {\n    background-color: #8795a1;\n  }\n\n  .md\\:hover\\:bg-grey:hover {\n    background-color: #b8c2cc;\n  }\n\n  .md\\:hover\\:bg-grey-light:hover {\n    background-color: #dae1e7;\n  }\n\n  .md\\:hover\\:bg-grey-lighter:hover {\n    background-color: #f1f5f8;\n  }\n\n  .md\\:hover\\:bg-grey-lightest:hover {\n    background-color: #f8fafc;\n  }\n\n  .md\\:hover\\:bg-white:hover {\n    background-color: #fff;\n  }\n\n  .md\\:hover\\:bg-red-darkest:hover {\n    background-color: #3b0d0c;\n  }\n\n  .md\\:hover\\:bg-red-darker:hover {\n    background-color: #621b18;\n  }\n\n  .md\\:hover\\:bg-red-dark:hover {\n    background-color: #cc1f1a;\n  }\n\n  .md\\:hover\\:bg-red:hover {\n    background-color: #e3342f;\n  }\n\n  .md\\:hover\\:bg-red-light:hover {\n    background-color: #ef5753;\n  }\n\n  .md\\:hover\\:bg-red-lighter:hover {\n    background-color: #f9acaa;\n  }\n\n  .md\\:hover\\:bg-red-lightest:hover {\n    background-color: #fcebea;\n  }\n\n  .md\\:hover\\:bg-orange-darkest:hover {\n    background-color: #462a16;\n  }\n\n  .md\\:hover\\:bg-orange-darker:hover {\n    background-color: #613b1f;\n  }\n\n  .md\\:hover\\:bg-orange-dark:hover {\n    background-color: #de751f;\n  }\n\n  .md\\:hover\\:bg-orange:hover {\n    background-color: #f6993f;\n  }\n\n  .md\\:hover\\:bg-orange-light:hover {\n    background-color: #faad63;\n  }\n\n  .md\\:hover\\:bg-orange-lighter:hover {\n    background-color: #fcd9b6;\n  }\n\n  .md\\:hover\\:bg-orange-lightest:hover {\n    background-color: #fff5eb;\n  }\n\n  .md\\:hover\\:bg-yellow-darkest:hover {\n    background-color: #453411;\n  }\n\n  .md\\:hover\\:bg-yellow-darker:hover {\n    background-color: #684f1d;\n  }\n\n  .md\\:hover\\:bg-yellow-dark:hover {\n    background-color: #f2d024;\n  }\n\n  .md\\:hover\\:bg-yellow:hover {\n    background-color: #ffed4a;\n  }\n\n  .md\\:hover\\:bg-yellow-light:hover {\n    background-color: #fff382;\n  }\n\n  .md\\:hover\\:bg-yellow-lighter:hover {\n    background-color: #fff9c2;\n  }\n\n  .md\\:hover\\:bg-yellow-lightest:hover {\n    background-color: #fcfbeb;\n  }\n\n  .md\\:hover\\:bg-green-darkest:hover {\n    background-color: #0f2f21;\n  }\n\n  .md\\:hover\\:bg-green-darker:hover {\n    background-color: #1a4731;\n  }\n\n  .md\\:hover\\:bg-green-dark:hover {\n    background-color: #1f9d55;\n  }\n\n  .md\\:hover\\:bg-green:hover {\n    background-color: #38c172;\n  }\n\n  .md\\:hover\\:bg-green-light:hover {\n    background-color: #51d88a;\n  }\n\n  .md\\:hover\\:bg-green-lighter:hover {\n    background-color: #a2f5bf;\n  }\n\n  .md\\:hover\\:bg-green-lightest:hover {\n    background-color: #e3fcec;\n  }\n\n  .md\\:hover\\:bg-teal-darkest:hover {\n    background-color: #0d3331;\n  }\n\n  .md\\:hover\\:bg-teal-darker:hover {\n    background-color: #20504f;\n  }\n\n  .md\\:hover\\:bg-teal-dark:hover {\n    background-color: #38a89d;\n  }\n\n  .md\\:hover\\:bg-teal:hover {\n    background-color: #4dc0b5;\n  }\n\n  .md\\:hover\\:bg-teal-light:hover {\n    background-color: #64d5ca;\n  }\n\n  .md\\:hover\\:bg-teal-lighter:hover {\n    background-color: #a0f0ed;\n  }\n\n  .md\\:hover\\:bg-teal-lightest:hover {\n    background-color: #e8fffe;\n  }\n\n  .md\\:hover\\:bg-blue-darkest:hover {\n    background-color: #12283a;\n  }\n\n  .md\\:hover\\:bg-blue-darker:hover {\n    background-color: #1c3d5a;\n  }\n\n  .md\\:hover\\:bg-blue-dark:hover {\n    background-color: #2779bd;\n  }\n\n  .md\\:hover\\:bg-blue:hover {\n    background-color: #3490dc;\n  }\n\n  .md\\:hover\\:bg-blue-light:hover {\n    background-color: #6cb2eb;\n  }\n\n  .md\\:hover\\:bg-blue-lighter:hover {\n    background-color: #bcdefa;\n  }\n\n  .md\\:hover\\:bg-blue-lightest:hover {\n    background-color: #eff8ff;\n  }\n\n  .md\\:hover\\:bg-indigo-darkest:hover {\n    background-color: #191e38;\n  }\n\n  .md\\:hover\\:bg-indigo-darker:hover {\n    background-color: #2f365f;\n  }\n\n  .md\\:hover\\:bg-indigo-dark:hover {\n    background-color: #5661b3;\n  }\n\n  .md\\:hover\\:bg-indigo:hover {\n    background-color: #6574cd;\n  }\n\n  .md\\:hover\\:bg-indigo-light:hover {\n    background-color: #7886d7;\n  }\n\n  .md\\:hover\\:bg-indigo-lighter:hover {\n    background-color: #b2b7ff;\n  }\n\n  .md\\:hover\\:bg-indigo-lightest:hover {\n    background-color: #e6e8ff;\n  }\n\n  .md\\:hover\\:bg-purple-darkest:hover {\n    background-color: #21183c;\n  }\n\n  .md\\:hover\\:bg-purple-darker:hover {\n    background-color: #382b5f;\n  }\n\n  .md\\:hover\\:bg-purple-dark:hover {\n    background-color: #794acf;\n  }\n\n  .md\\:hover\\:bg-purple:hover {\n    background-color: #9561e2;\n  }\n\n  .md\\:hover\\:bg-purple-light:hover {\n    background-color: #a779e9;\n  }\n\n  .md\\:hover\\:bg-purple-lighter:hover {\n    background-color: #d6bbfc;\n  }\n\n  .md\\:hover\\:bg-purple-lightest:hover {\n    background-color: #f3ebff;\n  }\n\n  .md\\:hover\\:bg-pink-darkest:hover {\n    background-color: #451225;\n  }\n\n  .md\\:hover\\:bg-pink-darker:hover {\n    background-color: #6f213f;\n  }\n\n  .md\\:hover\\:bg-pink-dark:hover {\n    background-color: #eb5286;\n  }\n\n  .md\\:hover\\:bg-pink:hover {\n    background-color: #f66d9b;\n  }\n\n  .md\\:hover\\:bg-pink-light:hover {\n    background-color: #fa7ea8;\n  }\n\n  .md\\:hover\\:bg-pink-lighter:hover {\n    background-color: #ffbbca;\n  }\n\n  .md\\:hover\\:bg-pink-lightest:hover {\n    background-color: #ffebef;\n  }\n\n  .md\\:focus\\:bg-transparent:focus {\n    background-color: transparent;\n  }\n\n  .md\\:focus\\:bg-black:focus {\n    background-color: #22292f;\n  }\n\n  .md\\:focus\\:bg-grey-darkest:focus {\n    background-color: #3d4852;\n  }\n\n  .md\\:focus\\:bg-grey-darker:focus {\n    background-color: #606f7b;\n  }\n\n  .md\\:focus\\:bg-grey-dark:focus {\n    background-color: #8795a1;\n  }\n\n  .md\\:focus\\:bg-grey:focus {\n    background-color: #b8c2cc;\n  }\n\n  .md\\:focus\\:bg-grey-light:focus {\n    background-color: #dae1e7;\n  }\n\n  .md\\:focus\\:bg-grey-lighter:focus {\n    background-color: #f1f5f8;\n  }\n\n  .md\\:focus\\:bg-grey-lightest:focus {\n    background-color: #f8fafc;\n  }\n\n  .md\\:focus\\:bg-white:focus {\n    background-color: #fff;\n  }\n\n  .md\\:focus\\:bg-red-darkest:focus {\n    background-color: #3b0d0c;\n  }\n\n  .md\\:focus\\:bg-red-darker:focus {\n    background-color: #621b18;\n  }\n\n  .md\\:focus\\:bg-red-dark:focus {\n    background-color: #cc1f1a;\n  }\n\n  .md\\:focus\\:bg-red:focus {\n    background-color: #e3342f;\n  }\n\n  .md\\:focus\\:bg-red-light:focus {\n    background-color: #ef5753;\n  }\n\n  .md\\:focus\\:bg-red-lighter:focus {\n    background-color: #f9acaa;\n  }\n\n  .md\\:focus\\:bg-red-lightest:focus {\n    background-color: #fcebea;\n  }\n\n  .md\\:focus\\:bg-orange-darkest:focus {\n    background-color: #462a16;\n  }\n\n  .md\\:focus\\:bg-orange-darker:focus {\n    background-color: #613b1f;\n  }\n\n  .md\\:focus\\:bg-orange-dark:focus {\n    background-color: #de751f;\n  }\n\n  .md\\:focus\\:bg-orange:focus {\n    background-color: #f6993f;\n  }\n\n  .md\\:focus\\:bg-orange-light:focus {\n    background-color: #faad63;\n  }\n\n  .md\\:focus\\:bg-orange-lighter:focus {\n    background-color: #fcd9b6;\n  }\n\n  .md\\:focus\\:bg-orange-lightest:focus {\n    background-color: #fff5eb;\n  }\n\n  .md\\:focus\\:bg-yellow-darkest:focus {\n    background-color: #453411;\n  }\n\n  .md\\:focus\\:bg-yellow-darker:focus {\n    background-color: #684f1d;\n  }\n\n  .md\\:focus\\:bg-yellow-dark:focus {\n    background-color: #f2d024;\n  }\n\n  .md\\:focus\\:bg-yellow:focus {\n    background-color: #ffed4a;\n  }\n\n  .md\\:focus\\:bg-yellow-light:focus {\n    background-color: #fff382;\n  }\n\n  .md\\:focus\\:bg-yellow-lighter:focus {\n    background-color: #fff9c2;\n  }\n\n  .md\\:focus\\:bg-yellow-lightest:focus {\n    background-color: #fcfbeb;\n  }\n\n  .md\\:focus\\:bg-green-darkest:focus {\n    background-color: #0f2f21;\n  }\n\n  .md\\:focus\\:bg-green-darker:focus {\n    background-color: #1a4731;\n  }\n\n  .md\\:focus\\:bg-green-dark:focus {\n    background-color: #1f9d55;\n  }\n\n  .md\\:focus\\:bg-green:focus {\n    background-color: #38c172;\n  }\n\n  .md\\:focus\\:bg-green-light:focus {\n    background-color: #51d88a;\n  }\n\n  .md\\:focus\\:bg-green-lighter:focus {\n    background-color: #a2f5bf;\n  }\n\n  .md\\:focus\\:bg-green-lightest:focus {\n    background-color: #e3fcec;\n  }\n\n  .md\\:focus\\:bg-teal-darkest:focus {\n    background-color: #0d3331;\n  }\n\n  .md\\:focus\\:bg-teal-darker:focus {\n    background-color: #20504f;\n  }\n\n  .md\\:focus\\:bg-teal-dark:focus {\n    background-color: #38a89d;\n  }\n\n  .md\\:focus\\:bg-teal:focus {\n    background-color: #4dc0b5;\n  }\n\n  .md\\:focus\\:bg-teal-light:focus {\n    background-color: #64d5ca;\n  }\n\n  .md\\:focus\\:bg-teal-lighter:focus {\n    background-color: #a0f0ed;\n  }\n\n  .md\\:focus\\:bg-teal-lightest:focus {\n    background-color: #e8fffe;\n  }\n\n  .md\\:focus\\:bg-blue-darkest:focus {\n    background-color: #12283a;\n  }\n\n  .md\\:focus\\:bg-blue-darker:focus {\n    background-color: #1c3d5a;\n  }\n\n  .md\\:focus\\:bg-blue-dark:focus {\n    background-color: #2779bd;\n  }\n\n  .md\\:focus\\:bg-blue:focus {\n    background-color: #3490dc;\n  }\n\n  .md\\:focus\\:bg-blue-light:focus {\n    background-color: #6cb2eb;\n  }\n\n  .md\\:focus\\:bg-blue-lighter:focus {\n    background-color: #bcdefa;\n  }\n\n  .md\\:focus\\:bg-blue-lightest:focus {\n    background-color: #eff8ff;\n  }\n\n  .md\\:focus\\:bg-indigo-darkest:focus {\n    background-color: #191e38;\n  }\n\n  .md\\:focus\\:bg-indigo-darker:focus {\n    background-color: #2f365f;\n  }\n\n  .md\\:focus\\:bg-indigo-dark:focus {\n    background-color: #5661b3;\n  }\n\n  .md\\:focus\\:bg-indigo:focus {\n    background-color: #6574cd;\n  }\n\n  .md\\:focus\\:bg-indigo-light:focus {\n    background-color: #7886d7;\n  }\n\n  .md\\:focus\\:bg-indigo-lighter:focus {\n    background-color: #b2b7ff;\n  }\n\n  .md\\:focus\\:bg-indigo-lightest:focus {\n    background-color: #e6e8ff;\n  }\n\n  .md\\:focus\\:bg-purple-darkest:focus {\n    background-color: #21183c;\n  }\n\n  .md\\:focus\\:bg-purple-darker:focus {\n    background-color: #382b5f;\n  }\n\n  .md\\:focus\\:bg-purple-dark:focus {\n    background-color: #794acf;\n  }\n\n  .md\\:focus\\:bg-purple:focus {\n    background-color: #9561e2;\n  }\n\n  .md\\:focus\\:bg-purple-light:focus {\n    background-color: #a779e9;\n  }\n\n  .md\\:focus\\:bg-purple-lighter:focus {\n    background-color: #d6bbfc;\n  }\n\n  .md\\:focus\\:bg-purple-lightest:focus {\n    background-color: #f3ebff;\n  }\n\n  .md\\:focus\\:bg-pink-darkest:focus {\n    background-color: #451225;\n  }\n\n  .md\\:focus\\:bg-pink-darker:focus {\n    background-color: #6f213f;\n  }\n\n  .md\\:focus\\:bg-pink-dark:focus {\n    background-color: #eb5286;\n  }\n\n  .md\\:focus\\:bg-pink:focus {\n    background-color: #f66d9b;\n  }\n\n  .md\\:focus\\:bg-pink-light:focus {\n    background-color: #fa7ea8;\n  }\n\n  .md\\:focus\\:bg-pink-lighter:focus {\n    background-color: #ffbbca;\n  }\n\n  .md\\:focus\\:bg-pink-lightest:focus {\n    background-color: #ffebef;\n  }\n\n  .md\\:bg-bottom {\n    background-position: bottom;\n  }\n\n  .md\\:bg-center {\n    background-position: center;\n  }\n\n  .md\\:bg-left {\n    background-position: left;\n  }\n\n  .md\\:bg-left-bottom {\n    background-position: left bottom;\n  }\n\n  .md\\:bg-left-top {\n    background-position: left top;\n  }\n\n  .md\\:bg-right {\n    background-position: right;\n  }\n\n  .md\\:bg-right-bottom {\n    background-position: right bottom;\n  }\n\n  .md\\:bg-right-top {\n    background-position: right top;\n  }\n\n  .md\\:bg-top {\n    background-position: top;\n  }\n\n  .md\\:bg-repeat {\n    background-repeat: repeat;\n  }\n\n  .md\\:bg-no-repeat {\n    background-repeat: no-repeat;\n  }\n\n  .md\\:bg-repeat-x {\n    background-repeat: repeat-x;\n  }\n\n  .md\\:bg-repeat-y {\n    background-repeat: repeat-y;\n  }\n\n  .md\\:bg-auto {\n    background-size: auto;\n  }\n\n  .md\\:bg-cover {\n    background-size: cover;\n  }\n\n  .md\\:bg-contain {\n    background-size: contain;\n  }\n\n  .md\\:border-transparent {\n    border-color: transparent;\n  }\n\n  .md\\:border-black {\n    border-color: #22292f;\n  }\n\n  .md\\:border-grey-darkest {\n    border-color: #3d4852;\n  }\n\n  .md\\:border-grey-darker {\n    border-color: #606f7b;\n  }\n\n  .md\\:border-grey-dark {\n    border-color: #8795a1;\n  }\n\n  .md\\:border-grey {\n    border-color: #b8c2cc;\n  }\n\n  .md\\:border-grey-light {\n    border-color: #dae1e7;\n  }\n\n  .md\\:border-grey-lighter {\n    border-color: #f1f5f8;\n  }\n\n  .md\\:border-grey-lightest {\n    border-color: #f8fafc;\n  }\n\n  .md\\:border-white {\n    border-color: #fff;\n  }\n\n  .md\\:border-red-darkest {\n    border-color: #3b0d0c;\n  }\n\n  .md\\:border-red-darker {\n    border-color: #621b18;\n  }\n\n  .md\\:border-red-dark {\n    border-color: #cc1f1a;\n  }\n\n  .md\\:border-red {\n    border-color: #e3342f;\n  }\n\n  .md\\:border-red-light {\n    border-color: #ef5753;\n  }\n\n  .md\\:border-red-lighter {\n    border-color: #f9acaa;\n  }\n\n  .md\\:border-red-lightest {\n    border-color: #fcebea;\n  }\n\n  .md\\:border-orange-darkest {\n    border-color: #462a16;\n  }\n\n  .md\\:border-orange-darker {\n    border-color: #613b1f;\n  }\n\n  .md\\:border-orange-dark {\n    border-color: #de751f;\n  }\n\n  .md\\:border-orange {\n    border-color: #f6993f;\n  }\n\n  .md\\:border-orange-light {\n    border-color: #faad63;\n  }\n\n  .md\\:border-orange-lighter {\n    border-color: #fcd9b6;\n  }\n\n  .md\\:border-orange-lightest {\n    border-color: #fff5eb;\n  }\n\n  .md\\:border-yellow-darkest {\n    border-color: #453411;\n  }\n\n  .md\\:border-yellow-darker {\n    border-color: #684f1d;\n  }\n\n  .md\\:border-yellow-dark {\n    border-color: #f2d024;\n  }\n\n  .md\\:border-yellow {\n    border-color: #ffed4a;\n  }\n\n  .md\\:border-yellow-light {\n    border-color: #fff382;\n  }\n\n  .md\\:border-yellow-lighter {\n    border-color: #fff9c2;\n  }\n\n  .md\\:border-yellow-lightest {\n    border-color: #fcfbeb;\n  }\n\n  .md\\:border-green-darkest {\n    border-color: #0f2f21;\n  }\n\n  .md\\:border-green-darker {\n    border-color: #1a4731;\n  }\n\n  .md\\:border-green-dark {\n    border-color: #1f9d55;\n  }\n\n  .md\\:border-green {\n    border-color: #38c172;\n  }\n\n  .md\\:border-green-light {\n    border-color: #51d88a;\n  }\n\n  .md\\:border-green-lighter {\n    border-color: #a2f5bf;\n  }\n\n  .md\\:border-green-lightest {\n    border-color: #e3fcec;\n  }\n\n  .md\\:border-teal-darkest {\n    border-color: #0d3331;\n  }\n\n  .md\\:border-teal-darker {\n    border-color: #20504f;\n  }\n\n  .md\\:border-teal-dark {\n    border-color: #38a89d;\n  }\n\n  .md\\:border-teal {\n    border-color: #4dc0b5;\n  }\n\n  .md\\:border-teal-light {\n    border-color: #64d5ca;\n  }\n\n  .md\\:border-teal-lighter {\n    border-color: #a0f0ed;\n  }\n\n  .md\\:border-teal-lightest {\n    border-color: #e8fffe;\n  }\n\n  .md\\:border-blue-darkest {\n    border-color: #12283a;\n  }\n\n  .md\\:border-blue-darker {\n    border-color: #1c3d5a;\n  }\n\n  .md\\:border-blue-dark {\n    border-color: #2779bd;\n  }\n\n  .md\\:border-blue {\n    border-color: #3490dc;\n  }\n\n  .md\\:border-blue-light {\n    border-color: #6cb2eb;\n  }\n\n  .md\\:border-blue-lighter {\n    border-color: #bcdefa;\n  }\n\n  .md\\:border-blue-lightest {\n    border-color: #eff8ff;\n  }\n\n  .md\\:border-indigo-darkest {\n    border-color: #191e38;\n  }\n\n  .md\\:border-indigo-darker {\n    border-color: #2f365f;\n  }\n\n  .md\\:border-indigo-dark {\n    border-color: #5661b3;\n  }\n\n  .md\\:border-indigo {\n    border-color: #6574cd;\n  }\n\n  .md\\:border-indigo-light {\n    border-color: #7886d7;\n  }\n\n  .md\\:border-indigo-lighter {\n    border-color: #b2b7ff;\n  }\n\n  .md\\:border-indigo-lightest {\n    border-color: #e6e8ff;\n  }\n\n  .md\\:border-purple-darkest {\n    border-color: #21183c;\n  }\n\n  .md\\:border-purple-darker {\n    border-color: #382b5f;\n  }\n\n  .md\\:border-purple-dark {\n    border-color: #794acf;\n  }\n\n  .md\\:border-purple {\n    border-color: #9561e2;\n  }\n\n  .md\\:border-purple-light {\n    border-color: #a779e9;\n  }\n\n  .md\\:border-purple-lighter {\n    border-color: #d6bbfc;\n  }\n\n  .md\\:border-purple-lightest {\n    border-color: #f3ebff;\n  }\n\n  .md\\:border-pink-darkest {\n    border-color: #451225;\n  }\n\n  .md\\:border-pink-darker {\n    border-color: #6f213f;\n  }\n\n  .md\\:border-pink-dark {\n    border-color: #eb5286;\n  }\n\n  .md\\:border-pink {\n    border-color: #f66d9b;\n  }\n\n  .md\\:border-pink-light {\n    border-color: #fa7ea8;\n  }\n\n  .md\\:border-pink-lighter {\n    border-color: #ffbbca;\n  }\n\n  .md\\:border-pink-lightest {\n    border-color: #ffebef;\n  }\n\n  .md\\:hover\\:border-transparent:hover {\n    border-color: transparent;\n  }\n\n  .md\\:hover\\:border-black:hover {\n    border-color: #22292f;\n  }\n\n  .md\\:hover\\:border-grey-darkest:hover {\n    border-color: #3d4852;\n  }\n\n  .md\\:hover\\:border-grey-darker:hover {\n    border-color: #606f7b;\n  }\n\n  .md\\:hover\\:border-grey-dark:hover {\n    border-color: #8795a1;\n  }\n\n  .md\\:hover\\:border-grey:hover {\n    border-color: #b8c2cc;\n  }\n\n  .md\\:hover\\:border-grey-light:hover {\n    border-color: #dae1e7;\n  }\n\n  .md\\:hover\\:border-grey-lighter:hover {\n    border-color: #f1f5f8;\n  }\n\n  .md\\:hover\\:border-grey-lightest:hover {\n    border-color: #f8fafc;\n  }\n\n  .md\\:hover\\:border-white:hover {\n    border-color: #fff;\n  }\n\n  .md\\:hover\\:border-red-darkest:hover {\n    border-color: #3b0d0c;\n  }\n\n  .md\\:hover\\:border-red-darker:hover {\n    border-color: #621b18;\n  }\n\n  .md\\:hover\\:border-red-dark:hover {\n    border-color: #cc1f1a;\n  }\n\n  .md\\:hover\\:border-red:hover {\n    border-color: #e3342f;\n  }\n\n  .md\\:hover\\:border-red-light:hover {\n    border-color: #ef5753;\n  }\n\n  .md\\:hover\\:border-red-lighter:hover {\n    border-color: #f9acaa;\n  }\n\n  .md\\:hover\\:border-red-lightest:hover {\n    border-color: #fcebea;\n  }\n\n  .md\\:hover\\:border-orange-darkest:hover {\n    border-color: #462a16;\n  }\n\n  .md\\:hover\\:border-orange-darker:hover {\n    border-color: #613b1f;\n  }\n\n  .md\\:hover\\:border-orange-dark:hover {\n    border-color: #de751f;\n  }\n\n  .md\\:hover\\:border-orange:hover {\n    border-color: #f6993f;\n  }\n\n  .md\\:hover\\:border-orange-light:hover {\n    border-color: #faad63;\n  }\n\n  .md\\:hover\\:border-orange-lighter:hover {\n    border-color: #fcd9b6;\n  }\n\n  .md\\:hover\\:border-orange-lightest:hover {\n    border-color: #fff5eb;\n  }\n\n  .md\\:hover\\:border-yellow-darkest:hover {\n    border-color: #453411;\n  }\n\n  .md\\:hover\\:border-yellow-darker:hover {\n    border-color: #684f1d;\n  }\n\n  .md\\:hover\\:border-yellow-dark:hover {\n    border-color: #f2d024;\n  }\n\n  .md\\:hover\\:border-yellow:hover {\n    border-color: #ffed4a;\n  }\n\n  .md\\:hover\\:border-yellow-light:hover {\n    border-color: #fff382;\n  }\n\n  .md\\:hover\\:border-yellow-lighter:hover {\n    border-color: #fff9c2;\n  }\n\n  .md\\:hover\\:border-yellow-lightest:hover {\n    border-color: #fcfbeb;\n  }\n\n  .md\\:hover\\:border-green-darkest:hover {\n    border-color: #0f2f21;\n  }\n\n  .md\\:hover\\:border-green-darker:hover {\n    border-color: #1a4731;\n  }\n\n  .md\\:hover\\:border-green-dark:hover {\n    border-color: #1f9d55;\n  }\n\n  .md\\:hover\\:border-green:hover {\n    border-color: #38c172;\n  }\n\n  .md\\:hover\\:border-green-light:hover {\n    border-color: #51d88a;\n  }\n\n  .md\\:hover\\:border-green-lighter:hover {\n    border-color: #a2f5bf;\n  }\n\n  .md\\:hover\\:border-green-lightest:hover {\n    border-color: #e3fcec;\n  }\n\n  .md\\:hover\\:border-teal-darkest:hover {\n    border-color: #0d3331;\n  }\n\n  .md\\:hover\\:border-teal-darker:hover {\n    border-color: #20504f;\n  }\n\n  .md\\:hover\\:border-teal-dark:hover {\n    border-color: #38a89d;\n  }\n\n  .md\\:hover\\:border-teal:hover {\n    border-color: #4dc0b5;\n  }\n\n  .md\\:hover\\:border-teal-light:hover {\n    border-color: #64d5ca;\n  }\n\n  .md\\:hover\\:border-teal-lighter:hover {\n    border-color: #a0f0ed;\n  }\n\n  .md\\:hover\\:border-teal-lightest:hover {\n    border-color: #e8fffe;\n  }\n\n  .md\\:hover\\:border-blue-darkest:hover {\n    border-color: #12283a;\n  }\n\n  .md\\:hover\\:border-blue-darker:hover {\n    border-color: #1c3d5a;\n  }\n\n  .md\\:hover\\:border-blue-dark:hover {\n    border-color: #2779bd;\n  }\n\n  .md\\:hover\\:border-blue:hover {\n    border-color: #3490dc;\n  }\n\n  .md\\:hover\\:border-blue-light:hover {\n    border-color: #6cb2eb;\n  }\n\n  .md\\:hover\\:border-blue-lighter:hover {\n    border-color: #bcdefa;\n  }\n\n  .md\\:hover\\:border-blue-lightest:hover {\n    border-color: #eff8ff;\n  }\n\n  .md\\:hover\\:border-indigo-darkest:hover {\n    border-color: #191e38;\n  }\n\n  .md\\:hover\\:border-indigo-darker:hover {\n    border-color: #2f365f;\n  }\n\n  .md\\:hover\\:border-indigo-dark:hover {\n    border-color: #5661b3;\n  }\n\n  .md\\:hover\\:border-indigo:hover {\n    border-color: #6574cd;\n  }\n\n  .md\\:hover\\:border-indigo-light:hover {\n    border-color: #7886d7;\n  }\n\n  .md\\:hover\\:border-indigo-lighter:hover {\n    border-color: #b2b7ff;\n  }\n\n  .md\\:hover\\:border-indigo-lightest:hover {\n    border-color: #e6e8ff;\n  }\n\n  .md\\:hover\\:border-purple-darkest:hover {\n    border-color: #21183c;\n  }\n\n  .md\\:hover\\:border-purple-darker:hover {\n    border-color: #382b5f;\n  }\n\n  .md\\:hover\\:border-purple-dark:hover {\n    border-color: #794acf;\n  }\n\n  .md\\:hover\\:border-purple:hover {\n    border-color: #9561e2;\n  }\n\n  .md\\:hover\\:border-purple-light:hover {\n    border-color: #a779e9;\n  }\n\n  .md\\:hover\\:border-purple-lighter:hover {\n    border-color: #d6bbfc;\n  }\n\n  .md\\:hover\\:border-purple-lightest:hover {\n    border-color: #f3ebff;\n  }\n\n  .md\\:hover\\:border-pink-darkest:hover {\n    border-color: #451225;\n  }\n\n  .md\\:hover\\:border-pink-darker:hover {\n    border-color: #6f213f;\n  }\n\n  .md\\:hover\\:border-pink-dark:hover {\n    border-color: #eb5286;\n  }\n\n  .md\\:hover\\:border-pink:hover {\n    border-color: #f66d9b;\n  }\n\n  .md\\:hover\\:border-pink-light:hover {\n    border-color: #fa7ea8;\n  }\n\n  .md\\:hover\\:border-pink-lighter:hover {\n    border-color: #ffbbca;\n  }\n\n  .md\\:hover\\:border-pink-lightest:hover {\n    border-color: #ffebef;\n  }\n\n  .md\\:focus\\:border-transparent:focus {\n    border-color: transparent;\n  }\n\n  .md\\:focus\\:border-black:focus {\n    border-color: #22292f;\n  }\n\n  .md\\:focus\\:border-grey-darkest:focus {\n    border-color: #3d4852;\n  }\n\n  .md\\:focus\\:border-grey-darker:focus {\n    border-color: #606f7b;\n  }\n\n  .md\\:focus\\:border-grey-dark:focus {\n    border-color: #8795a1;\n  }\n\n  .md\\:focus\\:border-grey:focus {\n    border-color: #b8c2cc;\n  }\n\n  .md\\:focus\\:border-grey-light:focus {\n    border-color: #dae1e7;\n  }\n\n  .md\\:focus\\:border-grey-lighter:focus {\n    border-color: #f1f5f8;\n  }\n\n  .md\\:focus\\:border-grey-lightest:focus {\n    border-color: #f8fafc;\n  }\n\n  .md\\:focus\\:border-white:focus {\n    border-color: #fff;\n  }\n\n  .md\\:focus\\:border-red-darkest:focus {\n    border-color: #3b0d0c;\n  }\n\n  .md\\:focus\\:border-red-darker:focus {\n    border-color: #621b18;\n  }\n\n  .md\\:focus\\:border-red-dark:focus {\n    border-color: #cc1f1a;\n  }\n\n  .md\\:focus\\:border-red:focus {\n    border-color: #e3342f;\n  }\n\n  .md\\:focus\\:border-red-light:focus {\n    border-color: #ef5753;\n  }\n\n  .md\\:focus\\:border-red-lighter:focus {\n    border-color: #f9acaa;\n  }\n\n  .md\\:focus\\:border-red-lightest:focus {\n    border-color: #fcebea;\n  }\n\n  .md\\:focus\\:border-orange-darkest:focus {\n    border-color: #462a16;\n  }\n\n  .md\\:focus\\:border-orange-darker:focus {\n    border-color: #613b1f;\n  }\n\n  .md\\:focus\\:border-orange-dark:focus {\n    border-color: #de751f;\n  }\n\n  .md\\:focus\\:border-orange:focus {\n    border-color: #f6993f;\n  }\n\n  .md\\:focus\\:border-orange-light:focus {\n    border-color: #faad63;\n  }\n\n  .md\\:focus\\:border-orange-lighter:focus {\n    border-color: #fcd9b6;\n  }\n\n  .md\\:focus\\:border-orange-lightest:focus {\n    border-color: #fff5eb;\n  }\n\n  .md\\:focus\\:border-yellow-darkest:focus {\n    border-color: #453411;\n  }\n\n  .md\\:focus\\:border-yellow-darker:focus {\n    border-color: #684f1d;\n  }\n\n  .md\\:focus\\:border-yellow-dark:focus {\n    border-color: #f2d024;\n  }\n\n  .md\\:focus\\:border-yellow:focus {\n    border-color: #ffed4a;\n  }\n\n  .md\\:focus\\:border-yellow-light:focus {\n    border-color: #fff382;\n  }\n\n  .md\\:focus\\:border-yellow-lighter:focus {\n    border-color: #fff9c2;\n  }\n\n  .md\\:focus\\:border-yellow-lightest:focus {\n    border-color: #fcfbeb;\n  }\n\n  .md\\:focus\\:border-green-darkest:focus {\n    border-color: #0f2f21;\n  }\n\n  .md\\:focus\\:border-green-darker:focus {\n    border-color: #1a4731;\n  }\n\n  .md\\:focus\\:border-green-dark:focus {\n    border-color: #1f9d55;\n  }\n\n  .md\\:focus\\:border-green:focus {\n    border-color: #38c172;\n  }\n\n  .md\\:focus\\:border-green-light:focus {\n    border-color: #51d88a;\n  }\n\n  .md\\:focus\\:border-green-lighter:focus {\n    border-color: #a2f5bf;\n  }\n\n  .md\\:focus\\:border-green-lightest:focus {\n    border-color: #e3fcec;\n  }\n\n  .md\\:focus\\:border-teal-darkest:focus {\n    border-color: #0d3331;\n  }\n\n  .md\\:focus\\:border-teal-darker:focus {\n    border-color: #20504f;\n  }\n\n  .md\\:focus\\:border-teal-dark:focus {\n    border-color: #38a89d;\n  }\n\n  .md\\:focus\\:border-teal:focus {\n    border-color: #4dc0b5;\n  }\n\n  .md\\:focus\\:border-teal-light:focus {\n    border-color: #64d5ca;\n  }\n\n  .md\\:focus\\:border-teal-lighter:focus {\n    border-color: #a0f0ed;\n  }\n\n  .md\\:focus\\:border-teal-lightest:focus {\n    border-color: #e8fffe;\n  }\n\n  .md\\:focus\\:border-blue-darkest:focus {\n    border-color: #12283a;\n  }\n\n  .md\\:focus\\:border-blue-darker:focus {\n    border-color: #1c3d5a;\n  }\n\n  .md\\:focus\\:border-blue-dark:focus {\n    border-color: #2779bd;\n  }\n\n  .md\\:focus\\:border-blue:focus {\n    border-color: #3490dc;\n  }\n\n  .md\\:focus\\:border-blue-light:focus {\n    border-color: #6cb2eb;\n  }\n\n  .md\\:focus\\:border-blue-lighter:focus {\n    border-color: #bcdefa;\n  }\n\n  .md\\:focus\\:border-blue-lightest:focus {\n    border-color: #eff8ff;\n  }\n\n  .md\\:focus\\:border-indigo-darkest:focus {\n    border-color: #191e38;\n  }\n\n  .md\\:focus\\:border-indigo-darker:focus {\n    border-color: #2f365f;\n  }\n\n  .md\\:focus\\:border-indigo-dark:focus {\n    border-color: #5661b3;\n  }\n\n  .md\\:focus\\:border-indigo:focus {\n    border-color: #6574cd;\n  }\n\n  .md\\:focus\\:border-indigo-light:focus {\n    border-color: #7886d7;\n  }\n\n  .md\\:focus\\:border-indigo-lighter:focus {\n    border-color: #b2b7ff;\n  }\n\n  .md\\:focus\\:border-indigo-lightest:focus {\n    border-color: #e6e8ff;\n  }\n\n  .md\\:focus\\:border-purple-darkest:focus {\n    border-color: #21183c;\n  }\n\n  .md\\:focus\\:border-purple-darker:focus {\n    border-color: #382b5f;\n  }\n\n  .md\\:focus\\:border-purple-dark:focus {\n    border-color: #794acf;\n  }\n\n  .md\\:focus\\:border-purple:focus {\n    border-color: #9561e2;\n  }\n\n  .md\\:focus\\:border-purple-light:focus {\n    border-color: #a779e9;\n  }\n\n  .md\\:focus\\:border-purple-lighter:focus {\n    border-color: #d6bbfc;\n  }\n\n  .md\\:focus\\:border-purple-lightest:focus {\n    border-color: #f3ebff;\n  }\n\n  .md\\:focus\\:border-pink-darkest:focus {\n    border-color: #451225;\n  }\n\n  .md\\:focus\\:border-pink-darker:focus {\n    border-color: #6f213f;\n  }\n\n  .md\\:focus\\:border-pink-dark:focus {\n    border-color: #eb5286;\n  }\n\n  .md\\:focus\\:border-pink:focus {\n    border-color: #f66d9b;\n  }\n\n  .md\\:focus\\:border-pink-light:focus {\n    border-color: #fa7ea8;\n  }\n\n  .md\\:focus\\:border-pink-lighter:focus {\n    border-color: #ffbbca;\n  }\n\n  .md\\:focus\\:border-pink-lightest:focus {\n    border-color: #ffebef;\n  }\n\n  .md\\:rounded-none {\n    border-radius: 0;\n  }\n\n  .md\\:rounded-sm {\n    border-radius: .125rem;\n  }\n\n  .md\\:rounded {\n    border-radius: .25rem;\n  }\n\n  .md\\:rounded-lg {\n    border-radius: .5rem;\n  }\n\n  .md\\:rounded-full {\n    border-radius: 9999px;\n  }\n\n  .md\\:rounded-t-none {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  .md\\:rounded-r-none {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  .md\\:rounded-b-none {\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .md\\:rounded-l-none {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .md\\:rounded-t-sm {\n    border-top-left-radius: .125rem;\n    border-top-right-radius: .125rem;\n  }\n\n  .md\\:rounded-r-sm {\n    border-top-right-radius: .125rem;\n    border-bottom-right-radius: .125rem;\n  }\n\n  .md\\:rounded-b-sm {\n    border-bottom-right-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .md\\:rounded-l-sm {\n    border-top-left-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .md\\:rounded-t {\n    border-top-left-radius: .25rem;\n    border-top-right-radius: .25rem;\n  }\n\n  .md\\:rounded-r {\n    border-top-right-radius: .25rem;\n    border-bottom-right-radius: .25rem;\n  }\n\n  .md\\:rounded-b {\n    border-bottom-right-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .md\\:rounded-l {\n    border-top-left-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .md\\:rounded-t-lg {\n    border-top-left-radius: .5rem;\n    border-top-right-radius: .5rem;\n  }\n\n  .md\\:rounded-r-lg {\n    border-top-right-radius: .5rem;\n    border-bottom-right-radius: .5rem;\n  }\n\n  .md\\:rounded-b-lg {\n    border-bottom-right-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .md\\:rounded-l-lg {\n    border-top-left-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .md\\:rounded-t-full {\n    border-top-left-radius: 9999px;\n    border-top-right-radius: 9999px;\n  }\n\n  .md\\:rounded-r-full {\n    border-top-right-radius: 9999px;\n    border-bottom-right-radius: 9999px;\n  }\n\n  .md\\:rounded-b-full {\n    border-bottom-right-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .md\\:rounded-l-full {\n    border-top-left-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .md\\:rounded-tl-none {\n    border-top-left-radius: 0;\n  }\n\n  .md\\:rounded-tr-none {\n    border-top-right-radius: 0;\n  }\n\n  .md\\:rounded-br-none {\n    border-bottom-right-radius: 0;\n  }\n\n  .md\\:rounded-bl-none {\n    border-bottom-left-radius: 0;\n  }\n\n  .md\\:rounded-tl-sm {\n    border-top-left-radius: .125rem;\n  }\n\n  .md\\:rounded-tr-sm {\n    border-top-right-radius: .125rem;\n  }\n\n  .md\\:rounded-br-sm {\n    border-bottom-right-radius: .125rem;\n  }\n\n  .md\\:rounded-bl-sm {\n    border-bottom-left-radius: .125rem;\n  }\n\n  .md\\:rounded-tl {\n    border-top-left-radius: .25rem;\n  }\n\n  .md\\:rounded-tr {\n    border-top-right-radius: .25rem;\n  }\n\n  .md\\:rounded-br {\n    border-bottom-right-radius: .25rem;\n  }\n\n  .md\\:rounded-bl {\n    border-bottom-left-radius: .25rem;\n  }\n\n  .md\\:rounded-tl-lg {\n    border-top-left-radius: .5rem;\n  }\n\n  .md\\:rounded-tr-lg {\n    border-top-right-radius: .5rem;\n  }\n\n  .md\\:rounded-br-lg {\n    border-bottom-right-radius: .5rem;\n  }\n\n  .md\\:rounded-bl-lg {\n    border-bottom-left-radius: .5rem;\n  }\n\n  .md\\:rounded-tl-full {\n    border-top-left-radius: 9999px;\n  }\n\n  .md\\:rounded-tr-full {\n    border-top-right-radius: 9999px;\n  }\n\n  .md\\:rounded-br-full {\n    border-bottom-right-radius: 9999px;\n  }\n\n  .md\\:rounded-bl-full {\n    border-bottom-left-radius: 9999px;\n  }\n\n  .md\\:border-solid {\n    border-style: solid;\n  }\n\n  .md\\:border-dashed {\n    border-style: dashed;\n  }\n\n  .md\\:border-dotted {\n    border-style: dotted;\n  }\n\n  .md\\:border-none {\n    border-style: none;\n  }\n\n  .md\\:border-0 {\n    border-width: 0;\n  }\n\n  .md\\:border-2 {\n    border-width: 2px;\n  }\n\n  .md\\:border-4 {\n    border-width: 4px;\n  }\n\n  .md\\:border-8 {\n    border-width: 8px;\n  }\n\n  .md\\:border {\n    border-width: 1px;\n  }\n\n  .md\\:border-t-0 {\n    border-top-width: 0;\n  }\n\n  .md\\:border-r-0 {\n    border-right-width: 0;\n  }\n\n  .md\\:border-b-0 {\n    border-bottom-width: 0;\n  }\n\n  .md\\:border-l-0 {\n    border-left-width: 0;\n  }\n\n  .md\\:border-t-2 {\n    border-top-width: 2px;\n  }\n\n  .md\\:border-r-2 {\n    border-right-width: 2px;\n  }\n\n  .md\\:border-b-2 {\n    border-bottom-width: 2px;\n  }\n\n  .md\\:border-l-2 {\n    border-left-width: 2px;\n  }\n\n  .md\\:border-t-4 {\n    border-top-width: 4px;\n  }\n\n  .md\\:border-r-4 {\n    border-right-width: 4px;\n  }\n\n  .md\\:border-b-4 {\n    border-bottom-width: 4px;\n  }\n\n  .md\\:border-l-4 {\n    border-left-width: 4px;\n  }\n\n  .md\\:border-t-8 {\n    border-top-width: 8px;\n  }\n\n  .md\\:border-r-8 {\n    border-right-width: 8px;\n  }\n\n  .md\\:border-b-8 {\n    border-bottom-width: 8px;\n  }\n\n  .md\\:border-l-8 {\n    border-left-width: 8px;\n  }\n\n  .md\\:border-t {\n    border-top-width: 1px;\n  }\n\n  .md\\:border-r {\n    border-right-width: 1px;\n  }\n\n  .md\\:border-b {\n    border-bottom-width: 1px;\n  }\n\n  .md\\:border-l {\n    border-left-width: 1px;\n  }\n\n  .md\\:cursor-auto {\n    cursor: auto;\n  }\n\n  .md\\:cursor-default {\n    cursor: default;\n  }\n\n  .md\\:cursor-pointer {\n    cursor: pointer;\n  }\n\n  .md\\:cursor-wait {\n    cursor: wait;\n  }\n\n  .md\\:cursor-move {\n    cursor: move;\n  }\n\n  .md\\:cursor-not-allowed {\n    cursor: not-allowed;\n  }\n\n  .md\\:block {\n    display: block;\n  }\n\n  .md\\:inline-block {\n    display: inline-block;\n  }\n\n  .md\\:inline {\n    display: inline;\n  }\n\n  .md\\:table {\n    display: table;\n  }\n\n  .md\\:table-row {\n    display: table-row;\n  }\n\n  .md\\:table-cell {\n    display: table-cell;\n  }\n\n  .md\\:hidden {\n    display: none;\n  }\n\n  .md\\:flex {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\n\n  .md\\:inline-flex {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  }\n\n  .md\\:flex-row {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n  }\n\n  .md\\:flex-row-reverse {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: row-reverse;\n            flex-direction: row-reverse;\n  }\n\n  .md\\:flex-col {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n  }\n\n  .md\\:flex-col-reverse {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: column-reverse;\n            flex-direction: column-reverse;\n  }\n\n  .md\\:flex-wrap {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n  }\n\n  .md\\:flex-wrap-reverse {\n    -ms-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n  }\n\n  .md\\:flex-no-wrap {\n    -ms-flex-wrap: nowrap;\n        flex-wrap: nowrap;\n  }\n\n  .md\\:items-start {\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n  }\n\n  .md\\:items-end {\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n  }\n\n  .md\\:items-center {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n  }\n\n  .md\\:items-baseline {\n    -webkit-box-align: baseline;\n        -ms-flex-align: baseline;\n            align-items: baseline;\n  }\n\n  .md\\:items-stretch {\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch;\n  }\n\n  .md\\:self-auto {\n    -ms-flex-item-align: auto;\n        align-self: auto;\n  }\n\n  .md\\:self-start {\n    -ms-flex-item-align: start;\n        align-self: flex-start;\n  }\n\n  .md\\:self-end {\n    -ms-flex-item-align: end;\n        align-self: flex-end;\n  }\n\n  .md\\:self-center {\n    -ms-flex-item-align: center;\n        align-self: center;\n  }\n\n  .md\\:self-stretch {\n    -ms-flex-item-align: stretch;\n        align-self: stretch;\n  }\n\n  .md\\:justify-start {\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start;\n  }\n\n  .md\\:justify-end {\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end;\n  }\n\n  .md\\:justify-center {\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n  }\n\n  .md\\:justify-between {\n    -webkit-box-pack: justify;\n        -ms-flex-pack: justify;\n            justify-content: space-between;\n  }\n\n  .md\\:justify-around {\n    -ms-flex-pack: distribute;\n        justify-content: space-around;\n  }\n\n  .md\\:content-center {\n    -ms-flex-line-pack: center;\n        align-content: center;\n  }\n\n  .md\\:content-start {\n    -ms-flex-line-pack: start;\n        align-content: flex-start;\n  }\n\n  .md\\:content-end {\n    -ms-flex-line-pack: end;\n        align-content: flex-end;\n  }\n\n  .md\\:content-between {\n    -ms-flex-line-pack: justify;\n        align-content: space-between;\n  }\n\n  .md\\:content-around {\n    -ms-flex-line-pack: distribute;\n        align-content: space-around;\n  }\n\n  .md\\:flex-1 {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n  }\n\n  .md\\:flex-auto {\n    -webkit-box-flex: 1;\n        -ms-flex: auto;\n            flex: auto;\n  }\n\n  .md\\:flex-initial {\n    -webkit-box-flex: initial;\n        -ms-flex: initial;\n            flex: initial;\n  }\n\n  .md\\:flex-none {\n    -webkit-box-flex: 0;\n        -ms-flex: none;\n            flex: none;\n  }\n\n  .md\\:flex-grow {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1;\n  }\n\n  .md\\:flex-shrink {\n    -ms-flex-negative: 1;\n        flex-shrink: 1;\n  }\n\n  .md\\:flex-no-grow {\n    -webkit-box-flex: 0;\n        -ms-flex-positive: 0;\n            flex-grow: 0;\n  }\n\n  .md\\:flex-no-shrink {\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n  }\n\n  .md\\:float-right {\n    float: right;\n  }\n\n  .md\\:float-left {\n    float: left;\n  }\n\n  .md\\:float-none {\n    float: none;\n  }\n\n  .md\\:clearfix:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  .md\\:font-sans {\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue, -apple-system, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n  }\n\n  .md\\:font-serif {\n    font-family: Constantia, Lucida Bright, Lucidabright, Lucida Serif, Lucida, DejaVu Serif, Bitstream Vera Serif, Liberation Serif, Georgia, serif;\n  }\n\n  .md\\:font-mono {\n    font-family: Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;\n  }\n\n  .md\\:font-hairline {\n    font-weight: 100;\n  }\n\n  .md\\:font-thin {\n    font-weight: 200;\n  }\n\n  .md\\:font-light {\n    font-weight: 300;\n  }\n\n  .md\\:font-normal {\n    font-weight: 400;\n  }\n\n  .md\\:font-medium {\n    font-weight: 500;\n  }\n\n  .md\\:font-semibold {\n    font-weight: 600;\n  }\n\n  .md\\:font-bold {\n    font-weight: 700;\n  }\n\n  .md\\:font-extrabold {\n    font-weight: 800;\n  }\n\n  .md\\:font-black {\n    font-weight: 900;\n  }\n\n  .md\\:hover\\:font-hairline:hover {\n    font-weight: 100;\n  }\n\n  .md\\:hover\\:font-thin:hover {\n    font-weight: 200;\n  }\n\n  .md\\:hover\\:font-light:hover {\n    font-weight: 300;\n  }\n\n  .md\\:hover\\:font-normal:hover {\n    font-weight: 400;\n  }\n\n  .md\\:hover\\:font-medium:hover {\n    font-weight: 500;\n  }\n\n  .md\\:hover\\:font-semibold:hover {\n    font-weight: 600;\n  }\n\n  .md\\:hover\\:font-bold:hover {\n    font-weight: 700;\n  }\n\n  .md\\:hover\\:font-extrabold:hover {\n    font-weight: 800;\n  }\n\n  .md\\:hover\\:font-black:hover {\n    font-weight: 900;\n  }\n\n  .md\\:focus\\:font-hairline:focus {\n    font-weight: 100;\n  }\n\n  .md\\:focus\\:font-thin:focus {\n    font-weight: 200;\n  }\n\n  .md\\:focus\\:font-light:focus {\n    font-weight: 300;\n  }\n\n  .md\\:focus\\:font-normal:focus {\n    font-weight: 400;\n  }\n\n  .md\\:focus\\:font-medium:focus {\n    font-weight: 500;\n  }\n\n  .md\\:focus\\:font-semibold:focus {\n    font-weight: 600;\n  }\n\n  .md\\:focus\\:font-bold:focus {\n    font-weight: 700;\n  }\n\n  .md\\:focus\\:font-extrabold:focus {\n    font-weight: 800;\n  }\n\n  .md\\:focus\\:font-black:focus {\n    font-weight: 900;\n  }\n\n  .md\\:h-1 {\n    height: .25rem;\n  }\n\n  .md\\:h-2 {\n    height: .5rem;\n  }\n\n  .md\\:h-3 {\n    height: .75rem;\n  }\n\n  .md\\:h-4 {\n    height: 1rem;\n  }\n\n  .md\\:h-5 {\n    height: 1.25rem;\n  }\n\n  .md\\:h-6 {\n    height: 1.5rem;\n  }\n\n  .md\\:h-8 {\n    height: 2rem;\n  }\n\n  .md\\:h-10 {\n    height: 2.5rem;\n  }\n\n  .md\\:h-12 {\n    height: 3rem;\n  }\n\n  .md\\:h-16 {\n    height: 4rem;\n  }\n\n  .md\\:h-24 {\n    height: 6rem;\n  }\n\n  .md\\:h-32 {\n    height: 8rem;\n  }\n\n  .md\\:h-48 {\n    height: 12rem;\n  }\n\n  .md\\:h-64 {\n    height: 16rem;\n  }\n\n  .md\\:h-auto {\n    height: auto;\n  }\n\n  .md\\:h-px {\n    height: 1px;\n  }\n\n  .md\\:h-full {\n    height: 100%;\n  }\n\n  .md\\:h-screen {\n    height: 100vh;\n  }\n\n  .md\\:leading-none {\n    line-height: 1;\n  }\n\n  .md\\:leading-tight {\n    line-height: 1.25;\n  }\n\n  .md\\:leading-normal {\n    line-height: 1.5;\n  }\n\n  .md\\:leading-loose {\n    line-height: 2;\n  }\n\n  .md\\:m-0 {\n    margin: 0;\n  }\n\n  .md\\:m-1 {\n    margin: .25rem;\n  }\n\n  .md\\:m-2 {\n    margin: .5rem;\n  }\n\n  .md\\:m-3 {\n    margin: .75rem;\n  }\n\n  .md\\:m-4 {\n    margin: 1rem;\n  }\n\n  .md\\:m-5 {\n    margin: 1.25rem;\n  }\n\n  .md\\:m-6 {\n    margin: 1.5rem;\n  }\n\n  .md\\:m-8 {\n    margin: 2rem;\n  }\n\n  .md\\:m-10 {\n    margin: 2.5rem;\n  }\n\n  .md\\:m-12 {\n    margin: 3rem;\n  }\n\n  .md\\:m-16 {\n    margin: 4rem;\n  }\n\n  .md\\:m-20 {\n    margin: 5rem;\n  }\n\n  .md\\:m-24 {\n    margin: 6rem;\n  }\n\n  .md\\:m-32 {\n    margin: 8rem;\n  }\n\n  .md\\:m-auto {\n    margin: auto;\n  }\n\n  .md\\:m-px {\n    margin: 1px;\n  }\n\n  .md\\:my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .md\\:mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .md\\:my-1 {\n    margin-top: .25rem;\n    margin-bottom: .25rem;\n  }\n\n  .md\\:mx-1 {\n    margin-left: .25rem;\n    margin-right: .25rem;\n  }\n\n  .md\\:my-2 {\n    margin-top: .5rem;\n    margin-bottom: .5rem;\n  }\n\n  .md\\:mx-2 {\n    margin-left: .5rem;\n    margin-right: .5rem;\n  }\n\n  .md\\:my-3 {\n    margin-top: .75rem;\n    margin-bottom: .75rem;\n  }\n\n  .md\\:mx-3 {\n    margin-left: .75rem;\n    margin-right: .75rem;\n  }\n\n  .md\\:my-4 {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  .md\\:mx-4 {\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n\n  .md\\:my-5 {\n    margin-top: 1.25rem;\n    margin-bottom: 1.25rem;\n  }\n\n  .md\\:mx-5 {\n    margin-left: 1.25rem;\n    margin-right: 1.25rem;\n  }\n\n  .md\\:my-6 {\n    margin-top: 1.5rem;\n    margin-bottom: 1.5rem;\n  }\n\n  .md\\:mx-6 {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  .md\\:my-8 {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  .md\\:mx-8 {\n    margin-left: 2rem;\n    margin-right: 2rem;\n  }\n\n  .md\\:my-10 {\n    margin-top: 2.5rem;\n    margin-bottom: 2.5rem;\n  }\n\n  .md\\:mx-10 {\n    margin-left: 2.5rem;\n    margin-right: 2.5rem;\n  }\n\n  .md\\:my-12 {\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n  }\n\n  .md\\:mx-12 {\n    margin-left: 3rem;\n    margin-right: 3rem;\n  }\n\n  .md\\:my-16 {\n    margin-top: 4rem;\n    margin-bottom: 4rem;\n  }\n\n  .md\\:mx-16 {\n    margin-left: 4rem;\n    margin-right: 4rem;\n  }\n\n  .md\\:my-20 {\n    margin-top: 5rem;\n    margin-bottom: 5rem;\n  }\n\n  .md\\:mx-20 {\n    margin-left: 5rem;\n    margin-right: 5rem;\n  }\n\n  .md\\:my-24 {\n    margin-top: 6rem;\n    margin-bottom: 6rem;\n  }\n\n  .md\\:mx-24 {\n    margin-left: 6rem;\n    margin-right: 6rem;\n  }\n\n  .md\\:my-32 {\n    margin-top: 8rem;\n    margin-bottom: 8rem;\n  }\n\n  .md\\:mx-32 {\n    margin-left: 8rem;\n    margin-right: 8rem;\n  }\n\n  .md\\:my-auto {\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n\n  .md\\:mx-auto {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .md\\:my-px {\n    margin-top: 1px;\n    margin-bottom: 1px;\n  }\n\n  .md\\:mx-px {\n    margin-left: 1px;\n    margin-right: 1px;\n  }\n\n  .md\\:mt-0 {\n    margin-top: 0;\n  }\n\n  .md\\:mr-0 {\n    margin-right: 0;\n  }\n\n  .md\\:mb-0 {\n    margin-bottom: 0;\n  }\n\n  .md\\:ml-0 {\n    margin-left: 0;\n  }\n\n  .md\\:mt-1 {\n    margin-top: .25rem;\n  }\n\n  .md\\:mr-1 {\n    margin-right: .25rem;\n  }\n\n  .md\\:mb-1 {\n    margin-bottom: .25rem;\n  }\n\n  .md\\:ml-1 {\n    margin-left: .25rem;\n  }\n\n  .md\\:mt-2 {\n    margin-top: .5rem;\n  }\n\n  .md\\:mr-2 {\n    margin-right: .5rem;\n  }\n\n  .md\\:mb-2 {\n    margin-bottom: .5rem;\n  }\n\n  .md\\:ml-2 {\n    margin-left: .5rem;\n  }\n\n  .md\\:mt-3 {\n    margin-top: .75rem;\n  }\n\n  .md\\:mr-3 {\n    margin-right: .75rem;\n  }\n\n  .md\\:mb-3 {\n    margin-bottom: .75rem;\n  }\n\n  .md\\:ml-3 {\n    margin-left: .75rem;\n  }\n\n  .md\\:mt-4 {\n    margin-top: 1rem;\n  }\n\n  .md\\:mr-4 {\n    margin-right: 1rem;\n  }\n\n  .md\\:mb-4 {\n    margin-bottom: 1rem;\n  }\n\n  .md\\:ml-4 {\n    margin-left: 1rem;\n  }\n\n  .md\\:mt-5 {\n    margin-top: 1.25rem;\n  }\n\n  .md\\:mr-5 {\n    margin-right: 1.25rem;\n  }\n\n  .md\\:mb-5 {\n    margin-bottom: 1.25rem;\n  }\n\n  .md\\:ml-5 {\n    margin-left: 1.25rem;\n  }\n\n  .md\\:mt-6 {\n    margin-top: 1.5rem;\n  }\n\n  .md\\:mr-6 {\n    margin-right: 1.5rem;\n  }\n\n  .md\\:mb-6 {\n    margin-bottom: 1.5rem;\n  }\n\n  .md\\:ml-6 {\n    margin-left: 1.5rem;\n  }\n\n  .md\\:mt-8 {\n    margin-top: 2rem;\n  }\n\n  .md\\:mr-8 {\n    margin-right: 2rem;\n  }\n\n  .md\\:mb-8 {\n    margin-bottom: 2rem;\n  }\n\n  .md\\:ml-8 {\n    margin-left: 2rem;\n  }\n\n  .md\\:mt-10 {\n    margin-top: 2.5rem;\n  }\n\n  .md\\:mr-10 {\n    margin-right: 2.5rem;\n  }\n\n  .md\\:mb-10 {\n    margin-bottom: 2.5rem;\n  }\n\n  .md\\:ml-10 {\n    margin-left: 2.5rem;\n  }\n\n  .md\\:mt-12 {\n    margin-top: 3rem;\n  }\n\n  .md\\:mr-12 {\n    margin-right: 3rem;\n  }\n\n  .md\\:mb-12 {\n    margin-bottom: 3rem;\n  }\n\n  .md\\:ml-12 {\n    margin-left: 3rem;\n  }\n\n  .md\\:mt-16 {\n    margin-top: 4rem;\n  }\n\n  .md\\:mr-16 {\n    margin-right: 4rem;\n  }\n\n  .md\\:mb-16 {\n    margin-bottom: 4rem;\n  }\n\n  .md\\:ml-16 {\n    margin-left: 4rem;\n  }\n\n  .md\\:mt-20 {\n    margin-top: 5rem;\n  }\n\n  .md\\:mr-20 {\n    margin-right: 5rem;\n  }\n\n  .md\\:mb-20 {\n    margin-bottom: 5rem;\n  }\n\n  .md\\:ml-20 {\n    margin-left: 5rem;\n  }\n\n  .md\\:mt-24 {\n    margin-top: 6rem;\n  }\n\n  .md\\:mr-24 {\n    margin-right: 6rem;\n  }\n\n  .md\\:mb-24 {\n    margin-bottom: 6rem;\n  }\n\n  .md\\:ml-24 {\n    margin-left: 6rem;\n  }\n\n  .md\\:mt-32 {\n    margin-top: 8rem;\n  }\n\n  .md\\:mr-32 {\n    margin-right: 8rem;\n  }\n\n  .md\\:mb-32 {\n    margin-bottom: 8rem;\n  }\n\n  .md\\:ml-32 {\n    margin-left: 8rem;\n  }\n\n  .md\\:mt-auto {\n    margin-top: auto;\n  }\n\n  .md\\:mr-auto {\n    margin-right: auto;\n  }\n\n  .md\\:mb-auto {\n    margin-bottom: auto;\n  }\n\n  .md\\:ml-auto {\n    margin-left: auto;\n  }\n\n  .md\\:mt-px {\n    margin-top: 1px;\n  }\n\n  .md\\:mr-px {\n    margin-right: 1px;\n  }\n\n  .md\\:mb-px {\n    margin-bottom: 1px;\n  }\n\n  .md\\:ml-px {\n    margin-left: 1px;\n  }\n\n  .md\\:max-h-full {\n    max-height: 100%;\n  }\n\n  .md\\:max-h-screen {\n    max-height: 100vh;\n  }\n\n  .md\\:max-w-xs {\n    max-width: 20rem;\n  }\n\n  .md\\:max-w-sm {\n    max-width: 30rem;\n  }\n\n  .md\\:max-w-md {\n    max-width: 40rem;\n  }\n\n  .md\\:max-w-lg {\n    max-width: 50rem;\n  }\n\n  .md\\:max-w-xl {\n    max-width: 60rem;\n  }\n\n  .md\\:max-w-2xl {\n    max-width: 70rem;\n  }\n\n  .md\\:max-w-3xl {\n    max-width: 80rem;\n  }\n\n  .md\\:max-w-4xl {\n    max-width: 90rem;\n  }\n\n  .md\\:max-w-5xl {\n    max-width: 100rem;\n  }\n\n  .md\\:max-w-full {\n    max-width: 100%;\n  }\n\n  .md\\:min-h-0 {\n    min-height: 0;\n  }\n\n  .md\\:min-h-full {\n    min-height: 100%;\n  }\n\n  .md\\:min-h-screen {\n    min-height: 100vh;\n  }\n\n  .md\\:min-w-0 {\n    min-width: 0;\n  }\n\n  .md\\:min-w-full {\n    min-width: 100%;\n  }\n\n  .md\\:-m-0 {\n    margin: 0;\n  }\n\n  .md\\:-m-1 {\n    margin: -0.25rem;\n  }\n\n  .md\\:-m-2 {\n    margin: -0.5rem;\n  }\n\n  .md\\:-m-3 {\n    margin: -0.75rem;\n  }\n\n  .md\\:-m-4 {\n    margin: -1rem;\n  }\n\n  .md\\:-m-5 {\n    margin: -1.25rem;\n  }\n\n  .md\\:-m-6 {\n    margin: -1.5rem;\n  }\n\n  .md\\:-m-8 {\n    margin: -2rem;\n  }\n\n  .md\\:-m-10 {\n    margin: -2.5rem;\n  }\n\n  .md\\:-m-12 {\n    margin: -3rem;\n  }\n\n  .md\\:-m-16 {\n    margin: -4rem;\n  }\n\n  .md\\:-m-20 {\n    margin: -5rem;\n  }\n\n  .md\\:-m-24 {\n    margin: -6rem;\n  }\n\n  .md\\:-m-32 {\n    margin: -8rem;\n  }\n\n  .md\\:-m-px {\n    margin: -1px;\n  }\n\n  .md\\:-my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .md\\:-mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .md\\:-my-1 {\n    margin-top: -0.25rem;\n    margin-bottom: -0.25rem;\n  }\n\n  .md\\:-mx-1 {\n    margin-left: -0.25rem;\n    margin-right: -0.25rem;\n  }\n\n  .md\\:-my-2 {\n    margin-top: -0.5rem;\n    margin-bottom: -0.5rem;\n  }\n\n  .md\\:-mx-2 {\n    margin-left: -0.5rem;\n    margin-right: -0.5rem;\n  }\n\n  .md\\:-my-3 {\n    margin-top: -0.75rem;\n    margin-bottom: -0.75rem;\n  }\n\n  .md\\:-mx-3 {\n    margin-left: -0.75rem;\n    margin-right: -0.75rem;\n  }\n\n  .md\\:-my-4 {\n    margin-top: -1rem;\n    margin-bottom: -1rem;\n  }\n\n  .md\\:-mx-4 {\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n\n  .md\\:-my-5 {\n    margin-top: -1.25rem;\n    margin-bottom: -1.25rem;\n  }\n\n  .md\\:-mx-5 {\n    margin-left: -1.25rem;\n    margin-right: -1.25rem;\n  }\n\n  .md\\:-my-6 {\n    margin-top: -1.5rem;\n    margin-bottom: -1.5rem;\n  }\n\n  .md\\:-mx-6 {\n    margin-left: -1.5rem;\n    margin-right: -1.5rem;\n  }\n\n  .md\\:-my-8 {\n    margin-top: -2rem;\n    margin-bottom: -2rem;\n  }\n\n  .md\\:-mx-8 {\n    margin-left: -2rem;\n    margin-right: -2rem;\n  }\n\n  .md\\:-my-10 {\n    margin-top: -2.5rem;\n    margin-bottom: -2.5rem;\n  }\n\n  .md\\:-mx-10 {\n    margin-left: -2.5rem;\n    margin-right: -2.5rem;\n  }\n\n  .md\\:-my-12 {\n    margin-top: -3rem;\n    margin-bottom: -3rem;\n  }\n\n  .md\\:-mx-12 {\n    margin-left: -3rem;\n    margin-right: -3rem;\n  }\n\n  .md\\:-my-16 {\n    margin-top: -4rem;\n    margin-bottom: -4rem;\n  }\n\n  .md\\:-mx-16 {\n    margin-left: -4rem;\n    margin-right: -4rem;\n  }\n\n  .md\\:-my-20 {\n    margin-top: -5rem;\n    margin-bottom: -5rem;\n  }\n\n  .md\\:-mx-20 {\n    margin-left: -5rem;\n    margin-right: -5rem;\n  }\n\n  .md\\:-my-24 {\n    margin-top: -6rem;\n    margin-bottom: -6rem;\n  }\n\n  .md\\:-mx-24 {\n    margin-left: -6rem;\n    margin-right: -6rem;\n  }\n\n  .md\\:-my-32 {\n    margin-top: -8rem;\n    margin-bottom: -8rem;\n  }\n\n  .md\\:-mx-32 {\n    margin-left: -8rem;\n    margin-right: -8rem;\n  }\n\n  .md\\:-my-px {\n    margin-top: -1px;\n    margin-bottom: -1px;\n  }\n\n  .md\\:-mx-px {\n    margin-left: -1px;\n    margin-right: -1px;\n  }\n\n  .md\\:-mt-0 {\n    margin-top: 0;\n  }\n\n  .md\\:-mr-0 {\n    margin-right: 0;\n  }\n\n  .md\\:-mb-0 {\n    margin-bottom: 0;\n  }\n\n  .md\\:-ml-0 {\n    margin-left: 0;\n  }\n\n  .md\\:-mt-1 {\n    margin-top: -0.25rem;\n  }\n\n  .md\\:-mr-1 {\n    margin-right: -0.25rem;\n  }\n\n  .md\\:-mb-1 {\n    margin-bottom: -0.25rem;\n  }\n\n  .md\\:-ml-1 {\n    margin-left: -0.25rem;\n  }\n\n  .md\\:-mt-2 {\n    margin-top: -0.5rem;\n  }\n\n  .md\\:-mr-2 {\n    margin-right: -0.5rem;\n  }\n\n  .md\\:-mb-2 {\n    margin-bottom: -0.5rem;\n  }\n\n  .md\\:-ml-2 {\n    margin-left: -0.5rem;\n  }\n\n  .md\\:-mt-3 {\n    margin-top: -0.75rem;\n  }\n\n  .md\\:-mr-3 {\n    margin-right: -0.75rem;\n  }\n\n  .md\\:-mb-3 {\n    margin-bottom: -0.75rem;\n  }\n\n  .md\\:-ml-3 {\n    margin-left: -0.75rem;\n  }\n\n  .md\\:-mt-4 {\n    margin-top: -1rem;\n  }\n\n  .md\\:-mr-4 {\n    margin-right: -1rem;\n  }\n\n  .md\\:-mb-4 {\n    margin-bottom: -1rem;\n  }\n\n  .md\\:-ml-4 {\n    margin-left: -1rem;\n  }\n\n  .md\\:-mt-5 {\n    margin-top: -1.25rem;\n  }\n\n  .md\\:-mr-5 {\n    margin-right: -1.25rem;\n  }\n\n  .md\\:-mb-5 {\n    margin-bottom: -1.25rem;\n  }\n\n  .md\\:-ml-5 {\n    margin-left: -1.25rem;\n  }\n\n  .md\\:-mt-6 {\n    margin-top: -1.5rem;\n  }\n\n  .md\\:-mr-6 {\n    margin-right: -1.5rem;\n  }\n\n  .md\\:-mb-6 {\n    margin-bottom: -1.5rem;\n  }\n\n  .md\\:-ml-6 {\n    margin-left: -1.5rem;\n  }\n\n  .md\\:-mt-8 {\n    margin-top: -2rem;\n  }\n\n  .md\\:-mr-8 {\n    margin-right: -2rem;\n  }\n\n  .md\\:-mb-8 {\n    margin-bottom: -2rem;\n  }\n\n  .md\\:-ml-8 {\n    margin-left: -2rem;\n  }\n\n  .md\\:-mt-10 {\n    margin-top: -2.5rem;\n  }\n\n  .md\\:-mr-10 {\n    margin-right: -2.5rem;\n  }\n\n  .md\\:-mb-10 {\n    margin-bottom: -2.5rem;\n  }\n\n  .md\\:-ml-10 {\n    margin-left: -2.5rem;\n  }\n\n  .md\\:-mt-12 {\n    margin-top: -3rem;\n  }\n\n  .md\\:-mr-12 {\n    margin-right: -3rem;\n  }\n\n  .md\\:-mb-12 {\n    margin-bottom: -3rem;\n  }\n\n  .md\\:-ml-12 {\n    margin-left: -3rem;\n  }\n\n  .md\\:-mt-16 {\n    margin-top: -4rem;\n  }\n\n  .md\\:-mr-16 {\n    margin-right: -4rem;\n  }\n\n  .md\\:-mb-16 {\n    margin-bottom: -4rem;\n  }\n\n  .md\\:-ml-16 {\n    margin-left: -4rem;\n  }\n\n  .md\\:-mt-20 {\n    margin-top: -5rem;\n  }\n\n  .md\\:-mr-20 {\n    margin-right: -5rem;\n  }\n\n  .md\\:-mb-20 {\n    margin-bottom: -5rem;\n  }\n\n  .md\\:-ml-20 {\n    margin-left: -5rem;\n  }\n\n  .md\\:-mt-24 {\n    margin-top: -6rem;\n  }\n\n  .md\\:-mr-24 {\n    margin-right: -6rem;\n  }\n\n  .md\\:-mb-24 {\n    margin-bottom: -6rem;\n  }\n\n  .md\\:-ml-24 {\n    margin-left: -6rem;\n  }\n\n  .md\\:-mt-32 {\n    margin-top: -8rem;\n  }\n\n  .md\\:-mr-32 {\n    margin-right: -8rem;\n  }\n\n  .md\\:-mb-32 {\n    margin-bottom: -8rem;\n  }\n\n  .md\\:-ml-32 {\n    margin-left: -8rem;\n  }\n\n  .md\\:-mt-px {\n    margin-top: -1px;\n  }\n\n  .md\\:-mr-px {\n    margin-right: -1px;\n  }\n\n  .md\\:-mb-px {\n    margin-bottom: -1px;\n  }\n\n  .md\\:-ml-px {\n    margin-left: -1px;\n  }\n\n  .md\\:opacity-0 {\n    opacity: 0;\n  }\n\n  .md\\:opacity-25 {\n    opacity: .25;\n  }\n\n  .md\\:opacity-50 {\n    opacity: .5;\n  }\n\n  .md\\:opacity-75 {\n    opacity: .75;\n  }\n\n  .md\\:opacity-100 {\n    opacity: 1;\n  }\n\n  .md\\:overflow-auto {\n    overflow: auto;\n  }\n\n  .md\\:overflow-hidden {\n    overflow: hidden;\n  }\n\n  .md\\:overflow-visible {\n    overflow: visible;\n  }\n\n  .md\\:overflow-scroll {\n    overflow: scroll;\n  }\n\n  .md\\:overflow-x-auto {\n    overflow-x: auto;\n  }\n\n  .md\\:overflow-y-auto {\n    overflow-y: auto;\n  }\n\n  .md\\:overflow-x-hidden {\n    overflow-x: hidden;\n  }\n\n  .md\\:overflow-y-hidden {\n    overflow-y: hidden;\n  }\n\n  .md\\:overflow-x-visible {\n    overflow-x: visible;\n  }\n\n  .md\\:overflow-y-visible {\n    overflow-y: visible;\n  }\n\n  .md\\:overflow-x-scroll {\n    overflow-x: scroll;\n  }\n\n  .md\\:overflow-y-scroll {\n    overflow-y: scroll;\n  }\n\n  .md\\:scrolling-touch {\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .md\\:scrolling-auto {\n    -webkit-overflow-scrolling: auto;\n  }\n\n  .md\\:p-0 {\n    padding: 0;\n  }\n\n  .md\\:p-1 {\n    padding: .25rem;\n  }\n\n  .md\\:p-2 {\n    padding: .5rem;\n  }\n\n  .md\\:p-3 {\n    padding: .75rem;\n  }\n\n  .md\\:p-4 {\n    padding: 1rem;\n  }\n\n  .md\\:p-5 {\n    padding: 1.25rem;\n  }\n\n  .md\\:p-6 {\n    padding: 1.5rem;\n  }\n\n  .md\\:p-8 {\n    padding: 2rem;\n  }\n\n  .md\\:p-10 {\n    padding: 2.5rem;\n  }\n\n  .md\\:p-12 {\n    padding: 3rem;\n  }\n\n  .md\\:p-16 {\n    padding: 4rem;\n  }\n\n  .md\\:p-20 {\n    padding: 5rem;\n  }\n\n  .md\\:p-24 {\n    padding: 6rem;\n  }\n\n  .md\\:p-32 {\n    padding: 8rem;\n  }\n\n  .md\\:p-px {\n    padding: 1px;\n  }\n\n  .md\\:py-0 {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n\n  .md\\:px-0 {\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  .md\\:py-1 {\n    padding-top: .25rem;\n    padding-bottom: .25rem;\n  }\n\n  .md\\:px-1 {\n    padding-left: .25rem;\n    padding-right: .25rem;\n  }\n\n  .md\\:py-2 {\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n  }\n\n  .md\\:px-2 {\n    padding-left: .5rem;\n    padding-right: .5rem;\n  }\n\n  .md\\:py-3 {\n    padding-top: .75rem;\n    padding-bottom: .75rem;\n  }\n\n  .md\\:px-3 {\n    padding-left: .75rem;\n    padding-right: .75rem;\n  }\n\n  .md\\:py-4 {\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n\n  .md\\:px-4 {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  .md\\:py-5 {\n    padding-top: 1.25rem;\n    padding-bottom: 1.25rem;\n  }\n\n  .md\\:px-5 {\n    padding-left: 1.25rem;\n    padding-right: 1.25rem;\n  }\n\n  .md\\:py-6 {\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n  }\n\n  .md\\:px-6 {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n\n  .md\\:py-8 {\n    padding-top: 2rem;\n    padding-bottom: 2rem;\n  }\n\n  .md\\:px-8 {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  .md\\:py-10 {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n\n  .md\\:px-10 {\n    padding-left: 2.5rem;\n    padding-right: 2.5rem;\n  }\n\n  .md\\:py-12 {\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n  }\n\n  .md\\:px-12 {\n    padding-left: 3rem;\n    padding-right: 3rem;\n  }\n\n  .md\\:py-16 {\n    padding-top: 4rem;\n    padding-bottom: 4rem;\n  }\n\n  .md\\:px-16 {\n    padding-left: 4rem;\n    padding-right: 4rem;\n  }\n\n  .md\\:py-20 {\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n  }\n\n  .md\\:px-20 {\n    padding-left: 5rem;\n    padding-right: 5rem;\n  }\n\n  .md\\:py-24 {\n    padding-top: 6rem;\n    padding-bottom: 6rem;\n  }\n\n  .md\\:px-24 {\n    padding-left: 6rem;\n    padding-right: 6rem;\n  }\n\n  .md\\:py-32 {\n    padding-top: 8rem;\n    padding-bottom: 8rem;\n  }\n\n  .md\\:px-32 {\n    padding-left: 8rem;\n    padding-right: 8rem;\n  }\n\n  .md\\:py-px {\n    padding-top: 1px;\n    padding-bottom: 1px;\n  }\n\n  .md\\:px-px {\n    padding-left: 1px;\n    padding-right: 1px;\n  }\n\n  .md\\:pt-0 {\n    padding-top: 0;\n  }\n\n  .md\\:pr-0 {\n    padding-right: 0;\n  }\n\n  .md\\:pb-0 {\n    padding-bottom: 0;\n  }\n\n  .md\\:pl-0 {\n    padding-left: 0;\n  }\n\n  .md\\:pt-1 {\n    padding-top: .25rem;\n  }\n\n  .md\\:pr-1 {\n    padding-right: .25rem;\n  }\n\n  .md\\:pb-1 {\n    padding-bottom: .25rem;\n  }\n\n  .md\\:pl-1 {\n    padding-left: .25rem;\n  }\n\n  .md\\:pt-2 {\n    padding-top: .5rem;\n  }\n\n  .md\\:pr-2 {\n    padding-right: .5rem;\n  }\n\n  .md\\:pb-2 {\n    padding-bottom: .5rem;\n  }\n\n  .md\\:pl-2 {\n    padding-left: .5rem;\n  }\n\n  .md\\:pt-3 {\n    padding-top: .75rem;\n  }\n\n  .md\\:pr-3 {\n    padding-right: .75rem;\n  }\n\n  .md\\:pb-3 {\n    padding-bottom: .75rem;\n  }\n\n  .md\\:pl-3 {\n    padding-left: .75rem;\n  }\n\n  .md\\:pt-4 {\n    padding-top: 1rem;\n  }\n\n  .md\\:pr-4 {\n    padding-right: 1rem;\n  }\n\n  .md\\:pb-4 {\n    padding-bottom: 1rem;\n  }\n\n  .md\\:pl-4 {\n    padding-left: 1rem;\n  }\n\n  .md\\:pt-5 {\n    padding-top: 1.25rem;\n  }\n\n  .md\\:pr-5 {\n    padding-right: 1.25rem;\n  }\n\n  .md\\:pb-5 {\n    padding-bottom: 1.25rem;\n  }\n\n  .md\\:pl-5 {\n    padding-left: 1.25rem;\n  }\n\n  .md\\:pt-6 {\n    padding-top: 1.5rem;\n  }\n\n  .md\\:pr-6 {\n    padding-right: 1.5rem;\n  }\n\n  .md\\:pb-6 {\n    padding-bottom: 1.5rem;\n  }\n\n  .md\\:pl-6 {\n    padding-left: 1.5rem;\n  }\n\n  .md\\:pt-8 {\n    padding-top: 2rem;\n  }\n\n  .md\\:pr-8 {\n    padding-right: 2rem;\n  }\n\n  .md\\:pb-8 {\n    padding-bottom: 2rem;\n  }\n\n  .md\\:pl-8 {\n    padding-left: 2rem;\n  }\n\n  .md\\:pt-10 {\n    padding-top: 2.5rem;\n  }\n\n  .md\\:pr-10 {\n    padding-right: 2.5rem;\n  }\n\n  .md\\:pb-10 {\n    padding-bottom: 2.5rem;\n  }\n\n  .md\\:pl-10 {\n    padding-left: 2.5rem;\n  }\n\n  .md\\:pt-12 {\n    padding-top: 3rem;\n  }\n\n  .md\\:pr-12 {\n    padding-right: 3rem;\n  }\n\n  .md\\:pb-12 {\n    padding-bottom: 3rem;\n  }\n\n  .md\\:pl-12 {\n    padding-left: 3rem;\n  }\n\n  .md\\:pt-16 {\n    padding-top: 4rem;\n  }\n\n  .md\\:pr-16 {\n    padding-right: 4rem;\n  }\n\n  .md\\:pb-16 {\n    padding-bottom: 4rem;\n  }\n\n  .md\\:pl-16 {\n    padding-left: 4rem;\n  }\n\n  .md\\:pt-20 {\n    padding-top: 5rem;\n  }\n\n  .md\\:pr-20 {\n    padding-right: 5rem;\n  }\n\n  .md\\:pb-20 {\n    padding-bottom: 5rem;\n  }\n\n  .md\\:pl-20 {\n    padding-left: 5rem;\n  }\n\n  .md\\:pt-24 {\n    padding-top: 6rem;\n  }\n\n  .md\\:pr-24 {\n    padding-right: 6rem;\n  }\n\n  .md\\:pb-24 {\n    padding-bottom: 6rem;\n  }\n\n  .md\\:pl-24 {\n    padding-left: 6rem;\n  }\n\n  .md\\:pt-32 {\n    padding-top: 8rem;\n  }\n\n  .md\\:pr-32 {\n    padding-right: 8rem;\n  }\n\n  .md\\:pb-32 {\n    padding-bottom: 8rem;\n  }\n\n  .md\\:pl-32 {\n    padding-left: 8rem;\n  }\n\n  .md\\:pt-px {\n    padding-top: 1px;\n  }\n\n  .md\\:pr-px {\n    padding-right: 1px;\n  }\n\n  .md\\:pb-px {\n    padding-bottom: 1px;\n  }\n\n  .md\\:pl-px {\n    padding-left: 1px;\n  }\n\n  .md\\:pointer-events-none {\n    pointer-events: none;\n  }\n\n  .md\\:pointer-events-auto {\n    pointer-events: auto;\n  }\n\n  .md\\:static {\n    position: static;\n  }\n\n  .md\\:fixed {\n    position: fixed;\n  }\n\n  .md\\:absolute {\n    position: absolute;\n  }\n\n  .md\\:relative {\n    position: relative;\n  }\n\n  .md\\:sticky {\n    position: -webkit-sticky;\n    position: sticky;\n  }\n\n  .md\\:pin-none {\n    top: auto;\n    right: auto;\n    bottom: auto;\n    left: auto;\n  }\n\n  .md\\:pin {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  .md\\:pin-y {\n    top: 0;\n    bottom: 0;\n  }\n\n  .md\\:pin-x {\n    right: 0;\n    left: 0;\n  }\n\n  .md\\:pin-t {\n    top: 0;\n  }\n\n  .md\\:pin-r {\n    right: 0;\n  }\n\n  .md\\:pin-b {\n    bottom: 0;\n  }\n\n  .md\\:pin-l {\n    left: 0;\n  }\n\n  .md\\:resize-none {\n    resize: none;\n  }\n\n  .md\\:resize-y {\n    resize: vertical;\n  }\n\n  .md\\:resize-x {\n    resize: horizontal;\n  }\n\n  .md\\:resize {\n    resize: both;\n  }\n\n  .md\\:shadow {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .md\\:shadow-md {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .md\\:shadow-lg {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .md\\:shadow-inner {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .md\\:shadow-outline {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .md\\:shadow-none {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .md\\:hover\\:shadow:hover {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .md\\:hover\\:shadow-md:hover {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .md\\:hover\\:shadow-lg:hover {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .md\\:hover\\:shadow-inner:hover {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .md\\:hover\\:shadow-outline:hover {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .md\\:hover\\:shadow-none:hover {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .md\\:focus\\:shadow:focus {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .md\\:focus\\:shadow-md:focus {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .md\\:focus\\:shadow-lg:focus {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .md\\:focus\\:shadow-inner:focus {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .md\\:focus\\:shadow-outline:focus {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .md\\:focus\\:shadow-none:focus {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .md\\:table-auto {\n    table-layout: auto;\n  }\n\n  .md\\:table-fixed {\n    table-layout: fixed;\n  }\n\n  .md\\:text-left {\n    text-align: left;\n  }\n\n  .md\\:text-center {\n    text-align: center;\n  }\n\n  .md\\:text-right {\n    text-align: right;\n  }\n\n  .md\\:text-justify {\n    text-align: justify;\n  }\n\n  .md\\:text-transparent {\n    color: transparent;\n  }\n\n  .md\\:text-black {\n    color: #22292f;\n  }\n\n  .md\\:text-grey-darkest {\n    color: #3d4852;\n  }\n\n  .md\\:text-grey-darker {\n    color: #606f7b;\n  }\n\n  .md\\:text-grey-dark {\n    color: #8795a1;\n  }\n\n  .md\\:text-grey {\n    color: #b8c2cc;\n  }\n\n  .md\\:text-grey-light {\n    color: #dae1e7;\n  }\n\n  .md\\:text-grey-lighter {\n    color: #f1f5f8;\n  }\n\n  .md\\:text-grey-lightest {\n    color: #f8fafc;\n  }\n\n  .md\\:text-white {\n    color: #fff;\n  }\n\n  .md\\:text-red-darkest {\n    color: #3b0d0c;\n  }\n\n  .md\\:text-red-darker {\n    color: #621b18;\n  }\n\n  .md\\:text-red-dark {\n    color: #cc1f1a;\n  }\n\n  .md\\:text-red {\n    color: #e3342f;\n  }\n\n  .md\\:text-red-light {\n    color: #ef5753;\n  }\n\n  .md\\:text-red-lighter {\n    color: #f9acaa;\n  }\n\n  .md\\:text-red-lightest {\n    color: #fcebea;\n  }\n\n  .md\\:text-orange-darkest {\n    color: #462a16;\n  }\n\n  .md\\:text-orange-darker {\n    color: #613b1f;\n  }\n\n  .md\\:text-orange-dark {\n    color: #de751f;\n  }\n\n  .md\\:text-orange {\n    color: #f6993f;\n  }\n\n  .md\\:text-orange-light {\n    color: #faad63;\n  }\n\n  .md\\:text-orange-lighter {\n    color: #fcd9b6;\n  }\n\n  .md\\:text-orange-lightest {\n    color: #fff5eb;\n  }\n\n  .md\\:text-yellow-darkest {\n    color: #453411;\n  }\n\n  .md\\:text-yellow-darker {\n    color: #684f1d;\n  }\n\n  .md\\:text-yellow-dark {\n    color: #f2d024;\n  }\n\n  .md\\:text-yellow {\n    color: #ffed4a;\n  }\n\n  .md\\:text-yellow-light {\n    color: #fff382;\n  }\n\n  .md\\:text-yellow-lighter {\n    color: #fff9c2;\n  }\n\n  .md\\:text-yellow-lightest {\n    color: #fcfbeb;\n  }\n\n  .md\\:text-green-darkest {\n    color: #0f2f21;\n  }\n\n  .md\\:text-green-darker {\n    color: #1a4731;\n  }\n\n  .md\\:text-green-dark {\n    color: #1f9d55;\n  }\n\n  .md\\:text-green {\n    color: #38c172;\n  }\n\n  .md\\:text-green-light {\n    color: #51d88a;\n  }\n\n  .md\\:text-green-lighter {\n    color: #a2f5bf;\n  }\n\n  .md\\:text-green-lightest {\n    color: #e3fcec;\n  }\n\n  .md\\:text-teal-darkest {\n    color: #0d3331;\n  }\n\n  .md\\:text-teal-darker {\n    color: #20504f;\n  }\n\n  .md\\:text-teal-dark {\n    color: #38a89d;\n  }\n\n  .md\\:text-teal {\n    color: #4dc0b5;\n  }\n\n  .md\\:text-teal-light {\n    color: #64d5ca;\n  }\n\n  .md\\:text-teal-lighter {\n    color: #a0f0ed;\n  }\n\n  .md\\:text-teal-lightest {\n    color: #e8fffe;\n  }\n\n  .md\\:text-blue-darkest {\n    color: #12283a;\n  }\n\n  .md\\:text-blue-darker {\n    color: #1c3d5a;\n  }\n\n  .md\\:text-blue-dark {\n    color: #2779bd;\n  }\n\n  .md\\:text-blue {\n    color: #3490dc;\n  }\n\n  .md\\:text-blue-light {\n    color: #6cb2eb;\n  }\n\n  .md\\:text-blue-lighter {\n    color: #bcdefa;\n  }\n\n  .md\\:text-blue-lightest {\n    color: #eff8ff;\n  }\n\n  .md\\:text-indigo-darkest {\n    color: #191e38;\n  }\n\n  .md\\:text-indigo-darker {\n    color: #2f365f;\n  }\n\n  .md\\:text-indigo-dark {\n    color: #5661b3;\n  }\n\n  .md\\:text-indigo {\n    color: #6574cd;\n  }\n\n  .md\\:text-indigo-light {\n    color: #7886d7;\n  }\n\n  .md\\:text-indigo-lighter {\n    color: #b2b7ff;\n  }\n\n  .md\\:text-indigo-lightest {\n    color: #e6e8ff;\n  }\n\n  .md\\:text-purple-darkest {\n    color: #21183c;\n  }\n\n  .md\\:text-purple-darker {\n    color: #382b5f;\n  }\n\n  .md\\:text-purple-dark {\n    color: #794acf;\n  }\n\n  .md\\:text-purple {\n    color: #9561e2;\n  }\n\n  .md\\:text-purple-light {\n    color: #a779e9;\n  }\n\n  .md\\:text-purple-lighter {\n    color: #d6bbfc;\n  }\n\n  .md\\:text-purple-lightest {\n    color: #f3ebff;\n  }\n\n  .md\\:text-pink-darkest {\n    color: #451225;\n  }\n\n  .md\\:text-pink-darker {\n    color: #6f213f;\n  }\n\n  .md\\:text-pink-dark {\n    color: #eb5286;\n  }\n\n  .md\\:text-pink {\n    color: #f66d9b;\n  }\n\n  .md\\:text-pink-light {\n    color: #fa7ea8;\n  }\n\n  .md\\:text-pink-lighter {\n    color: #ffbbca;\n  }\n\n  .md\\:text-pink-lightest {\n    color: #ffebef;\n  }\n\n  .md\\:hover\\:text-transparent:hover {\n    color: transparent;\n  }\n\n  .md\\:hover\\:text-black:hover {\n    color: #22292f;\n  }\n\n  .md\\:hover\\:text-grey-darkest:hover {\n    color: #3d4852;\n  }\n\n  .md\\:hover\\:text-grey-darker:hover {\n    color: #606f7b;\n  }\n\n  .md\\:hover\\:text-grey-dark:hover {\n    color: #8795a1;\n  }\n\n  .md\\:hover\\:text-grey:hover {\n    color: #b8c2cc;\n  }\n\n  .md\\:hover\\:text-grey-light:hover {\n    color: #dae1e7;\n  }\n\n  .md\\:hover\\:text-grey-lighter:hover {\n    color: #f1f5f8;\n  }\n\n  .md\\:hover\\:text-grey-lightest:hover {\n    color: #f8fafc;\n  }\n\n  .md\\:hover\\:text-white:hover {\n    color: #fff;\n  }\n\n  .md\\:hover\\:text-red-darkest:hover {\n    color: #3b0d0c;\n  }\n\n  .md\\:hover\\:text-red-darker:hover {\n    color: #621b18;\n  }\n\n  .md\\:hover\\:text-red-dark:hover {\n    color: #cc1f1a;\n  }\n\n  .md\\:hover\\:text-red:hover {\n    color: #e3342f;\n  }\n\n  .md\\:hover\\:text-red-light:hover {\n    color: #ef5753;\n  }\n\n  .md\\:hover\\:text-red-lighter:hover {\n    color: #f9acaa;\n  }\n\n  .md\\:hover\\:text-red-lightest:hover {\n    color: #fcebea;\n  }\n\n  .md\\:hover\\:text-orange-darkest:hover {\n    color: #462a16;\n  }\n\n  .md\\:hover\\:text-orange-darker:hover {\n    color: #613b1f;\n  }\n\n  .md\\:hover\\:text-orange-dark:hover {\n    color: #de751f;\n  }\n\n  .md\\:hover\\:text-orange:hover {\n    color: #f6993f;\n  }\n\n  .md\\:hover\\:text-orange-light:hover {\n    color: #faad63;\n  }\n\n  .md\\:hover\\:text-orange-lighter:hover {\n    color: #fcd9b6;\n  }\n\n  .md\\:hover\\:text-orange-lightest:hover {\n    color: #fff5eb;\n  }\n\n  .md\\:hover\\:text-yellow-darkest:hover {\n    color: #453411;\n  }\n\n  .md\\:hover\\:text-yellow-darker:hover {\n    color: #684f1d;\n  }\n\n  .md\\:hover\\:text-yellow-dark:hover {\n    color: #f2d024;\n  }\n\n  .md\\:hover\\:text-yellow:hover {\n    color: #ffed4a;\n  }\n\n  .md\\:hover\\:text-yellow-light:hover {\n    color: #fff382;\n  }\n\n  .md\\:hover\\:text-yellow-lighter:hover {\n    color: #fff9c2;\n  }\n\n  .md\\:hover\\:text-yellow-lightest:hover {\n    color: #fcfbeb;\n  }\n\n  .md\\:hover\\:text-green-darkest:hover {\n    color: #0f2f21;\n  }\n\n  .md\\:hover\\:text-green-darker:hover {\n    color: #1a4731;\n  }\n\n  .md\\:hover\\:text-green-dark:hover {\n    color: #1f9d55;\n  }\n\n  .md\\:hover\\:text-green:hover {\n    color: #38c172;\n  }\n\n  .md\\:hover\\:text-green-light:hover {\n    color: #51d88a;\n  }\n\n  .md\\:hover\\:text-green-lighter:hover {\n    color: #a2f5bf;\n  }\n\n  .md\\:hover\\:text-green-lightest:hover {\n    color: #e3fcec;\n  }\n\n  .md\\:hover\\:text-teal-darkest:hover {\n    color: #0d3331;\n  }\n\n  .md\\:hover\\:text-teal-darker:hover {\n    color: #20504f;\n  }\n\n  .md\\:hover\\:text-teal-dark:hover {\n    color: #38a89d;\n  }\n\n  .md\\:hover\\:text-teal:hover {\n    color: #4dc0b5;\n  }\n\n  .md\\:hover\\:text-teal-light:hover {\n    color: #64d5ca;\n  }\n\n  .md\\:hover\\:text-teal-lighter:hover {\n    color: #a0f0ed;\n  }\n\n  .md\\:hover\\:text-teal-lightest:hover {\n    color: #e8fffe;\n  }\n\n  .md\\:hover\\:text-blue-darkest:hover {\n    color: #12283a;\n  }\n\n  .md\\:hover\\:text-blue-darker:hover {\n    color: #1c3d5a;\n  }\n\n  .md\\:hover\\:text-blue-dark:hover {\n    color: #2779bd;\n  }\n\n  .md\\:hover\\:text-blue:hover {\n    color: #3490dc;\n  }\n\n  .md\\:hover\\:text-blue-light:hover {\n    color: #6cb2eb;\n  }\n\n  .md\\:hover\\:text-blue-lighter:hover {\n    color: #bcdefa;\n  }\n\n  .md\\:hover\\:text-blue-lightest:hover {\n    color: #eff8ff;\n  }\n\n  .md\\:hover\\:text-indigo-darkest:hover {\n    color: #191e38;\n  }\n\n  .md\\:hover\\:text-indigo-darker:hover {\n    color: #2f365f;\n  }\n\n  .md\\:hover\\:text-indigo-dark:hover {\n    color: #5661b3;\n  }\n\n  .md\\:hover\\:text-indigo:hover {\n    color: #6574cd;\n  }\n\n  .md\\:hover\\:text-indigo-light:hover {\n    color: #7886d7;\n  }\n\n  .md\\:hover\\:text-indigo-lighter:hover {\n    color: #b2b7ff;\n  }\n\n  .md\\:hover\\:text-indigo-lightest:hover {\n    color: #e6e8ff;\n  }\n\n  .md\\:hover\\:text-purple-darkest:hover {\n    color: #21183c;\n  }\n\n  .md\\:hover\\:text-purple-darker:hover {\n    color: #382b5f;\n  }\n\n  .md\\:hover\\:text-purple-dark:hover {\n    color: #794acf;\n  }\n\n  .md\\:hover\\:text-purple:hover {\n    color: #9561e2;\n  }\n\n  .md\\:hover\\:text-purple-light:hover {\n    color: #a779e9;\n  }\n\n  .md\\:hover\\:text-purple-lighter:hover {\n    color: #d6bbfc;\n  }\n\n  .md\\:hover\\:text-purple-lightest:hover {\n    color: #f3ebff;\n  }\n\n  .md\\:hover\\:text-pink-darkest:hover {\n    color: #451225;\n  }\n\n  .md\\:hover\\:text-pink-darker:hover {\n    color: #6f213f;\n  }\n\n  .md\\:hover\\:text-pink-dark:hover {\n    color: #eb5286;\n  }\n\n  .md\\:hover\\:text-pink:hover {\n    color: #f66d9b;\n  }\n\n  .md\\:hover\\:text-pink-light:hover {\n    color: #fa7ea8;\n  }\n\n  .md\\:hover\\:text-pink-lighter:hover {\n    color: #ffbbca;\n  }\n\n  .md\\:hover\\:text-pink-lightest:hover {\n    color: #ffebef;\n  }\n\n  .md\\:focus\\:text-transparent:focus {\n    color: transparent;\n  }\n\n  .md\\:focus\\:text-black:focus {\n    color: #22292f;\n  }\n\n  .md\\:focus\\:text-grey-darkest:focus {\n    color: #3d4852;\n  }\n\n  .md\\:focus\\:text-grey-darker:focus {\n    color: #606f7b;\n  }\n\n  .md\\:focus\\:text-grey-dark:focus {\n    color: #8795a1;\n  }\n\n  .md\\:focus\\:text-grey:focus {\n    color: #b8c2cc;\n  }\n\n  .md\\:focus\\:text-grey-light:focus {\n    color: #dae1e7;\n  }\n\n  .md\\:focus\\:text-grey-lighter:focus {\n    color: #f1f5f8;\n  }\n\n  .md\\:focus\\:text-grey-lightest:focus {\n    color: #f8fafc;\n  }\n\n  .md\\:focus\\:text-white:focus {\n    color: #fff;\n  }\n\n  .md\\:focus\\:text-red-darkest:focus {\n    color: #3b0d0c;\n  }\n\n  .md\\:focus\\:text-red-darker:focus {\n    color: #621b18;\n  }\n\n  .md\\:focus\\:text-red-dark:focus {\n    color: #cc1f1a;\n  }\n\n  .md\\:focus\\:text-red:focus {\n    color: #e3342f;\n  }\n\n  .md\\:focus\\:text-red-light:focus {\n    color: #ef5753;\n  }\n\n  .md\\:focus\\:text-red-lighter:focus {\n    color: #f9acaa;\n  }\n\n  .md\\:focus\\:text-red-lightest:focus {\n    color: #fcebea;\n  }\n\n  .md\\:focus\\:text-orange-darkest:focus {\n    color: #462a16;\n  }\n\n  .md\\:focus\\:text-orange-darker:focus {\n    color: #613b1f;\n  }\n\n  .md\\:focus\\:text-orange-dark:focus {\n    color: #de751f;\n  }\n\n  .md\\:focus\\:text-orange:focus {\n    color: #f6993f;\n  }\n\n  .md\\:focus\\:text-orange-light:focus {\n    color: #faad63;\n  }\n\n  .md\\:focus\\:text-orange-lighter:focus {\n    color: #fcd9b6;\n  }\n\n  .md\\:focus\\:text-orange-lightest:focus {\n    color: #fff5eb;\n  }\n\n  .md\\:focus\\:text-yellow-darkest:focus {\n    color: #453411;\n  }\n\n  .md\\:focus\\:text-yellow-darker:focus {\n    color: #684f1d;\n  }\n\n  .md\\:focus\\:text-yellow-dark:focus {\n    color: #f2d024;\n  }\n\n  .md\\:focus\\:text-yellow:focus {\n    color: #ffed4a;\n  }\n\n  .md\\:focus\\:text-yellow-light:focus {\n    color: #fff382;\n  }\n\n  .md\\:focus\\:text-yellow-lighter:focus {\n    color: #fff9c2;\n  }\n\n  .md\\:focus\\:text-yellow-lightest:focus {\n    color: #fcfbeb;\n  }\n\n  .md\\:focus\\:text-green-darkest:focus {\n    color: #0f2f21;\n  }\n\n  .md\\:focus\\:text-green-darker:focus {\n    color: #1a4731;\n  }\n\n  .md\\:focus\\:text-green-dark:focus {\n    color: #1f9d55;\n  }\n\n  .md\\:focus\\:text-green:focus {\n    color: #38c172;\n  }\n\n  .md\\:focus\\:text-green-light:focus {\n    color: #51d88a;\n  }\n\n  .md\\:focus\\:text-green-lighter:focus {\n    color: #a2f5bf;\n  }\n\n  .md\\:focus\\:text-green-lightest:focus {\n    color: #e3fcec;\n  }\n\n  .md\\:focus\\:text-teal-darkest:focus {\n    color: #0d3331;\n  }\n\n  .md\\:focus\\:text-teal-darker:focus {\n    color: #20504f;\n  }\n\n  .md\\:focus\\:text-teal-dark:focus {\n    color: #38a89d;\n  }\n\n  .md\\:focus\\:text-teal:focus {\n    color: #4dc0b5;\n  }\n\n  .md\\:focus\\:text-teal-light:focus {\n    color: #64d5ca;\n  }\n\n  .md\\:focus\\:text-teal-lighter:focus {\n    color: #a0f0ed;\n  }\n\n  .md\\:focus\\:text-teal-lightest:focus {\n    color: #e8fffe;\n  }\n\n  .md\\:focus\\:text-blue-darkest:focus {\n    color: #12283a;\n  }\n\n  .md\\:focus\\:text-blue-darker:focus {\n    color: #1c3d5a;\n  }\n\n  .md\\:focus\\:text-blue-dark:focus {\n    color: #2779bd;\n  }\n\n  .md\\:focus\\:text-blue:focus {\n    color: #3490dc;\n  }\n\n  .md\\:focus\\:text-blue-light:focus {\n    color: #6cb2eb;\n  }\n\n  .md\\:focus\\:text-blue-lighter:focus {\n    color: #bcdefa;\n  }\n\n  .md\\:focus\\:text-blue-lightest:focus {\n    color: #eff8ff;\n  }\n\n  .md\\:focus\\:text-indigo-darkest:focus {\n    color: #191e38;\n  }\n\n  .md\\:focus\\:text-indigo-darker:focus {\n    color: #2f365f;\n  }\n\n  .md\\:focus\\:text-indigo-dark:focus {\n    color: #5661b3;\n  }\n\n  .md\\:focus\\:text-indigo:focus {\n    color: #6574cd;\n  }\n\n  .md\\:focus\\:text-indigo-light:focus {\n    color: #7886d7;\n  }\n\n  .md\\:focus\\:text-indigo-lighter:focus {\n    color: #b2b7ff;\n  }\n\n  .md\\:focus\\:text-indigo-lightest:focus {\n    color: #e6e8ff;\n  }\n\n  .md\\:focus\\:text-purple-darkest:focus {\n    color: #21183c;\n  }\n\n  .md\\:focus\\:text-purple-darker:focus {\n    color: #382b5f;\n  }\n\n  .md\\:focus\\:text-purple-dark:focus {\n    color: #794acf;\n  }\n\n  .md\\:focus\\:text-purple:focus {\n    color: #9561e2;\n  }\n\n  .md\\:focus\\:text-purple-light:focus {\n    color: #a779e9;\n  }\n\n  .md\\:focus\\:text-purple-lighter:focus {\n    color: #d6bbfc;\n  }\n\n  .md\\:focus\\:text-purple-lightest:focus {\n    color: #f3ebff;\n  }\n\n  .md\\:focus\\:text-pink-darkest:focus {\n    color: #451225;\n  }\n\n  .md\\:focus\\:text-pink-darker:focus {\n    color: #6f213f;\n  }\n\n  .md\\:focus\\:text-pink-dark:focus {\n    color: #eb5286;\n  }\n\n  .md\\:focus\\:text-pink:focus {\n    color: #f66d9b;\n  }\n\n  .md\\:focus\\:text-pink-light:focus {\n    color: #fa7ea8;\n  }\n\n  .md\\:focus\\:text-pink-lighter:focus {\n    color: #ffbbca;\n  }\n\n  .md\\:focus\\:text-pink-lightest:focus {\n    color: #ffebef;\n  }\n\n  .md\\:text-xs {\n    font-size: .75rem;\n  }\n\n  .md\\:text-sm {\n    font-size: .875rem;\n  }\n\n  .md\\:text-base {\n    font-size: 1rem;\n  }\n\n  .md\\:text-lg {\n    font-size: 1.125rem;\n  }\n\n  .md\\:text-xl {\n    font-size: 1.25rem;\n  }\n\n  .md\\:text-2xl {\n    font-size: 1.5rem;\n  }\n\n  .md\\:text-3xl {\n    font-size: 1.875rem;\n  }\n\n  .md\\:text-4xl {\n    font-size: 2.25rem;\n  }\n\n  .md\\:text-5xl {\n    font-size: 3rem;\n  }\n\n  .md\\:italic {\n    font-style: italic;\n  }\n\n  .md\\:roman {\n    font-style: normal;\n  }\n\n  .md\\:uppercase {\n    text-transform: uppercase;\n  }\n\n  .md\\:lowercase {\n    text-transform: lowercase;\n  }\n\n  .md\\:capitalize {\n    text-transform: capitalize;\n  }\n\n  .md\\:normal-case {\n    text-transform: none;\n  }\n\n  .md\\:underline {\n    text-decoration: underline;\n  }\n\n  .md\\:line-through {\n    text-decoration: line-through;\n  }\n\n  .md\\:no-underline {\n    text-decoration: none;\n  }\n\n  .md\\:antialiased {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .md\\:subpixel-antialiased {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .md\\:hover\\:italic:hover {\n    font-style: italic;\n  }\n\n  .md\\:hover\\:roman:hover {\n    font-style: normal;\n  }\n\n  .md\\:hover\\:uppercase:hover {\n    text-transform: uppercase;\n  }\n\n  .md\\:hover\\:lowercase:hover {\n    text-transform: lowercase;\n  }\n\n  .md\\:hover\\:capitalize:hover {\n    text-transform: capitalize;\n  }\n\n  .md\\:hover\\:normal-case:hover {\n    text-transform: none;\n  }\n\n  .md\\:hover\\:underline:hover {\n    text-decoration: underline;\n  }\n\n  .md\\:hover\\:line-through:hover {\n    text-decoration: line-through;\n  }\n\n  .md\\:hover\\:no-underline:hover {\n    text-decoration: none;\n  }\n\n  .md\\:hover\\:antialiased:hover {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .md\\:hover\\:subpixel-antialiased:hover {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .md\\:focus\\:italic:focus {\n    font-style: italic;\n  }\n\n  .md\\:focus\\:roman:focus {\n    font-style: normal;\n  }\n\n  .md\\:focus\\:uppercase:focus {\n    text-transform: uppercase;\n  }\n\n  .md\\:focus\\:lowercase:focus {\n    text-transform: lowercase;\n  }\n\n  .md\\:focus\\:capitalize:focus {\n    text-transform: capitalize;\n  }\n\n  .md\\:focus\\:normal-case:focus {\n    text-transform: none;\n  }\n\n  .md\\:focus\\:underline:focus {\n    text-decoration: underline;\n  }\n\n  .md\\:focus\\:line-through:focus {\n    text-decoration: line-through;\n  }\n\n  .md\\:focus\\:no-underline:focus {\n    text-decoration: none;\n  }\n\n  .md\\:focus\\:antialiased:focus {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .md\\:focus\\:subpixel-antialiased:focus {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .md\\:tracking-tight {\n    letter-spacing: -0.05em;\n  }\n\n  .md\\:tracking-normal {\n    letter-spacing: 0;\n  }\n\n  .md\\:tracking-wide {\n    letter-spacing: .05em;\n  }\n\n  .md\\:select-none {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n  }\n\n  .md\\:select-text {\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n  }\n\n  .md\\:align-baseline {\n    vertical-align: baseline;\n  }\n\n  .md\\:align-top {\n    vertical-align: top;\n  }\n\n  .md\\:align-middle {\n    vertical-align: middle;\n  }\n\n  .md\\:align-bottom {\n    vertical-align: bottom;\n  }\n\n  .md\\:align-text-top {\n    vertical-align: text-top;\n  }\n\n  .md\\:align-text-bottom {\n    vertical-align: text-bottom;\n  }\n\n  .md\\:visible {\n    visibility: visible;\n  }\n\n  .md\\:invisible {\n    visibility: hidden;\n  }\n\n  .md\\:whitespace-normal {\n    white-space: normal;\n  }\n\n  .md\\:whitespace-no-wrap {\n    white-space: nowrap;\n  }\n\n  .md\\:whitespace-pre {\n    white-space: pre;\n  }\n\n  .md\\:whitespace-pre-line {\n    white-space: pre-line;\n  }\n\n  .md\\:whitespace-pre-wrap {\n    white-space: pre-wrap;\n  }\n\n  .md\\:break-words {\n    word-wrap: break-word;\n  }\n\n  .md\\:break-normal {\n    word-wrap: normal;\n  }\n\n  .md\\:truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .md\\:w-1 {\n    width: .25rem;\n  }\n\n  .md\\:w-2 {\n    width: .5rem;\n  }\n\n  .md\\:w-3 {\n    width: .75rem;\n  }\n\n  .md\\:w-4 {\n    width: 1rem;\n  }\n\n  .md\\:w-5 {\n    width: 1.25rem;\n  }\n\n  .md\\:w-6 {\n    width: 1.5rem;\n  }\n\n  .md\\:w-8 {\n    width: 2rem;\n  }\n\n  .md\\:w-10 {\n    width: 2.5rem;\n  }\n\n  .md\\:w-12 {\n    width: 3rem;\n  }\n\n  .md\\:w-16 {\n    width: 4rem;\n  }\n\n  .md\\:w-24 {\n    width: 6rem;\n  }\n\n  .md\\:w-32 {\n    width: 8rem;\n  }\n\n  .md\\:w-48 {\n    width: 12rem;\n  }\n\n  .md\\:w-64 {\n    width: 16rem;\n  }\n\n  .md\\:w-auto {\n    width: auto;\n  }\n\n  .md\\:w-px {\n    width: 1px;\n  }\n\n  .md\\:w-1\\/2 {\n    width: 50%;\n  }\n\n  .md\\:w-1\\/3 {\n    width: 33.33333%;\n  }\n\n  .md\\:w-2\\/3 {\n    width: 66.66667%;\n  }\n\n  .md\\:w-1\\/4 {\n    width: 25%;\n  }\n\n  .md\\:w-3\\/4 {\n    width: 75%;\n  }\n\n  .md\\:w-1\\/5 {\n    width: 20%;\n  }\n\n  .md\\:w-2\\/5 {\n    width: 40%;\n  }\n\n  .md\\:w-3\\/5 {\n    width: 60%;\n  }\n\n  .md\\:w-4\\/5 {\n    width: 80%;\n  }\n\n  .md\\:w-1\\/6 {\n    width: 16.66667%;\n  }\n\n  .md\\:w-5\\/6 {\n    width: 83.33333%;\n  }\n\n  .md\\:w-full {\n    width: 100%;\n  }\n\n  .md\\:w-screen {\n    width: 100vw;\n  }\n\n  .md\\:z-0 {\n    z-index: 0;\n  }\n\n  .md\\:z-10 {\n    z-index: 10;\n  }\n\n  .md\\:z-20 {\n    z-index: 20;\n  }\n\n  .md\\:z-30 {\n    z-index: 30;\n  }\n\n  .md\\:z-40 {\n    z-index: 40;\n  }\n\n  .md\\:z-50 {\n    z-index: 50;\n  }\n\n  .md\\:z-auto {\n    z-index: auto;\n  }\n}\n\n@media (min-width: 992px) {\n  .lg\\:list-reset {\n    list-style: none;\n    padding: 0;\n  }\n\n  .lg\\:appearance-none {\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n  }\n\n  .lg\\:bg-fixed {\n    background-attachment: fixed;\n  }\n\n  .lg\\:bg-local {\n    background-attachment: local;\n  }\n\n  .lg\\:bg-scroll {\n    background-attachment: scroll;\n  }\n\n  .lg\\:bg-transparent {\n    background-color: transparent;\n  }\n\n  .lg\\:bg-black {\n    background-color: #22292f;\n  }\n\n  .lg\\:bg-grey-darkest {\n    background-color: #3d4852;\n  }\n\n  .lg\\:bg-grey-darker {\n    background-color: #606f7b;\n  }\n\n  .lg\\:bg-grey-dark {\n    background-color: #8795a1;\n  }\n\n  .lg\\:bg-grey {\n    background-color: #b8c2cc;\n  }\n\n  .lg\\:bg-grey-light {\n    background-color: #dae1e7;\n  }\n\n  .lg\\:bg-grey-lighter {\n    background-color: #f1f5f8;\n  }\n\n  .lg\\:bg-grey-lightest {\n    background-color: #f8fafc;\n  }\n\n  .lg\\:bg-white {\n    background-color: #fff;\n  }\n\n  .lg\\:bg-red-darkest {\n    background-color: #3b0d0c;\n  }\n\n  .lg\\:bg-red-darker {\n    background-color: #621b18;\n  }\n\n  .lg\\:bg-red-dark {\n    background-color: #cc1f1a;\n  }\n\n  .lg\\:bg-red {\n    background-color: #e3342f;\n  }\n\n  .lg\\:bg-red-light {\n    background-color: #ef5753;\n  }\n\n  .lg\\:bg-red-lighter {\n    background-color: #f9acaa;\n  }\n\n  .lg\\:bg-red-lightest {\n    background-color: #fcebea;\n  }\n\n  .lg\\:bg-orange-darkest {\n    background-color: #462a16;\n  }\n\n  .lg\\:bg-orange-darker {\n    background-color: #613b1f;\n  }\n\n  .lg\\:bg-orange-dark {\n    background-color: #de751f;\n  }\n\n  .lg\\:bg-orange {\n    background-color: #f6993f;\n  }\n\n  .lg\\:bg-orange-light {\n    background-color: #faad63;\n  }\n\n  .lg\\:bg-orange-lighter {\n    background-color: #fcd9b6;\n  }\n\n  .lg\\:bg-orange-lightest {\n    background-color: #fff5eb;\n  }\n\n  .lg\\:bg-yellow-darkest {\n    background-color: #453411;\n  }\n\n  .lg\\:bg-yellow-darker {\n    background-color: #684f1d;\n  }\n\n  .lg\\:bg-yellow-dark {\n    background-color: #f2d024;\n  }\n\n  .lg\\:bg-yellow {\n    background-color: #ffed4a;\n  }\n\n  .lg\\:bg-yellow-light {\n    background-color: #fff382;\n  }\n\n  .lg\\:bg-yellow-lighter {\n    background-color: #fff9c2;\n  }\n\n  .lg\\:bg-yellow-lightest {\n    background-color: #fcfbeb;\n  }\n\n  .lg\\:bg-green-darkest {\n    background-color: #0f2f21;\n  }\n\n  .lg\\:bg-green-darker {\n    background-color: #1a4731;\n  }\n\n  .lg\\:bg-green-dark {\n    background-color: #1f9d55;\n  }\n\n  .lg\\:bg-green {\n    background-color: #38c172;\n  }\n\n  .lg\\:bg-green-light {\n    background-color: #51d88a;\n  }\n\n  .lg\\:bg-green-lighter {\n    background-color: #a2f5bf;\n  }\n\n  .lg\\:bg-green-lightest {\n    background-color: #e3fcec;\n  }\n\n  .lg\\:bg-teal-darkest {\n    background-color: #0d3331;\n  }\n\n  .lg\\:bg-teal-darker {\n    background-color: #20504f;\n  }\n\n  .lg\\:bg-teal-dark {\n    background-color: #38a89d;\n  }\n\n  .lg\\:bg-teal {\n    background-color: #4dc0b5;\n  }\n\n  .lg\\:bg-teal-light {\n    background-color: #64d5ca;\n  }\n\n  .lg\\:bg-teal-lighter {\n    background-color: #a0f0ed;\n  }\n\n  .lg\\:bg-teal-lightest {\n    background-color: #e8fffe;\n  }\n\n  .lg\\:bg-blue-darkest {\n    background-color: #12283a;\n  }\n\n  .lg\\:bg-blue-darker {\n    background-color: #1c3d5a;\n  }\n\n  .lg\\:bg-blue-dark {\n    background-color: #2779bd;\n  }\n\n  .lg\\:bg-blue {\n    background-color: #3490dc;\n  }\n\n  .lg\\:bg-blue-light {\n    background-color: #6cb2eb;\n  }\n\n  .lg\\:bg-blue-lighter {\n    background-color: #bcdefa;\n  }\n\n  .lg\\:bg-blue-lightest {\n    background-color: #eff8ff;\n  }\n\n  .lg\\:bg-indigo-darkest {\n    background-color: #191e38;\n  }\n\n  .lg\\:bg-indigo-darker {\n    background-color: #2f365f;\n  }\n\n  .lg\\:bg-indigo-dark {\n    background-color: #5661b3;\n  }\n\n  .lg\\:bg-indigo {\n    background-color: #6574cd;\n  }\n\n  .lg\\:bg-indigo-light {\n    background-color: #7886d7;\n  }\n\n  .lg\\:bg-indigo-lighter {\n    background-color: #b2b7ff;\n  }\n\n  .lg\\:bg-indigo-lightest {\n    background-color: #e6e8ff;\n  }\n\n  .lg\\:bg-purple-darkest {\n    background-color: #21183c;\n  }\n\n  .lg\\:bg-purple-darker {\n    background-color: #382b5f;\n  }\n\n  .lg\\:bg-purple-dark {\n    background-color: #794acf;\n  }\n\n  .lg\\:bg-purple {\n    background-color: #9561e2;\n  }\n\n  .lg\\:bg-purple-light {\n    background-color: #a779e9;\n  }\n\n  .lg\\:bg-purple-lighter {\n    background-color: #d6bbfc;\n  }\n\n  .lg\\:bg-purple-lightest {\n    background-color: #f3ebff;\n  }\n\n  .lg\\:bg-pink-darkest {\n    background-color: #451225;\n  }\n\n  .lg\\:bg-pink-darker {\n    background-color: #6f213f;\n  }\n\n  .lg\\:bg-pink-dark {\n    background-color: #eb5286;\n  }\n\n  .lg\\:bg-pink {\n    background-color: #f66d9b;\n  }\n\n  .lg\\:bg-pink-light {\n    background-color: #fa7ea8;\n  }\n\n  .lg\\:bg-pink-lighter {\n    background-color: #ffbbca;\n  }\n\n  .lg\\:bg-pink-lightest {\n    background-color: #ffebef;\n  }\n\n  .lg\\:hover\\:bg-transparent:hover {\n    background-color: transparent;\n  }\n\n  .lg\\:hover\\:bg-black:hover {\n    background-color: #22292f;\n  }\n\n  .lg\\:hover\\:bg-grey-darkest:hover {\n    background-color: #3d4852;\n  }\n\n  .lg\\:hover\\:bg-grey-darker:hover {\n    background-color: #606f7b;\n  }\n\n  .lg\\:hover\\:bg-grey-dark:hover {\n    background-color: #8795a1;\n  }\n\n  .lg\\:hover\\:bg-grey:hover {\n    background-color: #b8c2cc;\n  }\n\n  .lg\\:hover\\:bg-grey-light:hover {\n    background-color: #dae1e7;\n  }\n\n  .lg\\:hover\\:bg-grey-lighter:hover {\n    background-color: #f1f5f8;\n  }\n\n  .lg\\:hover\\:bg-grey-lightest:hover {\n    background-color: #f8fafc;\n  }\n\n  .lg\\:hover\\:bg-white:hover {\n    background-color: #fff;\n  }\n\n  .lg\\:hover\\:bg-red-darkest:hover {\n    background-color: #3b0d0c;\n  }\n\n  .lg\\:hover\\:bg-red-darker:hover {\n    background-color: #621b18;\n  }\n\n  .lg\\:hover\\:bg-red-dark:hover {\n    background-color: #cc1f1a;\n  }\n\n  .lg\\:hover\\:bg-red:hover {\n    background-color: #e3342f;\n  }\n\n  .lg\\:hover\\:bg-red-light:hover {\n    background-color: #ef5753;\n  }\n\n  .lg\\:hover\\:bg-red-lighter:hover {\n    background-color: #f9acaa;\n  }\n\n  .lg\\:hover\\:bg-red-lightest:hover {\n    background-color: #fcebea;\n  }\n\n  .lg\\:hover\\:bg-orange-darkest:hover {\n    background-color: #462a16;\n  }\n\n  .lg\\:hover\\:bg-orange-darker:hover {\n    background-color: #613b1f;\n  }\n\n  .lg\\:hover\\:bg-orange-dark:hover {\n    background-color: #de751f;\n  }\n\n  .lg\\:hover\\:bg-orange:hover {\n    background-color: #f6993f;\n  }\n\n  .lg\\:hover\\:bg-orange-light:hover {\n    background-color: #faad63;\n  }\n\n  .lg\\:hover\\:bg-orange-lighter:hover {\n    background-color: #fcd9b6;\n  }\n\n  .lg\\:hover\\:bg-orange-lightest:hover {\n    background-color: #fff5eb;\n  }\n\n  .lg\\:hover\\:bg-yellow-darkest:hover {\n    background-color: #453411;\n  }\n\n  .lg\\:hover\\:bg-yellow-darker:hover {\n    background-color: #684f1d;\n  }\n\n  .lg\\:hover\\:bg-yellow-dark:hover {\n    background-color: #f2d024;\n  }\n\n  .lg\\:hover\\:bg-yellow:hover {\n    background-color: #ffed4a;\n  }\n\n  .lg\\:hover\\:bg-yellow-light:hover {\n    background-color: #fff382;\n  }\n\n  .lg\\:hover\\:bg-yellow-lighter:hover {\n    background-color: #fff9c2;\n  }\n\n  .lg\\:hover\\:bg-yellow-lightest:hover {\n    background-color: #fcfbeb;\n  }\n\n  .lg\\:hover\\:bg-green-darkest:hover {\n    background-color: #0f2f21;\n  }\n\n  .lg\\:hover\\:bg-green-darker:hover {\n    background-color: #1a4731;\n  }\n\n  .lg\\:hover\\:bg-green-dark:hover {\n    background-color: #1f9d55;\n  }\n\n  .lg\\:hover\\:bg-green:hover {\n    background-color: #38c172;\n  }\n\n  .lg\\:hover\\:bg-green-light:hover {\n    background-color: #51d88a;\n  }\n\n  .lg\\:hover\\:bg-green-lighter:hover {\n    background-color: #a2f5bf;\n  }\n\n  .lg\\:hover\\:bg-green-lightest:hover {\n    background-color: #e3fcec;\n  }\n\n  .lg\\:hover\\:bg-teal-darkest:hover {\n    background-color: #0d3331;\n  }\n\n  .lg\\:hover\\:bg-teal-darker:hover {\n    background-color: #20504f;\n  }\n\n  .lg\\:hover\\:bg-teal-dark:hover {\n    background-color: #38a89d;\n  }\n\n  .lg\\:hover\\:bg-teal:hover {\n    background-color: #4dc0b5;\n  }\n\n  .lg\\:hover\\:bg-teal-light:hover {\n    background-color: #64d5ca;\n  }\n\n  .lg\\:hover\\:bg-teal-lighter:hover {\n    background-color: #a0f0ed;\n  }\n\n  .lg\\:hover\\:bg-teal-lightest:hover {\n    background-color: #e8fffe;\n  }\n\n  .lg\\:hover\\:bg-blue-darkest:hover {\n    background-color: #12283a;\n  }\n\n  .lg\\:hover\\:bg-blue-darker:hover {\n    background-color: #1c3d5a;\n  }\n\n  .lg\\:hover\\:bg-blue-dark:hover {\n    background-color: #2779bd;\n  }\n\n  .lg\\:hover\\:bg-blue:hover {\n    background-color: #3490dc;\n  }\n\n  .lg\\:hover\\:bg-blue-light:hover {\n    background-color: #6cb2eb;\n  }\n\n  .lg\\:hover\\:bg-blue-lighter:hover {\n    background-color: #bcdefa;\n  }\n\n  .lg\\:hover\\:bg-blue-lightest:hover {\n    background-color: #eff8ff;\n  }\n\n  .lg\\:hover\\:bg-indigo-darkest:hover {\n    background-color: #191e38;\n  }\n\n  .lg\\:hover\\:bg-indigo-darker:hover {\n    background-color: #2f365f;\n  }\n\n  .lg\\:hover\\:bg-indigo-dark:hover {\n    background-color: #5661b3;\n  }\n\n  .lg\\:hover\\:bg-indigo:hover {\n    background-color: #6574cd;\n  }\n\n  .lg\\:hover\\:bg-indigo-light:hover {\n    background-color: #7886d7;\n  }\n\n  .lg\\:hover\\:bg-indigo-lighter:hover {\n    background-color: #b2b7ff;\n  }\n\n  .lg\\:hover\\:bg-indigo-lightest:hover {\n    background-color: #e6e8ff;\n  }\n\n  .lg\\:hover\\:bg-purple-darkest:hover {\n    background-color: #21183c;\n  }\n\n  .lg\\:hover\\:bg-purple-darker:hover {\n    background-color: #382b5f;\n  }\n\n  .lg\\:hover\\:bg-purple-dark:hover {\n    background-color: #794acf;\n  }\n\n  .lg\\:hover\\:bg-purple:hover {\n    background-color: #9561e2;\n  }\n\n  .lg\\:hover\\:bg-purple-light:hover {\n    background-color: #a779e9;\n  }\n\n  .lg\\:hover\\:bg-purple-lighter:hover {\n    background-color: #d6bbfc;\n  }\n\n  .lg\\:hover\\:bg-purple-lightest:hover {\n    background-color: #f3ebff;\n  }\n\n  .lg\\:hover\\:bg-pink-darkest:hover {\n    background-color: #451225;\n  }\n\n  .lg\\:hover\\:bg-pink-darker:hover {\n    background-color: #6f213f;\n  }\n\n  .lg\\:hover\\:bg-pink-dark:hover {\n    background-color: #eb5286;\n  }\n\n  .lg\\:hover\\:bg-pink:hover {\n    background-color: #f66d9b;\n  }\n\n  .lg\\:hover\\:bg-pink-light:hover {\n    background-color: #fa7ea8;\n  }\n\n  .lg\\:hover\\:bg-pink-lighter:hover {\n    background-color: #ffbbca;\n  }\n\n  .lg\\:hover\\:bg-pink-lightest:hover {\n    background-color: #ffebef;\n  }\n\n  .lg\\:focus\\:bg-transparent:focus {\n    background-color: transparent;\n  }\n\n  .lg\\:focus\\:bg-black:focus {\n    background-color: #22292f;\n  }\n\n  .lg\\:focus\\:bg-grey-darkest:focus {\n    background-color: #3d4852;\n  }\n\n  .lg\\:focus\\:bg-grey-darker:focus {\n    background-color: #606f7b;\n  }\n\n  .lg\\:focus\\:bg-grey-dark:focus {\n    background-color: #8795a1;\n  }\n\n  .lg\\:focus\\:bg-grey:focus {\n    background-color: #b8c2cc;\n  }\n\n  .lg\\:focus\\:bg-grey-light:focus {\n    background-color: #dae1e7;\n  }\n\n  .lg\\:focus\\:bg-grey-lighter:focus {\n    background-color: #f1f5f8;\n  }\n\n  .lg\\:focus\\:bg-grey-lightest:focus {\n    background-color: #f8fafc;\n  }\n\n  .lg\\:focus\\:bg-white:focus {\n    background-color: #fff;\n  }\n\n  .lg\\:focus\\:bg-red-darkest:focus {\n    background-color: #3b0d0c;\n  }\n\n  .lg\\:focus\\:bg-red-darker:focus {\n    background-color: #621b18;\n  }\n\n  .lg\\:focus\\:bg-red-dark:focus {\n    background-color: #cc1f1a;\n  }\n\n  .lg\\:focus\\:bg-red:focus {\n    background-color: #e3342f;\n  }\n\n  .lg\\:focus\\:bg-red-light:focus {\n    background-color: #ef5753;\n  }\n\n  .lg\\:focus\\:bg-red-lighter:focus {\n    background-color: #f9acaa;\n  }\n\n  .lg\\:focus\\:bg-red-lightest:focus {\n    background-color: #fcebea;\n  }\n\n  .lg\\:focus\\:bg-orange-darkest:focus {\n    background-color: #462a16;\n  }\n\n  .lg\\:focus\\:bg-orange-darker:focus {\n    background-color: #613b1f;\n  }\n\n  .lg\\:focus\\:bg-orange-dark:focus {\n    background-color: #de751f;\n  }\n\n  .lg\\:focus\\:bg-orange:focus {\n    background-color: #f6993f;\n  }\n\n  .lg\\:focus\\:bg-orange-light:focus {\n    background-color: #faad63;\n  }\n\n  .lg\\:focus\\:bg-orange-lighter:focus {\n    background-color: #fcd9b6;\n  }\n\n  .lg\\:focus\\:bg-orange-lightest:focus {\n    background-color: #fff5eb;\n  }\n\n  .lg\\:focus\\:bg-yellow-darkest:focus {\n    background-color: #453411;\n  }\n\n  .lg\\:focus\\:bg-yellow-darker:focus {\n    background-color: #684f1d;\n  }\n\n  .lg\\:focus\\:bg-yellow-dark:focus {\n    background-color: #f2d024;\n  }\n\n  .lg\\:focus\\:bg-yellow:focus {\n    background-color: #ffed4a;\n  }\n\n  .lg\\:focus\\:bg-yellow-light:focus {\n    background-color: #fff382;\n  }\n\n  .lg\\:focus\\:bg-yellow-lighter:focus {\n    background-color: #fff9c2;\n  }\n\n  .lg\\:focus\\:bg-yellow-lightest:focus {\n    background-color: #fcfbeb;\n  }\n\n  .lg\\:focus\\:bg-green-darkest:focus {\n    background-color: #0f2f21;\n  }\n\n  .lg\\:focus\\:bg-green-darker:focus {\n    background-color: #1a4731;\n  }\n\n  .lg\\:focus\\:bg-green-dark:focus {\n    background-color: #1f9d55;\n  }\n\n  .lg\\:focus\\:bg-green:focus {\n    background-color: #38c172;\n  }\n\n  .lg\\:focus\\:bg-green-light:focus {\n    background-color: #51d88a;\n  }\n\n  .lg\\:focus\\:bg-green-lighter:focus {\n    background-color: #a2f5bf;\n  }\n\n  .lg\\:focus\\:bg-green-lightest:focus {\n    background-color: #e3fcec;\n  }\n\n  .lg\\:focus\\:bg-teal-darkest:focus {\n    background-color: #0d3331;\n  }\n\n  .lg\\:focus\\:bg-teal-darker:focus {\n    background-color: #20504f;\n  }\n\n  .lg\\:focus\\:bg-teal-dark:focus {\n    background-color: #38a89d;\n  }\n\n  .lg\\:focus\\:bg-teal:focus {\n    background-color: #4dc0b5;\n  }\n\n  .lg\\:focus\\:bg-teal-light:focus {\n    background-color: #64d5ca;\n  }\n\n  .lg\\:focus\\:bg-teal-lighter:focus {\n    background-color: #a0f0ed;\n  }\n\n  .lg\\:focus\\:bg-teal-lightest:focus {\n    background-color: #e8fffe;\n  }\n\n  .lg\\:focus\\:bg-blue-darkest:focus {\n    background-color: #12283a;\n  }\n\n  .lg\\:focus\\:bg-blue-darker:focus {\n    background-color: #1c3d5a;\n  }\n\n  .lg\\:focus\\:bg-blue-dark:focus {\n    background-color: #2779bd;\n  }\n\n  .lg\\:focus\\:bg-blue:focus {\n    background-color: #3490dc;\n  }\n\n  .lg\\:focus\\:bg-blue-light:focus {\n    background-color: #6cb2eb;\n  }\n\n  .lg\\:focus\\:bg-blue-lighter:focus {\n    background-color: #bcdefa;\n  }\n\n  .lg\\:focus\\:bg-blue-lightest:focus {\n    background-color: #eff8ff;\n  }\n\n  .lg\\:focus\\:bg-indigo-darkest:focus {\n    background-color: #191e38;\n  }\n\n  .lg\\:focus\\:bg-indigo-darker:focus {\n    background-color: #2f365f;\n  }\n\n  .lg\\:focus\\:bg-indigo-dark:focus {\n    background-color: #5661b3;\n  }\n\n  .lg\\:focus\\:bg-indigo:focus {\n    background-color: #6574cd;\n  }\n\n  .lg\\:focus\\:bg-indigo-light:focus {\n    background-color: #7886d7;\n  }\n\n  .lg\\:focus\\:bg-indigo-lighter:focus {\n    background-color: #b2b7ff;\n  }\n\n  .lg\\:focus\\:bg-indigo-lightest:focus {\n    background-color: #e6e8ff;\n  }\n\n  .lg\\:focus\\:bg-purple-darkest:focus {\n    background-color: #21183c;\n  }\n\n  .lg\\:focus\\:bg-purple-darker:focus {\n    background-color: #382b5f;\n  }\n\n  .lg\\:focus\\:bg-purple-dark:focus {\n    background-color: #794acf;\n  }\n\n  .lg\\:focus\\:bg-purple:focus {\n    background-color: #9561e2;\n  }\n\n  .lg\\:focus\\:bg-purple-light:focus {\n    background-color: #a779e9;\n  }\n\n  .lg\\:focus\\:bg-purple-lighter:focus {\n    background-color: #d6bbfc;\n  }\n\n  .lg\\:focus\\:bg-purple-lightest:focus {\n    background-color: #f3ebff;\n  }\n\n  .lg\\:focus\\:bg-pink-darkest:focus {\n    background-color: #451225;\n  }\n\n  .lg\\:focus\\:bg-pink-darker:focus {\n    background-color: #6f213f;\n  }\n\n  .lg\\:focus\\:bg-pink-dark:focus {\n    background-color: #eb5286;\n  }\n\n  .lg\\:focus\\:bg-pink:focus {\n    background-color: #f66d9b;\n  }\n\n  .lg\\:focus\\:bg-pink-light:focus {\n    background-color: #fa7ea8;\n  }\n\n  .lg\\:focus\\:bg-pink-lighter:focus {\n    background-color: #ffbbca;\n  }\n\n  .lg\\:focus\\:bg-pink-lightest:focus {\n    background-color: #ffebef;\n  }\n\n  .lg\\:bg-bottom {\n    background-position: bottom;\n  }\n\n  .lg\\:bg-center {\n    background-position: center;\n  }\n\n  .lg\\:bg-left {\n    background-position: left;\n  }\n\n  .lg\\:bg-left-bottom {\n    background-position: left bottom;\n  }\n\n  .lg\\:bg-left-top {\n    background-position: left top;\n  }\n\n  .lg\\:bg-right {\n    background-position: right;\n  }\n\n  .lg\\:bg-right-bottom {\n    background-position: right bottom;\n  }\n\n  .lg\\:bg-right-top {\n    background-position: right top;\n  }\n\n  .lg\\:bg-top {\n    background-position: top;\n  }\n\n  .lg\\:bg-repeat {\n    background-repeat: repeat;\n  }\n\n  .lg\\:bg-no-repeat {\n    background-repeat: no-repeat;\n  }\n\n  .lg\\:bg-repeat-x {\n    background-repeat: repeat-x;\n  }\n\n  .lg\\:bg-repeat-y {\n    background-repeat: repeat-y;\n  }\n\n  .lg\\:bg-auto {\n    background-size: auto;\n  }\n\n  .lg\\:bg-cover {\n    background-size: cover;\n  }\n\n  .lg\\:bg-contain {\n    background-size: contain;\n  }\n\n  .lg\\:border-transparent {\n    border-color: transparent;\n  }\n\n  .lg\\:border-black {\n    border-color: #22292f;\n  }\n\n  .lg\\:border-grey-darkest {\n    border-color: #3d4852;\n  }\n\n  .lg\\:border-grey-darker {\n    border-color: #606f7b;\n  }\n\n  .lg\\:border-grey-dark {\n    border-color: #8795a1;\n  }\n\n  .lg\\:border-grey {\n    border-color: #b8c2cc;\n  }\n\n  .lg\\:border-grey-light {\n    border-color: #dae1e7;\n  }\n\n  .lg\\:border-grey-lighter {\n    border-color: #f1f5f8;\n  }\n\n  .lg\\:border-grey-lightest {\n    border-color: #f8fafc;\n  }\n\n  .lg\\:border-white {\n    border-color: #fff;\n  }\n\n  .lg\\:border-red-darkest {\n    border-color: #3b0d0c;\n  }\n\n  .lg\\:border-red-darker {\n    border-color: #621b18;\n  }\n\n  .lg\\:border-red-dark {\n    border-color: #cc1f1a;\n  }\n\n  .lg\\:border-red {\n    border-color: #e3342f;\n  }\n\n  .lg\\:border-red-light {\n    border-color: #ef5753;\n  }\n\n  .lg\\:border-red-lighter {\n    border-color: #f9acaa;\n  }\n\n  .lg\\:border-red-lightest {\n    border-color: #fcebea;\n  }\n\n  .lg\\:border-orange-darkest {\n    border-color: #462a16;\n  }\n\n  .lg\\:border-orange-darker {\n    border-color: #613b1f;\n  }\n\n  .lg\\:border-orange-dark {\n    border-color: #de751f;\n  }\n\n  .lg\\:border-orange {\n    border-color: #f6993f;\n  }\n\n  .lg\\:border-orange-light {\n    border-color: #faad63;\n  }\n\n  .lg\\:border-orange-lighter {\n    border-color: #fcd9b6;\n  }\n\n  .lg\\:border-orange-lightest {\n    border-color: #fff5eb;\n  }\n\n  .lg\\:border-yellow-darkest {\n    border-color: #453411;\n  }\n\n  .lg\\:border-yellow-darker {\n    border-color: #684f1d;\n  }\n\n  .lg\\:border-yellow-dark {\n    border-color: #f2d024;\n  }\n\n  .lg\\:border-yellow {\n    border-color: #ffed4a;\n  }\n\n  .lg\\:border-yellow-light {\n    border-color: #fff382;\n  }\n\n  .lg\\:border-yellow-lighter {\n    border-color: #fff9c2;\n  }\n\n  .lg\\:border-yellow-lightest {\n    border-color: #fcfbeb;\n  }\n\n  .lg\\:border-green-darkest {\n    border-color: #0f2f21;\n  }\n\n  .lg\\:border-green-darker {\n    border-color: #1a4731;\n  }\n\n  .lg\\:border-green-dark {\n    border-color: #1f9d55;\n  }\n\n  .lg\\:border-green {\n    border-color: #38c172;\n  }\n\n  .lg\\:border-green-light {\n    border-color: #51d88a;\n  }\n\n  .lg\\:border-green-lighter {\n    border-color: #a2f5bf;\n  }\n\n  .lg\\:border-green-lightest {\n    border-color: #e3fcec;\n  }\n\n  .lg\\:border-teal-darkest {\n    border-color: #0d3331;\n  }\n\n  .lg\\:border-teal-darker {\n    border-color: #20504f;\n  }\n\n  .lg\\:border-teal-dark {\n    border-color: #38a89d;\n  }\n\n  .lg\\:border-teal {\n    border-color: #4dc0b5;\n  }\n\n  .lg\\:border-teal-light {\n    border-color: #64d5ca;\n  }\n\n  .lg\\:border-teal-lighter {\n    border-color: #a0f0ed;\n  }\n\n  .lg\\:border-teal-lightest {\n    border-color: #e8fffe;\n  }\n\n  .lg\\:border-blue-darkest {\n    border-color: #12283a;\n  }\n\n  .lg\\:border-blue-darker {\n    border-color: #1c3d5a;\n  }\n\n  .lg\\:border-blue-dark {\n    border-color: #2779bd;\n  }\n\n  .lg\\:border-blue {\n    border-color: #3490dc;\n  }\n\n  .lg\\:border-blue-light {\n    border-color: #6cb2eb;\n  }\n\n  .lg\\:border-blue-lighter {\n    border-color: #bcdefa;\n  }\n\n  .lg\\:border-blue-lightest {\n    border-color: #eff8ff;\n  }\n\n  .lg\\:border-indigo-darkest {\n    border-color: #191e38;\n  }\n\n  .lg\\:border-indigo-darker {\n    border-color: #2f365f;\n  }\n\n  .lg\\:border-indigo-dark {\n    border-color: #5661b3;\n  }\n\n  .lg\\:border-indigo {\n    border-color: #6574cd;\n  }\n\n  .lg\\:border-indigo-light {\n    border-color: #7886d7;\n  }\n\n  .lg\\:border-indigo-lighter {\n    border-color: #b2b7ff;\n  }\n\n  .lg\\:border-indigo-lightest {\n    border-color: #e6e8ff;\n  }\n\n  .lg\\:border-purple-darkest {\n    border-color: #21183c;\n  }\n\n  .lg\\:border-purple-darker {\n    border-color: #382b5f;\n  }\n\n  .lg\\:border-purple-dark {\n    border-color: #794acf;\n  }\n\n  .lg\\:border-purple {\n    border-color: #9561e2;\n  }\n\n  .lg\\:border-purple-light {\n    border-color: #a779e9;\n  }\n\n  .lg\\:border-purple-lighter {\n    border-color: #d6bbfc;\n  }\n\n  .lg\\:border-purple-lightest {\n    border-color: #f3ebff;\n  }\n\n  .lg\\:border-pink-darkest {\n    border-color: #451225;\n  }\n\n  .lg\\:border-pink-darker {\n    border-color: #6f213f;\n  }\n\n  .lg\\:border-pink-dark {\n    border-color: #eb5286;\n  }\n\n  .lg\\:border-pink {\n    border-color: #f66d9b;\n  }\n\n  .lg\\:border-pink-light {\n    border-color: #fa7ea8;\n  }\n\n  .lg\\:border-pink-lighter {\n    border-color: #ffbbca;\n  }\n\n  .lg\\:border-pink-lightest {\n    border-color: #ffebef;\n  }\n\n  .lg\\:hover\\:border-transparent:hover {\n    border-color: transparent;\n  }\n\n  .lg\\:hover\\:border-black:hover {\n    border-color: #22292f;\n  }\n\n  .lg\\:hover\\:border-grey-darkest:hover {\n    border-color: #3d4852;\n  }\n\n  .lg\\:hover\\:border-grey-darker:hover {\n    border-color: #606f7b;\n  }\n\n  .lg\\:hover\\:border-grey-dark:hover {\n    border-color: #8795a1;\n  }\n\n  .lg\\:hover\\:border-grey:hover {\n    border-color: #b8c2cc;\n  }\n\n  .lg\\:hover\\:border-grey-light:hover {\n    border-color: #dae1e7;\n  }\n\n  .lg\\:hover\\:border-grey-lighter:hover {\n    border-color: #f1f5f8;\n  }\n\n  .lg\\:hover\\:border-grey-lightest:hover {\n    border-color: #f8fafc;\n  }\n\n  .lg\\:hover\\:border-white:hover {\n    border-color: #fff;\n  }\n\n  .lg\\:hover\\:border-red-darkest:hover {\n    border-color: #3b0d0c;\n  }\n\n  .lg\\:hover\\:border-red-darker:hover {\n    border-color: #621b18;\n  }\n\n  .lg\\:hover\\:border-red-dark:hover {\n    border-color: #cc1f1a;\n  }\n\n  .lg\\:hover\\:border-red:hover {\n    border-color: #e3342f;\n  }\n\n  .lg\\:hover\\:border-red-light:hover {\n    border-color: #ef5753;\n  }\n\n  .lg\\:hover\\:border-red-lighter:hover {\n    border-color: #f9acaa;\n  }\n\n  .lg\\:hover\\:border-red-lightest:hover {\n    border-color: #fcebea;\n  }\n\n  .lg\\:hover\\:border-orange-darkest:hover {\n    border-color: #462a16;\n  }\n\n  .lg\\:hover\\:border-orange-darker:hover {\n    border-color: #613b1f;\n  }\n\n  .lg\\:hover\\:border-orange-dark:hover {\n    border-color: #de751f;\n  }\n\n  .lg\\:hover\\:border-orange:hover {\n    border-color: #f6993f;\n  }\n\n  .lg\\:hover\\:border-orange-light:hover {\n    border-color: #faad63;\n  }\n\n  .lg\\:hover\\:border-orange-lighter:hover {\n    border-color: #fcd9b6;\n  }\n\n  .lg\\:hover\\:border-orange-lightest:hover {\n    border-color: #fff5eb;\n  }\n\n  .lg\\:hover\\:border-yellow-darkest:hover {\n    border-color: #453411;\n  }\n\n  .lg\\:hover\\:border-yellow-darker:hover {\n    border-color: #684f1d;\n  }\n\n  .lg\\:hover\\:border-yellow-dark:hover {\n    border-color: #f2d024;\n  }\n\n  .lg\\:hover\\:border-yellow:hover {\n    border-color: #ffed4a;\n  }\n\n  .lg\\:hover\\:border-yellow-light:hover {\n    border-color: #fff382;\n  }\n\n  .lg\\:hover\\:border-yellow-lighter:hover {\n    border-color: #fff9c2;\n  }\n\n  .lg\\:hover\\:border-yellow-lightest:hover {\n    border-color: #fcfbeb;\n  }\n\n  .lg\\:hover\\:border-green-darkest:hover {\n    border-color: #0f2f21;\n  }\n\n  .lg\\:hover\\:border-green-darker:hover {\n    border-color: #1a4731;\n  }\n\n  .lg\\:hover\\:border-green-dark:hover {\n    border-color: #1f9d55;\n  }\n\n  .lg\\:hover\\:border-green:hover {\n    border-color: #38c172;\n  }\n\n  .lg\\:hover\\:border-green-light:hover {\n    border-color: #51d88a;\n  }\n\n  .lg\\:hover\\:border-green-lighter:hover {\n    border-color: #a2f5bf;\n  }\n\n  .lg\\:hover\\:border-green-lightest:hover {\n    border-color: #e3fcec;\n  }\n\n  .lg\\:hover\\:border-teal-darkest:hover {\n    border-color: #0d3331;\n  }\n\n  .lg\\:hover\\:border-teal-darker:hover {\n    border-color: #20504f;\n  }\n\n  .lg\\:hover\\:border-teal-dark:hover {\n    border-color: #38a89d;\n  }\n\n  .lg\\:hover\\:border-teal:hover {\n    border-color: #4dc0b5;\n  }\n\n  .lg\\:hover\\:border-teal-light:hover {\n    border-color: #64d5ca;\n  }\n\n  .lg\\:hover\\:border-teal-lighter:hover {\n    border-color: #a0f0ed;\n  }\n\n  .lg\\:hover\\:border-teal-lightest:hover {\n    border-color: #e8fffe;\n  }\n\n  .lg\\:hover\\:border-blue-darkest:hover {\n    border-color: #12283a;\n  }\n\n  .lg\\:hover\\:border-blue-darker:hover {\n    border-color: #1c3d5a;\n  }\n\n  .lg\\:hover\\:border-blue-dark:hover {\n    border-color: #2779bd;\n  }\n\n  .lg\\:hover\\:border-blue:hover {\n    border-color: #3490dc;\n  }\n\n  .lg\\:hover\\:border-blue-light:hover {\n    border-color: #6cb2eb;\n  }\n\n  .lg\\:hover\\:border-blue-lighter:hover {\n    border-color: #bcdefa;\n  }\n\n  .lg\\:hover\\:border-blue-lightest:hover {\n    border-color: #eff8ff;\n  }\n\n  .lg\\:hover\\:border-indigo-darkest:hover {\n    border-color: #191e38;\n  }\n\n  .lg\\:hover\\:border-indigo-darker:hover {\n    border-color: #2f365f;\n  }\n\n  .lg\\:hover\\:border-indigo-dark:hover {\n    border-color: #5661b3;\n  }\n\n  .lg\\:hover\\:border-indigo:hover {\n    border-color: #6574cd;\n  }\n\n  .lg\\:hover\\:border-indigo-light:hover {\n    border-color: #7886d7;\n  }\n\n  .lg\\:hover\\:border-indigo-lighter:hover {\n    border-color: #b2b7ff;\n  }\n\n  .lg\\:hover\\:border-indigo-lightest:hover {\n    border-color: #e6e8ff;\n  }\n\n  .lg\\:hover\\:border-purple-darkest:hover {\n    border-color: #21183c;\n  }\n\n  .lg\\:hover\\:border-purple-darker:hover {\n    border-color: #382b5f;\n  }\n\n  .lg\\:hover\\:border-purple-dark:hover {\n    border-color: #794acf;\n  }\n\n  .lg\\:hover\\:border-purple:hover {\n    border-color: #9561e2;\n  }\n\n  .lg\\:hover\\:border-purple-light:hover {\n    border-color: #a779e9;\n  }\n\n  .lg\\:hover\\:border-purple-lighter:hover {\n    border-color: #d6bbfc;\n  }\n\n  .lg\\:hover\\:border-purple-lightest:hover {\n    border-color: #f3ebff;\n  }\n\n  .lg\\:hover\\:border-pink-darkest:hover {\n    border-color: #451225;\n  }\n\n  .lg\\:hover\\:border-pink-darker:hover {\n    border-color: #6f213f;\n  }\n\n  .lg\\:hover\\:border-pink-dark:hover {\n    border-color: #eb5286;\n  }\n\n  .lg\\:hover\\:border-pink:hover {\n    border-color: #f66d9b;\n  }\n\n  .lg\\:hover\\:border-pink-light:hover {\n    border-color: #fa7ea8;\n  }\n\n  .lg\\:hover\\:border-pink-lighter:hover {\n    border-color: #ffbbca;\n  }\n\n  .lg\\:hover\\:border-pink-lightest:hover {\n    border-color: #ffebef;\n  }\n\n  .lg\\:focus\\:border-transparent:focus {\n    border-color: transparent;\n  }\n\n  .lg\\:focus\\:border-black:focus {\n    border-color: #22292f;\n  }\n\n  .lg\\:focus\\:border-grey-darkest:focus {\n    border-color: #3d4852;\n  }\n\n  .lg\\:focus\\:border-grey-darker:focus {\n    border-color: #606f7b;\n  }\n\n  .lg\\:focus\\:border-grey-dark:focus {\n    border-color: #8795a1;\n  }\n\n  .lg\\:focus\\:border-grey:focus {\n    border-color: #b8c2cc;\n  }\n\n  .lg\\:focus\\:border-grey-light:focus {\n    border-color: #dae1e7;\n  }\n\n  .lg\\:focus\\:border-grey-lighter:focus {\n    border-color: #f1f5f8;\n  }\n\n  .lg\\:focus\\:border-grey-lightest:focus {\n    border-color: #f8fafc;\n  }\n\n  .lg\\:focus\\:border-white:focus {\n    border-color: #fff;\n  }\n\n  .lg\\:focus\\:border-red-darkest:focus {\n    border-color: #3b0d0c;\n  }\n\n  .lg\\:focus\\:border-red-darker:focus {\n    border-color: #621b18;\n  }\n\n  .lg\\:focus\\:border-red-dark:focus {\n    border-color: #cc1f1a;\n  }\n\n  .lg\\:focus\\:border-red:focus {\n    border-color: #e3342f;\n  }\n\n  .lg\\:focus\\:border-red-light:focus {\n    border-color: #ef5753;\n  }\n\n  .lg\\:focus\\:border-red-lighter:focus {\n    border-color: #f9acaa;\n  }\n\n  .lg\\:focus\\:border-red-lightest:focus {\n    border-color: #fcebea;\n  }\n\n  .lg\\:focus\\:border-orange-darkest:focus {\n    border-color: #462a16;\n  }\n\n  .lg\\:focus\\:border-orange-darker:focus {\n    border-color: #613b1f;\n  }\n\n  .lg\\:focus\\:border-orange-dark:focus {\n    border-color: #de751f;\n  }\n\n  .lg\\:focus\\:border-orange:focus {\n    border-color: #f6993f;\n  }\n\n  .lg\\:focus\\:border-orange-light:focus {\n    border-color: #faad63;\n  }\n\n  .lg\\:focus\\:border-orange-lighter:focus {\n    border-color: #fcd9b6;\n  }\n\n  .lg\\:focus\\:border-orange-lightest:focus {\n    border-color: #fff5eb;\n  }\n\n  .lg\\:focus\\:border-yellow-darkest:focus {\n    border-color: #453411;\n  }\n\n  .lg\\:focus\\:border-yellow-darker:focus {\n    border-color: #684f1d;\n  }\n\n  .lg\\:focus\\:border-yellow-dark:focus {\n    border-color: #f2d024;\n  }\n\n  .lg\\:focus\\:border-yellow:focus {\n    border-color: #ffed4a;\n  }\n\n  .lg\\:focus\\:border-yellow-light:focus {\n    border-color: #fff382;\n  }\n\n  .lg\\:focus\\:border-yellow-lighter:focus {\n    border-color: #fff9c2;\n  }\n\n  .lg\\:focus\\:border-yellow-lightest:focus {\n    border-color: #fcfbeb;\n  }\n\n  .lg\\:focus\\:border-green-darkest:focus {\n    border-color: #0f2f21;\n  }\n\n  .lg\\:focus\\:border-green-darker:focus {\n    border-color: #1a4731;\n  }\n\n  .lg\\:focus\\:border-green-dark:focus {\n    border-color: #1f9d55;\n  }\n\n  .lg\\:focus\\:border-green:focus {\n    border-color: #38c172;\n  }\n\n  .lg\\:focus\\:border-green-light:focus {\n    border-color: #51d88a;\n  }\n\n  .lg\\:focus\\:border-green-lighter:focus {\n    border-color: #a2f5bf;\n  }\n\n  .lg\\:focus\\:border-green-lightest:focus {\n    border-color: #e3fcec;\n  }\n\n  .lg\\:focus\\:border-teal-darkest:focus {\n    border-color: #0d3331;\n  }\n\n  .lg\\:focus\\:border-teal-darker:focus {\n    border-color: #20504f;\n  }\n\n  .lg\\:focus\\:border-teal-dark:focus {\n    border-color: #38a89d;\n  }\n\n  .lg\\:focus\\:border-teal:focus {\n    border-color: #4dc0b5;\n  }\n\n  .lg\\:focus\\:border-teal-light:focus {\n    border-color: #64d5ca;\n  }\n\n  .lg\\:focus\\:border-teal-lighter:focus {\n    border-color: #a0f0ed;\n  }\n\n  .lg\\:focus\\:border-teal-lightest:focus {\n    border-color: #e8fffe;\n  }\n\n  .lg\\:focus\\:border-blue-darkest:focus {\n    border-color: #12283a;\n  }\n\n  .lg\\:focus\\:border-blue-darker:focus {\n    border-color: #1c3d5a;\n  }\n\n  .lg\\:focus\\:border-blue-dark:focus {\n    border-color: #2779bd;\n  }\n\n  .lg\\:focus\\:border-blue:focus {\n    border-color: #3490dc;\n  }\n\n  .lg\\:focus\\:border-blue-light:focus {\n    border-color: #6cb2eb;\n  }\n\n  .lg\\:focus\\:border-blue-lighter:focus {\n    border-color: #bcdefa;\n  }\n\n  .lg\\:focus\\:border-blue-lightest:focus {\n    border-color: #eff8ff;\n  }\n\n  .lg\\:focus\\:border-indigo-darkest:focus {\n    border-color: #191e38;\n  }\n\n  .lg\\:focus\\:border-indigo-darker:focus {\n    border-color: #2f365f;\n  }\n\n  .lg\\:focus\\:border-indigo-dark:focus {\n    border-color: #5661b3;\n  }\n\n  .lg\\:focus\\:border-indigo:focus {\n    border-color: #6574cd;\n  }\n\n  .lg\\:focus\\:border-indigo-light:focus {\n    border-color: #7886d7;\n  }\n\n  .lg\\:focus\\:border-indigo-lighter:focus {\n    border-color: #b2b7ff;\n  }\n\n  .lg\\:focus\\:border-indigo-lightest:focus {\n    border-color: #e6e8ff;\n  }\n\n  .lg\\:focus\\:border-purple-darkest:focus {\n    border-color: #21183c;\n  }\n\n  .lg\\:focus\\:border-purple-darker:focus {\n    border-color: #382b5f;\n  }\n\n  .lg\\:focus\\:border-purple-dark:focus {\n    border-color: #794acf;\n  }\n\n  .lg\\:focus\\:border-purple:focus {\n    border-color: #9561e2;\n  }\n\n  .lg\\:focus\\:border-purple-light:focus {\n    border-color: #a779e9;\n  }\n\n  .lg\\:focus\\:border-purple-lighter:focus {\n    border-color: #d6bbfc;\n  }\n\n  .lg\\:focus\\:border-purple-lightest:focus {\n    border-color: #f3ebff;\n  }\n\n  .lg\\:focus\\:border-pink-darkest:focus {\n    border-color: #451225;\n  }\n\n  .lg\\:focus\\:border-pink-darker:focus {\n    border-color: #6f213f;\n  }\n\n  .lg\\:focus\\:border-pink-dark:focus {\n    border-color: #eb5286;\n  }\n\n  .lg\\:focus\\:border-pink:focus {\n    border-color: #f66d9b;\n  }\n\n  .lg\\:focus\\:border-pink-light:focus {\n    border-color: #fa7ea8;\n  }\n\n  .lg\\:focus\\:border-pink-lighter:focus {\n    border-color: #ffbbca;\n  }\n\n  .lg\\:focus\\:border-pink-lightest:focus {\n    border-color: #ffebef;\n  }\n\n  .lg\\:rounded-none {\n    border-radius: 0;\n  }\n\n  .lg\\:rounded-sm {\n    border-radius: .125rem;\n  }\n\n  .lg\\:rounded {\n    border-radius: .25rem;\n  }\n\n  .lg\\:rounded-lg {\n    border-radius: .5rem;\n  }\n\n  .lg\\:rounded-full {\n    border-radius: 9999px;\n  }\n\n  .lg\\:rounded-t-none {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  .lg\\:rounded-r-none {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  .lg\\:rounded-b-none {\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .lg\\:rounded-l-none {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .lg\\:rounded-t-sm {\n    border-top-left-radius: .125rem;\n    border-top-right-radius: .125rem;\n  }\n\n  .lg\\:rounded-r-sm {\n    border-top-right-radius: .125rem;\n    border-bottom-right-radius: .125rem;\n  }\n\n  .lg\\:rounded-b-sm {\n    border-bottom-right-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .lg\\:rounded-l-sm {\n    border-top-left-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .lg\\:rounded-t {\n    border-top-left-radius: .25rem;\n    border-top-right-radius: .25rem;\n  }\n\n  .lg\\:rounded-r {\n    border-top-right-radius: .25rem;\n    border-bottom-right-radius: .25rem;\n  }\n\n  .lg\\:rounded-b {\n    border-bottom-right-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .lg\\:rounded-l {\n    border-top-left-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .lg\\:rounded-t-lg {\n    border-top-left-radius: .5rem;\n    border-top-right-radius: .5rem;\n  }\n\n  .lg\\:rounded-r-lg {\n    border-top-right-radius: .5rem;\n    border-bottom-right-radius: .5rem;\n  }\n\n  .lg\\:rounded-b-lg {\n    border-bottom-right-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .lg\\:rounded-l-lg {\n    border-top-left-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .lg\\:rounded-t-full {\n    border-top-left-radius: 9999px;\n    border-top-right-radius: 9999px;\n  }\n\n  .lg\\:rounded-r-full {\n    border-top-right-radius: 9999px;\n    border-bottom-right-radius: 9999px;\n  }\n\n  .lg\\:rounded-b-full {\n    border-bottom-right-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .lg\\:rounded-l-full {\n    border-top-left-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .lg\\:rounded-tl-none {\n    border-top-left-radius: 0;\n  }\n\n  .lg\\:rounded-tr-none {\n    border-top-right-radius: 0;\n  }\n\n  .lg\\:rounded-br-none {\n    border-bottom-right-radius: 0;\n  }\n\n  .lg\\:rounded-bl-none {\n    border-bottom-left-radius: 0;\n  }\n\n  .lg\\:rounded-tl-sm {\n    border-top-left-radius: .125rem;\n  }\n\n  .lg\\:rounded-tr-sm {\n    border-top-right-radius: .125rem;\n  }\n\n  .lg\\:rounded-br-sm {\n    border-bottom-right-radius: .125rem;\n  }\n\n  .lg\\:rounded-bl-sm {\n    border-bottom-left-radius: .125rem;\n  }\n\n  .lg\\:rounded-tl {\n    border-top-left-radius: .25rem;\n  }\n\n  .lg\\:rounded-tr {\n    border-top-right-radius: .25rem;\n  }\n\n  .lg\\:rounded-br {\n    border-bottom-right-radius: .25rem;\n  }\n\n  .lg\\:rounded-bl {\n    border-bottom-left-radius: .25rem;\n  }\n\n  .lg\\:rounded-tl-lg {\n    border-top-left-radius: .5rem;\n  }\n\n  .lg\\:rounded-tr-lg {\n    border-top-right-radius: .5rem;\n  }\n\n  .lg\\:rounded-br-lg {\n    border-bottom-right-radius: .5rem;\n  }\n\n  .lg\\:rounded-bl-lg {\n    border-bottom-left-radius: .5rem;\n  }\n\n  .lg\\:rounded-tl-full {\n    border-top-left-radius: 9999px;\n  }\n\n  .lg\\:rounded-tr-full {\n    border-top-right-radius: 9999px;\n  }\n\n  .lg\\:rounded-br-full {\n    border-bottom-right-radius: 9999px;\n  }\n\n  .lg\\:rounded-bl-full {\n    border-bottom-left-radius: 9999px;\n  }\n\n  .lg\\:border-solid {\n    border-style: solid;\n  }\n\n  .lg\\:border-dashed {\n    border-style: dashed;\n  }\n\n  .lg\\:border-dotted {\n    border-style: dotted;\n  }\n\n  .lg\\:border-none {\n    border-style: none;\n  }\n\n  .lg\\:border-0 {\n    border-width: 0;\n  }\n\n  .lg\\:border-2 {\n    border-width: 2px;\n  }\n\n  .lg\\:border-4 {\n    border-width: 4px;\n  }\n\n  .lg\\:border-8 {\n    border-width: 8px;\n  }\n\n  .lg\\:border {\n    border-width: 1px;\n  }\n\n  .lg\\:border-t-0 {\n    border-top-width: 0;\n  }\n\n  .lg\\:border-r-0 {\n    border-right-width: 0;\n  }\n\n  .lg\\:border-b-0 {\n    border-bottom-width: 0;\n  }\n\n  .lg\\:border-l-0 {\n    border-left-width: 0;\n  }\n\n  .lg\\:border-t-2 {\n    border-top-width: 2px;\n  }\n\n  .lg\\:border-r-2 {\n    border-right-width: 2px;\n  }\n\n  .lg\\:border-b-2 {\n    border-bottom-width: 2px;\n  }\n\n  .lg\\:border-l-2 {\n    border-left-width: 2px;\n  }\n\n  .lg\\:border-t-4 {\n    border-top-width: 4px;\n  }\n\n  .lg\\:border-r-4 {\n    border-right-width: 4px;\n  }\n\n  .lg\\:border-b-4 {\n    border-bottom-width: 4px;\n  }\n\n  .lg\\:border-l-4 {\n    border-left-width: 4px;\n  }\n\n  .lg\\:border-t-8 {\n    border-top-width: 8px;\n  }\n\n  .lg\\:border-r-8 {\n    border-right-width: 8px;\n  }\n\n  .lg\\:border-b-8 {\n    border-bottom-width: 8px;\n  }\n\n  .lg\\:border-l-8 {\n    border-left-width: 8px;\n  }\n\n  .lg\\:border-t {\n    border-top-width: 1px;\n  }\n\n  .lg\\:border-r {\n    border-right-width: 1px;\n  }\n\n  .lg\\:border-b {\n    border-bottom-width: 1px;\n  }\n\n  .lg\\:border-l {\n    border-left-width: 1px;\n  }\n\n  .lg\\:cursor-auto {\n    cursor: auto;\n  }\n\n  .lg\\:cursor-default {\n    cursor: default;\n  }\n\n  .lg\\:cursor-pointer {\n    cursor: pointer;\n  }\n\n  .lg\\:cursor-wait {\n    cursor: wait;\n  }\n\n  .lg\\:cursor-move {\n    cursor: move;\n  }\n\n  .lg\\:cursor-not-allowed {\n    cursor: not-allowed;\n  }\n\n  .lg\\:block {\n    display: block;\n  }\n\n  .lg\\:inline-block {\n    display: inline-block;\n  }\n\n  .lg\\:inline {\n    display: inline;\n  }\n\n  .lg\\:table {\n    display: table;\n  }\n\n  .lg\\:table-row {\n    display: table-row;\n  }\n\n  .lg\\:table-cell {\n    display: table-cell;\n  }\n\n  .lg\\:hidden {\n    display: none;\n  }\n\n  .lg\\:flex {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\n\n  .lg\\:inline-flex {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  }\n\n  .lg\\:flex-row {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n  }\n\n  .lg\\:flex-row-reverse {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: row-reverse;\n            flex-direction: row-reverse;\n  }\n\n  .lg\\:flex-col {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n  }\n\n  .lg\\:flex-col-reverse {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: column-reverse;\n            flex-direction: column-reverse;\n  }\n\n  .lg\\:flex-wrap {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n  }\n\n  .lg\\:flex-wrap-reverse {\n    -ms-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n  }\n\n  .lg\\:flex-no-wrap {\n    -ms-flex-wrap: nowrap;\n        flex-wrap: nowrap;\n  }\n\n  .lg\\:items-start {\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n  }\n\n  .lg\\:items-end {\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n  }\n\n  .lg\\:items-center {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n  }\n\n  .lg\\:items-baseline {\n    -webkit-box-align: baseline;\n        -ms-flex-align: baseline;\n            align-items: baseline;\n  }\n\n  .lg\\:items-stretch {\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch;\n  }\n\n  .lg\\:self-auto {\n    -ms-flex-item-align: auto;\n        align-self: auto;\n  }\n\n  .lg\\:self-start {\n    -ms-flex-item-align: start;\n        align-self: flex-start;\n  }\n\n  .lg\\:self-end {\n    -ms-flex-item-align: end;\n        align-self: flex-end;\n  }\n\n  .lg\\:self-center {\n    -ms-flex-item-align: center;\n        align-self: center;\n  }\n\n  .lg\\:self-stretch {\n    -ms-flex-item-align: stretch;\n        align-self: stretch;\n  }\n\n  .lg\\:justify-start {\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start;\n  }\n\n  .lg\\:justify-end {\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end;\n  }\n\n  .lg\\:justify-center {\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n  }\n\n  .lg\\:justify-between {\n    -webkit-box-pack: justify;\n        -ms-flex-pack: justify;\n            justify-content: space-between;\n  }\n\n  .lg\\:justify-around {\n    -ms-flex-pack: distribute;\n        justify-content: space-around;\n  }\n\n  .lg\\:content-center {\n    -ms-flex-line-pack: center;\n        align-content: center;\n  }\n\n  .lg\\:content-start {\n    -ms-flex-line-pack: start;\n        align-content: flex-start;\n  }\n\n  .lg\\:content-end {\n    -ms-flex-line-pack: end;\n        align-content: flex-end;\n  }\n\n  .lg\\:content-between {\n    -ms-flex-line-pack: justify;\n        align-content: space-between;\n  }\n\n  .lg\\:content-around {\n    -ms-flex-line-pack: distribute;\n        align-content: space-around;\n  }\n\n  .lg\\:flex-1 {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n  }\n\n  .lg\\:flex-auto {\n    -webkit-box-flex: 1;\n        -ms-flex: auto;\n            flex: auto;\n  }\n\n  .lg\\:flex-initial {\n    -webkit-box-flex: initial;\n        -ms-flex: initial;\n            flex: initial;\n  }\n\n  .lg\\:flex-none {\n    -webkit-box-flex: 0;\n        -ms-flex: none;\n            flex: none;\n  }\n\n  .lg\\:flex-grow {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1;\n  }\n\n  .lg\\:flex-shrink {\n    -ms-flex-negative: 1;\n        flex-shrink: 1;\n  }\n\n  .lg\\:flex-no-grow {\n    -webkit-box-flex: 0;\n        -ms-flex-positive: 0;\n            flex-grow: 0;\n  }\n\n  .lg\\:flex-no-shrink {\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n  }\n\n  .lg\\:float-right {\n    float: right;\n  }\n\n  .lg\\:float-left {\n    float: left;\n  }\n\n  .lg\\:float-none {\n    float: none;\n  }\n\n  .lg\\:clearfix:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  .lg\\:font-sans {\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue, -apple-system, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n  }\n\n  .lg\\:font-serif {\n    font-family: Constantia, Lucida Bright, Lucidabright, Lucida Serif, Lucida, DejaVu Serif, Bitstream Vera Serif, Liberation Serif, Georgia, serif;\n  }\n\n  .lg\\:font-mono {\n    font-family: Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;\n  }\n\n  .lg\\:font-hairline {\n    font-weight: 100;\n  }\n\n  .lg\\:font-thin {\n    font-weight: 200;\n  }\n\n  .lg\\:font-light {\n    font-weight: 300;\n  }\n\n  .lg\\:font-normal {\n    font-weight: 400;\n  }\n\n  .lg\\:font-medium {\n    font-weight: 500;\n  }\n\n  .lg\\:font-semibold {\n    font-weight: 600;\n  }\n\n  .lg\\:font-bold {\n    font-weight: 700;\n  }\n\n  .lg\\:font-extrabold {\n    font-weight: 800;\n  }\n\n  .lg\\:font-black {\n    font-weight: 900;\n  }\n\n  .lg\\:hover\\:font-hairline:hover {\n    font-weight: 100;\n  }\n\n  .lg\\:hover\\:font-thin:hover {\n    font-weight: 200;\n  }\n\n  .lg\\:hover\\:font-light:hover {\n    font-weight: 300;\n  }\n\n  .lg\\:hover\\:font-normal:hover {\n    font-weight: 400;\n  }\n\n  .lg\\:hover\\:font-medium:hover {\n    font-weight: 500;\n  }\n\n  .lg\\:hover\\:font-semibold:hover {\n    font-weight: 600;\n  }\n\n  .lg\\:hover\\:font-bold:hover {\n    font-weight: 700;\n  }\n\n  .lg\\:hover\\:font-extrabold:hover {\n    font-weight: 800;\n  }\n\n  .lg\\:hover\\:font-black:hover {\n    font-weight: 900;\n  }\n\n  .lg\\:focus\\:font-hairline:focus {\n    font-weight: 100;\n  }\n\n  .lg\\:focus\\:font-thin:focus {\n    font-weight: 200;\n  }\n\n  .lg\\:focus\\:font-light:focus {\n    font-weight: 300;\n  }\n\n  .lg\\:focus\\:font-normal:focus {\n    font-weight: 400;\n  }\n\n  .lg\\:focus\\:font-medium:focus {\n    font-weight: 500;\n  }\n\n  .lg\\:focus\\:font-semibold:focus {\n    font-weight: 600;\n  }\n\n  .lg\\:focus\\:font-bold:focus {\n    font-weight: 700;\n  }\n\n  .lg\\:focus\\:font-extrabold:focus {\n    font-weight: 800;\n  }\n\n  .lg\\:focus\\:font-black:focus {\n    font-weight: 900;\n  }\n\n  .lg\\:h-1 {\n    height: .25rem;\n  }\n\n  .lg\\:h-2 {\n    height: .5rem;\n  }\n\n  .lg\\:h-3 {\n    height: .75rem;\n  }\n\n  .lg\\:h-4 {\n    height: 1rem;\n  }\n\n  .lg\\:h-5 {\n    height: 1.25rem;\n  }\n\n  .lg\\:h-6 {\n    height: 1.5rem;\n  }\n\n  .lg\\:h-8 {\n    height: 2rem;\n  }\n\n  .lg\\:h-10 {\n    height: 2.5rem;\n  }\n\n  .lg\\:h-12 {\n    height: 3rem;\n  }\n\n  .lg\\:h-16 {\n    height: 4rem;\n  }\n\n  .lg\\:h-24 {\n    height: 6rem;\n  }\n\n  .lg\\:h-32 {\n    height: 8rem;\n  }\n\n  .lg\\:h-48 {\n    height: 12rem;\n  }\n\n  .lg\\:h-64 {\n    height: 16rem;\n  }\n\n  .lg\\:h-auto {\n    height: auto;\n  }\n\n  .lg\\:h-px {\n    height: 1px;\n  }\n\n  .lg\\:h-full {\n    height: 100%;\n  }\n\n  .lg\\:h-screen {\n    height: 100vh;\n  }\n\n  .lg\\:leading-none {\n    line-height: 1;\n  }\n\n  .lg\\:leading-tight {\n    line-height: 1.25;\n  }\n\n  .lg\\:leading-normal {\n    line-height: 1.5;\n  }\n\n  .lg\\:leading-loose {\n    line-height: 2;\n  }\n\n  .lg\\:m-0 {\n    margin: 0;\n  }\n\n  .lg\\:m-1 {\n    margin: .25rem;\n  }\n\n  .lg\\:m-2 {\n    margin: .5rem;\n  }\n\n  .lg\\:m-3 {\n    margin: .75rem;\n  }\n\n  .lg\\:m-4 {\n    margin: 1rem;\n  }\n\n  .lg\\:m-5 {\n    margin: 1.25rem;\n  }\n\n  .lg\\:m-6 {\n    margin: 1.5rem;\n  }\n\n  .lg\\:m-8 {\n    margin: 2rem;\n  }\n\n  .lg\\:m-10 {\n    margin: 2.5rem;\n  }\n\n  .lg\\:m-12 {\n    margin: 3rem;\n  }\n\n  .lg\\:m-16 {\n    margin: 4rem;\n  }\n\n  .lg\\:m-20 {\n    margin: 5rem;\n  }\n\n  .lg\\:m-24 {\n    margin: 6rem;\n  }\n\n  .lg\\:m-32 {\n    margin: 8rem;\n  }\n\n  .lg\\:m-auto {\n    margin: auto;\n  }\n\n  .lg\\:m-px {\n    margin: 1px;\n  }\n\n  .lg\\:my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .lg\\:mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .lg\\:my-1 {\n    margin-top: .25rem;\n    margin-bottom: .25rem;\n  }\n\n  .lg\\:mx-1 {\n    margin-left: .25rem;\n    margin-right: .25rem;\n  }\n\n  .lg\\:my-2 {\n    margin-top: .5rem;\n    margin-bottom: .5rem;\n  }\n\n  .lg\\:mx-2 {\n    margin-left: .5rem;\n    margin-right: .5rem;\n  }\n\n  .lg\\:my-3 {\n    margin-top: .75rem;\n    margin-bottom: .75rem;\n  }\n\n  .lg\\:mx-3 {\n    margin-left: .75rem;\n    margin-right: .75rem;\n  }\n\n  .lg\\:my-4 {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  .lg\\:mx-4 {\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n\n  .lg\\:my-5 {\n    margin-top: 1.25rem;\n    margin-bottom: 1.25rem;\n  }\n\n  .lg\\:mx-5 {\n    margin-left: 1.25rem;\n    margin-right: 1.25rem;\n  }\n\n  .lg\\:my-6 {\n    margin-top: 1.5rem;\n    margin-bottom: 1.5rem;\n  }\n\n  .lg\\:mx-6 {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  .lg\\:my-8 {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  .lg\\:mx-8 {\n    margin-left: 2rem;\n    margin-right: 2rem;\n  }\n\n  .lg\\:my-10 {\n    margin-top: 2.5rem;\n    margin-bottom: 2.5rem;\n  }\n\n  .lg\\:mx-10 {\n    margin-left: 2.5rem;\n    margin-right: 2.5rem;\n  }\n\n  .lg\\:my-12 {\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n  }\n\n  .lg\\:mx-12 {\n    margin-left: 3rem;\n    margin-right: 3rem;\n  }\n\n  .lg\\:my-16 {\n    margin-top: 4rem;\n    margin-bottom: 4rem;\n  }\n\n  .lg\\:mx-16 {\n    margin-left: 4rem;\n    margin-right: 4rem;\n  }\n\n  .lg\\:my-20 {\n    margin-top: 5rem;\n    margin-bottom: 5rem;\n  }\n\n  .lg\\:mx-20 {\n    margin-left: 5rem;\n    margin-right: 5rem;\n  }\n\n  .lg\\:my-24 {\n    margin-top: 6rem;\n    margin-bottom: 6rem;\n  }\n\n  .lg\\:mx-24 {\n    margin-left: 6rem;\n    margin-right: 6rem;\n  }\n\n  .lg\\:my-32 {\n    margin-top: 8rem;\n    margin-bottom: 8rem;\n  }\n\n  .lg\\:mx-32 {\n    margin-left: 8rem;\n    margin-right: 8rem;\n  }\n\n  .lg\\:my-auto {\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n\n  .lg\\:mx-auto {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .lg\\:my-px {\n    margin-top: 1px;\n    margin-bottom: 1px;\n  }\n\n  .lg\\:mx-px {\n    margin-left: 1px;\n    margin-right: 1px;\n  }\n\n  .lg\\:mt-0 {\n    margin-top: 0;\n  }\n\n  .lg\\:mr-0 {\n    margin-right: 0;\n  }\n\n  .lg\\:mb-0 {\n    margin-bottom: 0;\n  }\n\n  .lg\\:ml-0 {\n    margin-left: 0;\n  }\n\n  .lg\\:mt-1 {\n    margin-top: .25rem;\n  }\n\n  .lg\\:mr-1 {\n    margin-right: .25rem;\n  }\n\n  .lg\\:mb-1 {\n    margin-bottom: .25rem;\n  }\n\n  .lg\\:ml-1 {\n    margin-left: .25rem;\n  }\n\n  .lg\\:mt-2 {\n    margin-top: .5rem;\n  }\n\n  .lg\\:mr-2 {\n    margin-right: .5rem;\n  }\n\n  .lg\\:mb-2 {\n    margin-bottom: .5rem;\n  }\n\n  .lg\\:ml-2 {\n    margin-left: .5rem;\n  }\n\n  .lg\\:mt-3 {\n    margin-top: .75rem;\n  }\n\n  .lg\\:mr-3 {\n    margin-right: .75rem;\n  }\n\n  .lg\\:mb-3 {\n    margin-bottom: .75rem;\n  }\n\n  .lg\\:ml-3 {\n    margin-left: .75rem;\n  }\n\n  .lg\\:mt-4 {\n    margin-top: 1rem;\n  }\n\n  .lg\\:mr-4 {\n    margin-right: 1rem;\n  }\n\n  .lg\\:mb-4 {\n    margin-bottom: 1rem;\n  }\n\n  .lg\\:ml-4 {\n    margin-left: 1rem;\n  }\n\n  .lg\\:mt-5 {\n    margin-top: 1.25rem;\n  }\n\n  .lg\\:mr-5 {\n    margin-right: 1.25rem;\n  }\n\n  .lg\\:mb-5 {\n    margin-bottom: 1.25rem;\n  }\n\n  .lg\\:ml-5 {\n    margin-left: 1.25rem;\n  }\n\n  .lg\\:mt-6 {\n    margin-top: 1.5rem;\n  }\n\n  .lg\\:mr-6 {\n    margin-right: 1.5rem;\n  }\n\n  .lg\\:mb-6 {\n    margin-bottom: 1.5rem;\n  }\n\n  .lg\\:ml-6 {\n    margin-left: 1.5rem;\n  }\n\n  .lg\\:mt-8 {\n    margin-top: 2rem;\n  }\n\n  .lg\\:mr-8 {\n    margin-right: 2rem;\n  }\n\n  .lg\\:mb-8 {\n    margin-bottom: 2rem;\n  }\n\n  .lg\\:ml-8 {\n    margin-left: 2rem;\n  }\n\n  .lg\\:mt-10 {\n    margin-top: 2.5rem;\n  }\n\n  .lg\\:mr-10 {\n    margin-right: 2.5rem;\n  }\n\n  .lg\\:mb-10 {\n    margin-bottom: 2.5rem;\n  }\n\n  .lg\\:ml-10 {\n    margin-left: 2.5rem;\n  }\n\n  .lg\\:mt-12 {\n    margin-top: 3rem;\n  }\n\n  .lg\\:mr-12 {\n    margin-right: 3rem;\n  }\n\n  .lg\\:mb-12 {\n    margin-bottom: 3rem;\n  }\n\n  .lg\\:ml-12 {\n    margin-left: 3rem;\n  }\n\n  .lg\\:mt-16 {\n    margin-top: 4rem;\n  }\n\n  .lg\\:mr-16 {\n    margin-right: 4rem;\n  }\n\n  .lg\\:mb-16 {\n    margin-bottom: 4rem;\n  }\n\n  .lg\\:ml-16 {\n    margin-left: 4rem;\n  }\n\n  .lg\\:mt-20 {\n    margin-top: 5rem;\n  }\n\n  .lg\\:mr-20 {\n    margin-right: 5rem;\n  }\n\n  .lg\\:mb-20 {\n    margin-bottom: 5rem;\n  }\n\n  .lg\\:ml-20 {\n    margin-left: 5rem;\n  }\n\n  .lg\\:mt-24 {\n    margin-top: 6rem;\n  }\n\n  .lg\\:mr-24 {\n    margin-right: 6rem;\n  }\n\n  .lg\\:mb-24 {\n    margin-bottom: 6rem;\n  }\n\n  .lg\\:ml-24 {\n    margin-left: 6rem;\n  }\n\n  .lg\\:mt-32 {\n    margin-top: 8rem;\n  }\n\n  .lg\\:mr-32 {\n    margin-right: 8rem;\n  }\n\n  .lg\\:mb-32 {\n    margin-bottom: 8rem;\n  }\n\n  .lg\\:ml-32 {\n    margin-left: 8rem;\n  }\n\n  .lg\\:mt-auto {\n    margin-top: auto;\n  }\n\n  .lg\\:mr-auto {\n    margin-right: auto;\n  }\n\n  .lg\\:mb-auto {\n    margin-bottom: auto;\n  }\n\n  .lg\\:ml-auto {\n    margin-left: auto;\n  }\n\n  .lg\\:mt-px {\n    margin-top: 1px;\n  }\n\n  .lg\\:mr-px {\n    margin-right: 1px;\n  }\n\n  .lg\\:mb-px {\n    margin-bottom: 1px;\n  }\n\n  .lg\\:ml-px {\n    margin-left: 1px;\n  }\n\n  .lg\\:max-h-full {\n    max-height: 100%;\n  }\n\n  .lg\\:max-h-screen {\n    max-height: 100vh;\n  }\n\n  .lg\\:max-w-xs {\n    max-width: 20rem;\n  }\n\n  .lg\\:max-w-sm {\n    max-width: 30rem;\n  }\n\n  .lg\\:max-w-md {\n    max-width: 40rem;\n  }\n\n  .lg\\:max-w-lg {\n    max-width: 50rem;\n  }\n\n  .lg\\:max-w-xl {\n    max-width: 60rem;\n  }\n\n  .lg\\:max-w-2xl {\n    max-width: 70rem;\n  }\n\n  .lg\\:max-w-3xl {\n    max-width: 80rem;\n  }\n\n  .lg\\:max-w-4xl {\n    max-width: 90rem;\n  }\n\n  .lg\\:max-w-5xl {\n    max-width: 100rem;\n  }\n\n  .lg\\:max-w-full {\n    max-width: 100%;\n  }\n\n  .lg\\:min-h-0 {\n    min-height: 0;\n  }\n\n  .lg\\:min-h-full {\n    min-height: 100%;\n  }\n\n  .lg\\:min-h-screen {\n    min-height: 100vh;\n  }\n\n  .lg\\:min-w-0 {\n    min-width: 0;\n  }\n\n  .lg\\:min-w-full {\n    min-width: 100%;\n  }\n\n  .lg\\:-m-0 {\n    margin: 0;\n  }\n\n  .lg\\:-m-1 {\n    margin: -0.25rem;\n  }\n\n  .lg\\:-m-2 {\n    margin: -0.5rem;\n  }\n\n  .lg\\:-m-3 {\n    margin: -0.75rem;\n  }\n\n  .lg\\:-m-4 {\n    margin: -1rem;\n  }\n\n  .lg\\:-m-5 {\n    margin: -1.25rem;\n  }\n\n  .lg\\:-m-6 {\n    margin: -1.5rem;\n  }\n\n  .lg\\:-m-8 {\n    margin: -2rem;\n  }\n\n  .lg\\:-m-10 {\n    margin: -2.5rem;\n  }\n\n  .lg\\:-m-12 {\n    margin: -3rem;\n  }\n\n  .lg\\:-m-16 {\n    margin: -4rem;\n  }\n\n  .lg\\:-m-20 {\n    margin: -5rem;\n  }\n\n  .lg\\:-m-24 {\n    margin: -6rem;\n  }\n\n  .lg\\:-m-32 {\n    margin: -8rem;\n  }\n\n  .lg\\:-m-px {\n    margin: -1px;\n  }\n\n  .lg\\:-my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .lg\\:-mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .lg\\:-my-1 {\n    margin-top: -0.25rem;\n    margin-bottom: -0.25rem;\n  }\n\n  .lg\\:-mx-1 {\n    margin-left: -0.25rem;\n    margin-right: -0.25rem;\n  }\n\n  .lg\\:-my-2 {\n    margin-top: -0.5rem;\n    margin-bottom: -0.5rem;\n  }\n\n  .lg\\:-mx-2 {\n    margin-left: -0.5rem;\n    margin-right: -0.5rem;\n  }\n\n  .lg\\:-my-3 {\n    margin-top: -0.75rem;\n    margin-bottom: -0.75rem;\n  }\n\n  .lg\\:-mx-3 {\n    margin-left: -0.75rem;\n    margin-right: -0.75rem;\n  }\n\n  .lg\\:-my-4 {\n    margin-top: -1rem;\n    margin-bottom: -1rem;\n  }\n\n  .lg\\:-mx-4 {\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n\n  .lg\\:-my-5 {\n    margin-top: -1.25rem;\n    margin-bottom: -1.25rem;\n  }\n\n  .lg\\:-mx-5 {\n    margin-left: -1.25rem;\n    margin-right: -1.25rem;\n  }\n\n  .lg\\:-my-6 {\n    margin-top: -1.5rem;\n    margin-bottom: -1.5rem;\n  }\n\n  .lg\\:-mx-6 {\n    margin-left: -1.5rem;\n    margin-right: -1.5rem;\n  }\n\n  .lg\\:-my-8 {\n    margin-top: -2rem;\n    margin-bottom: -2rem;\n  }\n\n  .lg\\:-mx-8 {\n    margin-left: -2rem;\n    margin-right: -2rem;\n  }\n\n  .lg\\:-my-10 {\n    margin-top: -2.5rem;\n    margin-bottom: -2.5rem;\n  }\n\n  .lg\\:-mx-10 {\n    margin-left: -2.5rem;\n    margin-right: -2.5rem;\n  }\n\n  .lg\\:-my-12 {\n    margin-top: -3rem;\n    margin-bottom: -3rem;\n  }\n\n  .lg\\:-mx-12 {\n    margin-left: -3rem;\n    margin-right: -3rem;\n  }\n\n  .lg\\:-my-16 {\n    margin-top: -4rem;\n    margin-bottom: -4rem;\n  }\n\n  .lg\\:-mx-16 {\n    margin-left: -4rem;\n    margin-right: -4rem;\n  }\n\n  .lg\\:-my-20 {\n    margin-top: -5rem;\n    margin-bottom: -5rem;\n  }\n\n  .lg\\:-mx-20 {\n    margin-left: -5rem;\n    margin-right: -5rem;\n  }\n\n  .lg\\:-my-24 {\n    margin-top: -6rem;\n    margin-bottom: -6rem;\n  }\n\n  .lg\\:-mx-24 {\n    margin-left: -6rem;\n    margin-right: -6rem;\n  }\n\n  .lg\\:-my-32 {\n    margin-top: -8rem;\n    margin-bottom: -8rem;\n  }\n\n  .lg\\:-mx-32 {\n    margin-left: -8rem;\n    margin-right: -8rem;\n  }\n\n  .lg\\:-my-px {\n    margin-top: -1px;\n    margin-bottom: -1px;\n  }\n\n  .lg\\:-mx-px {\n    margin-left: -1px;\n    margin-right: -1px;\n  }\n\n  .lg\\:-mt-0 {\n    margin-top: 0;\n  }\n\n  .lg\\:-mr-0 {\n    margin-right: 0;\n  }\n\n  .lg\\:-mb-0 {\n    margin-bottom: 0;\n  }\n\n  .lg\\:-ml-0 {\n    margin-left: 0;\n  }\n\n  .lg\\:-mt-1 {\n    margin-top: -0.25rem;\n  }\n\n  .lg\\:-mr-1 {\n    margin-right: -0.25rem;\n  }\n\n  .lg\\:-mb-1 {\n    margin-bottom: -0.25rem;\n  }\n\n  .lg\\:-ml-1 {\n    margin-left: -0.25rem;\n  }\n\n  .lg\\:-mt-2 {\n    margin-top: -0.5rem;\n  }\n\n  .lg\\:-mr-2 {\n    margin-right: -0.5rem;\n  }\n\n  .lg\\:-mb-2 {\n    margin-bottom: -0.5rem;\n  }\n\n  .lg\\:-ml-2 {\n    margin-left: -0.5rem;\n  }\n\n  .lg\\:-mt-3 {\n    margin-top: -0.75rem;\n  }\n\n  .lg\\:-mr-3 {\n    margin-right: -0.75rem;\n  }\n\n  .lg\\:-mb-3 {\n    margin-bottom: -0.75rem;\n  }\n\n  .lg\\:-ml-3 {\n    margin-left: -0.75rem;\n  }\n\n  .lg\\:-mt-4 {\n    margin-top: -1rem;\n  }\n\n  .lg\\:-mr-4 {\n    margin-right: -1rem;\n  }\n\n  .lg\\:-mb-4 {\n    margin-bottom: -1rem;\n  }\n\n  .lg\\:-ml-4 {\n    margin-left: -1rem;\n  }\n\n  .lg\\:-mt-5 {\n    margin-top: -1.25rem;\n  }\n\n  .lg\\:-mr-5 {\n    margin-right: -1.25rem;\n  }\n\n  .lg\\:-mb-5 {\n    margin-bottom: -1.25rem;\n  }\n\n  .lg\\:-ml-5 {\n    margin-left: -1.25rem;\n  }\n\n  .lg\\:-mt-6 {\n    margin-top: -1.5rem;\n  }\n\n  .lg\\:-mr-6 {\n    margin-right: -1.5rem;\n  }\n\n  .lg\\:-mb-6 {\n    margin-bottom: -1.5rem;\n  }\n\n  .lg\\:-ml-6 {\n    margin-left: -1.5rem;\n  }\n\n  .lg\\:-mt-8 {\n    margin-top: -2rem;\n  }\n\n  .lg\\:-mr-8 {\n    margin-right: -2rem;\n  }\n\n  .lg\\:-mb-8 {\n    margin-bottom: -2rem;\n  }\n\n  .lg\\:-ml-8 {\n    margin-left: -2rem;\n  }\n\n  .lg\\:-mt-10 {\n    margin-top: -2.5rem;\n  }\n\n  .lg\\:-mr-10 {\n    margin-right: -2.5rem;\n  }\n\n  .lg\\:-mb-10 {\n    margin-bottom: -2.5rem;\n  }\n\n  .lg\\:-ml-10 {\n    margin-left: -2.5rem;\n  }\n\n  .lg\\:-mt-12 {\n    margin-top: -3rem;\n  }\n\n  .lg\\:-mr-12 {\n    margin-right: -3rem;\n  }\n\n  .lg\\:-mb-12 {\n    margin-bottom: -3rem;\n  }\n\n  .lg\\:-ml-12 {\n    margin-left: -3rem;\n  }\n\n  .lg\\:-mt-16 {\n    margin-top: -4rem;\n  }\n\n  .lg\\:-mr-16 {\n    margin-right: -4rem;\n  }\n\n  .lg\\:-mb-16 {\n    margin-bottom: -4rem;\n  }\n\n  .lg\\:-ml-16 {\n    margin-left: -4rem;\n  }\n\n  .lg\\:-mt-20 {\n    margin-top: -5rem;\n  }\n\n  .lg\\:-mr-20 {\n    margin-right: -5rem;\n  }\n\n  .lg\\:-mb-20 {\n    margin-bottom: -5rem;\n  }\n\n  .lg\\:-ml-20 {\n    margin-left: -5rem;\n  }\n\n  .lg\\:-mt-24 {\n    margin-top: -6rem;\n  }\n\n  .lg\\:-mr-24 {\n    margin-right: -6rem;\n  }\n\n  .lg\\:-mb-24 {\n    margin-bottom: -6rem;\n  }\n\n  .lg\\:-ml-24 {\n    margin-left: -6rem;\n  }\n\n  .lg\\:-mt-32 {\n    margin-top: -8rem;\n  }\n\n  .lg\\:-mr-32 {\n    margin-right: -8rem;\n  }\n\n  .lg\\:-mb-32 {\n    margin-bottom: -8rem;\n  }\n\n  .lg\\:-ml-32 {\n    margin-left: -8rem;\n  }\n\n  .lg\\:-mt-px {\n    margin-top: -1px;\n  }\n\n  .lg\\:-mr-px {\n    margin-right: -1px;\n  }\n\n  .lg\\:-mb-px {\n    margin-bottom: -1px;\n  }\n\n  .lg\\:-ml-px {\n    margin-left: -1px;\n  }\n\n  .lg\\:opacity-0 {\n    opacity: 0;\n  }\n\n  .lg\\:opacity-25 {\n    opacity: .25;\n  }\n\n  .lg\\:opacity-50 {\n    opacity: .5;\n  }\n\n  .lg\\:opacity-75 {\n    opacity: .75;\n  }\n\n  .lg\\:opacity-100 {\n    opacity: 1;\n  }\n\n  .lg\\:overflow-auto {\n    overflow: auto;\n  }\n\n  .lg\\:overflow-hidden {\n    overflow: hidden;\n  }\n\n  .lg\\:overflow-visible {\n    overflow: visible;\n  }\n\n  .lg\\:overflow-scroll {\n    overflow: scroll;\n  }\n\n  .lg\\:overflow-x-auto {\n    overflow-x: auto;\n  }\n\n  .lg\\:overflow-y-auto {\n    overflow-y: auto;\n  }\n\n  .lg\\:overflow-x-hidden {\n    overflow-x: hidden;\n  }\n\n  .lg\\:overflow-y-hidden {\n    overflow-y: hidden;\n  }\n\n  .lg\\:overflow-x-visible {\n    overflow-x: visible;\n  }\n\n  .lg\\:overflow-y-visible {\n    overflow-y: visible;\n  }\n\n  .lg\\:overflow-x-scroll {\n    overflow-x: scroll;\n  }\n\n  .lg\\:overflow-y-scroll {\n    overflow-y: scroll;\n  }\n\n  .lg\\:scrolling-touch {\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .lg\\:scrolling-auto {\n    -webkit-overflow-scrolling: auto;\n  }\n\n  .lg\\:p-0 {\n    padding: 0;\n  }\n\n  .lg\\:p-1 {\n    padding: .25rem;\n  }\n\n  .lg\\:p-2 {\n    padding: .5rem;\n  }\n\n  .lg\\:p-3 {\n    padding: .75rem;\n  }\n\n  .lg\\:p-4 {\n    padding: 1rem;\n  }\n\n  .lg\\:p-5 {\n    padding: 1.25rem;\n  }\n\n  .lg\\:p-6 {\n    padding: 1.5rem;\n  }\n\n  .lg\\:p-8 {\n    padding: 2rem;\n  }\n\n  .lg\\:p-10 {\n    padding: 2.5rem;\n  }\n\n  .lg\\:p-12 {\n    padding: 3rem;\n  }\n\n  .lg\\:p-16 {\n    padding: 4rem;\n  }\n\n  .lg\\:p-20 {\n    padding: 5rem;\n  }\n\n  .lg\\:p-24 {\n    padding: 6rem;\n  }\n\n  .lg\\:p-32 {\n    padding: 8rem;\n  }\n\n  .lg\\:p-px {\n    padding: 1px;\n  }\n\n  .lg\\:py-0 {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n\n  .lg\\:px-0 {\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  .lg\\:py-1 {\n    padding-top: .25rem;\n    padding-bottom: .25rem;\n  }\n\n  .lg\\:px-1 {\n    padding-left: .25rem;\n    padding-right: .25rem;\n  }\n\n  .lg\\:py-2 {\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n  }\n\n  .lg\\:px-2 {\n    padding-left: .5rem;\n    padding-right: .5rem;\n  }\n\n  .lg\\:py-3 {\n    padding-top: .75rem;\n    padding-bottom: .75rem;\n  }\n\n  .lg\\:px-3 {\n    padding-left: .75rem;\n    padding-right: .75rem;\n  }\n\n  .lg\\:py-4 {\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n\n  .lg\\:px-4 {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  .lg\\:py-5 {\n    padding-top: 1.25rem;\n    padding-bottom: 1.25rem;\n  }\n\n  .lg\\:px-5 {\n    padding-left: 1.25rem;\n    padding-right: 1.25rem;\n  }\n\n  .lg\\:py-6 {\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n  }\n\n  .lg\\:px-6 {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n\n  .lg\\:py-8 {\n    padding-top: 2rem;\n    padding-bottom: 2rem;\n  }\n\n  .lg\\:px-8 {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  .lg\\:py-10 {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n\n  .lg\\:px-10 {\n    padding-left: 2.5rem;\n    padding-right: 2.5rem;\n  }\n\n  .lg\\:py-12 {\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n  }\n\n  .lg\\:px-12 {\n    padding-left: 3rem;\n    padding-right: 3rem;\n  }\n\n  .lg\\:py-16 {\n    padding-top: 4rem;\n    padding-bottom: 4rem;\n  }\n\n  .lg\\:px-16 {\n    padding-left: 4rem;\n    padding-right: 4rem;\n  }\n\n  .lg\\:py-20 {\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n  }\n\n  .lg\\:px-20 {\n    padding-left: 5rem;\n    padding-right: 5rem;\n  }\n\n  .lg\\:py-24 {\n    padding-top: 6rem;\n    padding-bottom: 6rem;\n  }\n\n  .lg\\:px-24 {\n    padding-left: 6rem;\n    padding-right: 6rem;\n  }\n\n  .lg\\:py-32 {\n    padding-top: 8rem;\n    padding-bottom: 8rem;\n  }\n\n  .lg\\:px-32 {\n    padding-left: 8rem;\n    padding-right: 8rem;\n  }\n\n  .lg\\:py-px {\n    padding-top: 1px;\n    padding-bottom: 1px;\n  }\n\n  .lg\\:px-px {\n    padding-left: 1px;\n    padding-right: 1px;\n  }\n\n  .lg\\:pt-0 {\n    padding-top: 0;\n  }\n\n  .lg\\:pr-0 {\n    padding-right: 0;\n  }\n\n  .lg\\:pb-0 {\n    padding-bottom: 0;\n  }\n\n  .lg\\:pl-0 {\n    padding-left: 0;\n  }\n\n  .lg\\:pt-1 {\n    padding-top: .25rem;\n  }\n\n  .lg\\:pr-1 {\n    padding-right: .25rem;\n  }\n\n  .lg\\:pb-1 {\n    padding-bottom: .25rem;\n  }\n\n  .lg\\:pl-1 {\n    padding-left: .25rem;\n  }\n\n  .lg\\:pt-2 {\n    padding-top: .5rem;\n  }\n\n  .lg\\:pr-2 {\n    padding-right: .5rem;\n  }\n\n  .lg\\:pb-2 {\n    padding-bottom: .5rem;\n  }\n\n  .lg\\:pl-2 {\n    padding-left: .5rem;\n  }\n\n  .lg\\:pt-3 {\n    padding-top: .75rem;\n  }\n\n  .lg\\:pr-3 {\n    padding-right: .75rem;\n  }\n\n  .lg\\:pb-3 {\n    padding-bottom: .75rem;\n  }\n\n  .lg\\:pl-3 {\n    padding-left: .75rem;\n  }\n\n  .lg\\:pt-4 {\n    padding-top: 1rem;\n  }\n\n  .lg\\:pr-4 {\n    padding-right: 1rem;\n  }\n\n  .lg\\:pb-4 {\n    padding-bottom: 1rem;\n  }\n\n  .lg\\:pl-4 {\n    padding-left: 1rem;\n  }\n\n  .lg\\:pt-5 {\n    padding-top: 1.25rem;\n  }\n\n  .lg\\:pr-5 {\n    padding-right: 1.25rem;\n  }\n\n  .lg\\:pb-5 {\n    padding-bottom: 1.25rem;\n  }\n\n  .lg\\:pl-5 {\n    padding-left: 1.25rem;\n  }\n\n  .lg\\:pt-6 {\n    padding-top: 1.5rem;\n  }\n\n  .lg\\:pr-6 {\n    padding-right: 1.5rem;\n  }\n\n  .lg\\:pb-6 {\n    padding-bottom: 1.5rem;\n  }\n\n  .lg\\:pl-6 {\n    padding-left: 1.5rem;\n  }\n\n  .lg\\:pt-8 {\n    padding-top: 2rem;\n  }\n\n  .lg\\:pr-8 {\n    padding-right: 2rem;\n  }\n\n  .lg\\:pb-8 {\n    padding-bottom: 2rem;\n  }\n\n  .lg\\:pl-8 {\n    padding-left: 2rem;\n  }\n\n  .lg\\:pt-10 {\n    padding-top: 2.5rem;\n  }\n\n  .lg\\:pr-10 {\n    padding-right: 2.5rem;\n  }\n\n  .lg\\:pb-10 {\n    padding-bottom: 2.5rem;\n  }\n\n  .lg\\:pl-10 {\n    padding-left: 2.5rem;\n  }\n\n  .lg\\:pt-12 {\n    padding-top: 3rem;\n  }\n\n  .lg\\:pr-12 {\n    padding-right: 3rem;\n  }\n\n  .lg\\:pb-12 {\n    padding-bottom: 3rem;\n  }\n\n  .lg\\:pl-12 {\n    padding-left: 3rem;\n  }\n\n  .lg\\:pt-16 {\n    padding-top: 4rem;\n  }\n\n  .lg\\:pr-16 {\n    padding-right: 4rem;\n  }\n\n  .lg\\:pb-16 {\n    padding-bottom: 4rem;\n  }\n\n  .lg\\:pl-16 {\n    padding-left: 4rem;\n  }\n\n  .lg\\:pt-20 {\n    padding-top: 5rem;\n  }\n\n  .lg\\:pr-20 {\n    padding-right: 5rem;\n  }\n\n  .lg\\:pb-20 {\n    padding-bottom: 5rem;\n  }\n\n  .lg\\:pl-20 {\n    padding-left: 5rem;\n  }\n\n  .lg\\:pt-24 {\n    padding-top: 6rem;\n  }\n\n  .lg\\:pr-24 {\n    padding-right: 6rem;\n  }\n\n  .lg\\:pb-24 {\n    padding-bottom: 6rem;\n  }\n\n  .lg\\:pl-24 {\n    padding-left: 6rem;\n  }\n\n  .lg\\:pt-32 {\n    padding-top: 8rem;\n  }\n\n  .lg\\:pr-32 {\n    padding-right: 8rem;\n  }\n\n  .lg\\:pb-32 {\n    padding-bottom: 8rem;\n  }\n\n  .lg\\:pl-32 {\n    padding-left: 8rem;\n  }\n\n  .lg\\:pt-px {\n    padding-top: 1px;\n  }\n\n  .lg\\:pr-px {\n    padding-right: 1px;\n  }\n\n  .lg\\:pb-px {\n    padding-bottom: 1px;\n  }\n\n  .lg\\:pl-px {\n    padding-left: 1px;\n  }\n\n  .lg\\:pointer-events-none {\n    pointer-events: none;\n  }\n\n  .lg\\:pointer-events-auto {\n    pointer-events: auto;\n  }\n\n  .lg\\:static {\n    position: static;\n  }\n\n  .lg\\:fixed {\n    position: fixed;\n  }\n\n  .lg\\:absolute {\n    position: absolute;\n  }\n\n  .lg\\:relative {\n    position: relative;\n  }\n\n  .lg\\:sticky {\n    position: -webkit-sticky;\n    position: sticky;\n  }\n\n  .lg\\:pin-none {\n    top: auto;\n    right: auto;\n    bottom: auto;\n    left: auto;\n  }\n\n  .lg\\:pin {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  .lg\\:pin-y {\n    top: 0;\n    bottom: 0;\n  }\n\n  .lg\\:pin-x {\n    right: 0;\n    left: 0;\n  }\n\n  .lg\\:pin-t {\n    top: 0;\n  }\n\n  .lg\\:pin-r {\n    right: 0;\n  }\n\n  .lg\\:pin-b {\n    bottom: 0;\n  }\n\n  .lg\\:pin-l {\n    left: 0;\n  }\n\n  .lg\\:resize-none {\n    resize: none;\n  }\n\n  .lg\\:resize-y {\n    resize: vertical;\n  }\n\n  .lg\\:resize-x {\n    resize: horizontal;\n  }\n\n  .lg\\:resize {\n    resize: both;\n  }\n\n  .lg\\:shadow {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .lg\\:shadow-md {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .lg\\:shadow-lg {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .lg\\:shadow-inner {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .lg\\:shadow-outline {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .lg\\:shadow-none {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .lg\\:hover\\:shadow:hover {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .lg\\:hover\\:shadow-md:hover {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .lg\\:hover\\:shadow-lg:hover {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .lg\\:hover\\:shadow-inner:hover {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .lg\\:hover\\:shadow-outline:hover {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .lg\\:hover\\:shadow-none:hover {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .lg\\:focus\\:shadow:focus {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .lg\\:focus\\:shadow-md:focus {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .lg\\:focus\\:shadow-lg:focus {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .lg\\:focus\\:shadow-inner:focus {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .lg\\:focus\\:shadow-outline:focus {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .lg\\:focus\\:shadow-none:focus {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .lg\\:table-auto {\n    table-layout: auto;\n  }\n\n  .lg\\:table-fixed {\n    table-layout: fixed;\n  }\n\n  .lg\\:text-left {\n    text-align: left;\n  }\n\n  .lg\\:text-center {\n    text-align: center;\n  }\n\n  .lg\\:text-right {\n    text-align: right;\n  }\n\n  .lg\\:text-justify {\n    text-align: justify;\n  }\n\n  .lg\\:text-transparent {\n    color: transparent;\n  }\n\n  .lg\\:text-black {\n    color: #22292f;\n  }\n\n  .lg\\:text-grey-darkest {\n    color: #3d4852;\n  }\n\n  .lg\\:text-grey-darker {\n    color: #606f7b;\n  }\n\n  .lg\\:text-grey-dark {\n    color: #8795a1;\n  }\n\n  .lg\\:text-grey {\n    color: #b8c2cc;\n  }\n\n  .lg\\:text-grey-light {\n    color: #dae1e7;\n  }\n\n  .lg\\:text-grey-lighter {\n    color: #f1f5f8;\n  }\n\n  .lg\\:text-grey-lightest {\n    color: #f8fafc;\n  }\n\n  .lg\\:text-white {\n    color: #fff;\n  }\n\n  .lg\\:text-red-darkest {\n    color: #3b0d0c;\n  }\n\n  .lg\\:text-red-darker {\n    color: #621b18;\n  }\n\n  .lg\\:text-red-dark {\n    color: #cc1f1a;\n  }\n\n  .lg\\:text-red {\n    color: #e3342f;\n  }\n\n  .lg\\:text-red-light {\n    color: #ef5753;\n  }\n\n  .lg\\:text-red-lighter {\n    color: #f9acaa;\n  }\n\n  .lg\\:text-red-lightest {\n    color: #fcebea;\n  }\n\n  .lg\\:text-orange-darkest {\n    color: #462a16;\n  }\n\n  .lg\\:text-orange-darker {\n    color: #613b1f;\n  }\n\n  .lg\\:text-orange-dark {\n    color: #de751f;\n  }\n\n  .lg\\:text-orange {\n    color: #f6993f;\n  }\n\n  .lg\\:text-orange-light {\n    color: #faad63;\n  }\n\n  .lg\\:text-orange-lighter {\n    color: #fcd9b6;\n  }\n\n  .lg\\:text-orange-lightest {\n    color: #fff5eb;\n  }\n\n  .lg\\:text-yellow-darkest {\n    color: #453411;\n  }\n\n  .lg\\:text-yellow-darker {\n    color: #684f1d;\n  }\n\n  .lg\\:text-yellow-dark {\n    color: #f2d024;\n  }\n\n  .lg\\:text-yellow {\n    color: #ffed4a;\n  }\n\n  .lg\\:text-yellow-light {\n    color: #fff382;\n  }\n\n  .lg\\:text-yellow-lighter {\n    color: #fff9c2;\n  }\n\n  .lg\\:text-yellow-lightest {\n    color: #fcfbeb;\n  }\n\n  .lg\\:text-green-darkest {\n    color: #0f2f21;\n  }\n\n  .lg\\:text-green-darker {\n    color: #1a4731;\n  }\n\n  .lg\\:text-green-dark {\n    color: #1f9d55;\n  }\n\n  .lg\\:text-green {\n    color: #38c172;\n  }\n\n  .lg\\:text-green-light {\n    color: #51d88a;\n  }\n\n  .lg\\:text-green-lighter {\n    color: #a2f5bf;\n  }\n\n  .lg\\:text-green-lightest {\n    color: #e3fcec;\n  }\n\n  .lg\\:text-teal-darkest {\n    color: #0d3331;\n  }\n\n  .lg\\:text-teal-darker {\n    color: #20504f;\n  }\n\n  .lg\\:text-teal-dark {\n    color: #38a89d;\n  }\n\n  .lg\\:text-teal {\n    color: #4dc0b5;\n  }\n\n  .lg\\:text-teal-light {\n    color: #64d5ca;\n  }\n\n  .lg\\:text-teal-lighter {\n    color: #a0f0ed;\n  }\n\n  .lg\\:text-teal-lightest {\n    color: #e8fffe;\n  }\n\n  .lg\\:text-blue-darkest {\n    color: #12283a;\n  }\n\n  .lg\\:text-blue-darker {\n    color: #1c3d5a;\n  }\n\n  .lg\\:text-blue-dark {\n    color: #2779bd;\n  }\n\n  .lg\\:text-blue {\n    color: #3490dc;\n  }\n\n  .lg\\:text-blue-light {\n    color: #6cb2eb;\n  }\n\n  .lg\\:text-blue-lighter {\n    color: #bcdefa;\n  }\n\n  .lg\\:text-blue-lightest {\n    color: #eff8ff;\n  }\n\n  .lg\\:text-indigo-darkest {\n    color: #191e38;\n  }\n\n  .lg\\:text-indigo-darker {\n    color: #2f365f;\n  }\n\n  .lg\\:text-indigo-dark {\n    color: #5661b3;\n  }\n\n  .lg\\:text-indigo {\n    color: #6574cd;\n  }\n\n  .lg\\:text-indigo-light {\n    color: #7886d7;\n  }\n\n  .lg\\:text-indigo-lighter {\n    color: #b2b7ff;\n  }\n\n  .lg\\:text-indigo-lightest {\n    color: #e6e8ff;\n  }\n\n  .lg\\:text-purple-darkest {\n    color: #21183c;\n  }\n\n  .lg\\:text-purple-darker {\n    color: #382b5f;\n  }\n\n  .lg\\:text-purple-dark {\n    color: #794acf;\n  }\n\n  .lg\\:text-purple {\n    color: #9561e2;\n  }\n\n  .lg\\:text-purple-light {\n    color: #a779e9;\n  }\n\n  .lg\\:text-purple-lighter {\n    color: #d6bbfc;\n  }\n\n  .lg\\:text-purple-lightest {\n    color: #f3ebff;\n  }\n\n  .lg\\:text-pink-darkest {\n    color: #451225;\n  }\n\n  .lg\\:text-pink-darker {\n    color: #6f213f;\n  }\n\n  .lg\\:text-pink-dark {\n    color: #eb5286;\n  }\n\n  .lg\\:text-pink {\n    color: #f66d9b;\n  }\n\n  .lg\\:text-pink-light {\n    color: #fa7ea8;\n  }\n\n  .lg\\:text-pink-lighter {\n    color: #ffbbca;\n  }\n\n  .lg\\:text-pink-lightest {\n    color: #ffebef;\n  }\n\n  .lg\\:hover\\:text-transparent:hover {\n    color: transparent;\n  }\n\n  .lg\\:hover\\:text-black:hover {\n    color: #22292f;\n  }\n\n  .lg\\:hover\\:text-grey-darkest:hover {\n    color: #3d4852;\n  }\n\n  .lg\\:hover\\:text-grey-darker:hover {\n    color: #606f7b;\n  }\n\n  .lg\\:hover\\:text-grey-dark:hover {\n    color: #8795a1;\n  }\n\n  .lg\\:hover\\:text-grey:hover {\n    color: #b8c2cc;\n  }\n\n  .lg\\:hover\\:text-grey-light:hover {\n    color: #dae1e7;\n  }\n\n  .lg\\:hover\\:text-grey-lighter:hover {\n    color: #f1f5f8;\n  }\n\n  .lg\\:hover\\:text-grey-lightest:hover {\n    color: #f8fafc;\n  }\n\n  .lg\\:hover\\:text-white:hover {\n    color: #fff;\n  }\n\n  .lg\\:hover\\:text-red-darkest:hover {\n    color: #3b0d0c;\n  }\n\n  .lg\\:hover\\:text-red-darker:hover {\n    color: #621b18;\n  }\n\n  .lg\\:hover\\:text-red-dark:hover {\n    color: #cc1f1a;\n  }\n\n  .lg\\:hover\\:text-red:hover {\n    color: #e3342f;\n  }\n\n  .lg\\:hover\\:text-red-light:hover {\n    color: #ef5753;\n  }\n\n  .lg\\:hover\\:text-red-lighter:hover {\n    color: #f9acaa;\n  }\n\n  .lg\\:hover\\:text-red-lightest:hover {\n    color: #fcebea;\n  }\n\n  .lg\\:hover\\:text-orange-darkest:hover {\n    color: #462a16;\n  }\n\n  .lg\\:hover\\:text-orange-darker:hover {\n    color: #613b1f;\n  }\n\n  .lg\\:hover\\:text-orange-dark:hover {\n    color: #de751f;\n  }\n\n  .lg\\:hover\\:text-orange:hover {\n    color: #f6993f;\n  }\n\n  .lg\\:hover\\:text-orange-light:hover {\n    color: #faad63;\n  }\n\n  .lg\\:hover\\:text-orange-lighter:hover {\n    color: #fcd9b6;\n  }\n\n  .lg\\:hover\\:text-orange-lightest:hover {\n    color: #fff5eb;\n  }\n\n  .lg\\:hover\\:text-yellow-darkest:hover {\n    color: #453411;\n  }\n\n  .lg\\:hover\\:text-yellow-darker:hover {\n    color: #684f1d;\n  }\n\n  .lg\\:hover\\:text-yellow-dark:hover {\n    color: #f2d024;\n  }\n\n  .lg\\:hover\\:text-yellow:hover {\n    color: #ffed4a;\n  }\n\n  .lg\\:hover\\:text-yellow-light:hover {\n    color: #fff382;\n  }\n\n  .lg\\:hover\\:text-yellow-lighter:hover {\n    color: #fff9c2;\n  }\n\n  .lg\\:hover\\:text-yellow-lightest:hover {\n    color: #fcfbeb;\n  }\n\n  .lg\\:hover\\:text-green-darkest:hover {\n    color: #0f2f21;\n  }\n\n  .lg\\:hover\\:text-green-darker:hover {\n    color: #1a4731;\n  }\n\n  .lg\\:hover\\:text-green-dark:hover {\n    color: #1f9d55;\n  }\n\n  .lg\\:hover\\:text-green:hover {\n    color: #38c172;\n  }\n\n  .lg\\:hover\\:text-green-light:hover {\n    color: #51d88a;\n  }\n\n  .lg\\:hover\\:text-green-lighter:hover {\n    color: #a2f5bf;\n  }\n\n  .lg\\:hover\\:text-green-lightest:hover {\n    color: #e3fcec;\n  }\n\n  .lg\\:hover\\:text-teal-darkest:hover {\n    color: #0d3331;\n  }\n\n  .lg\\:hover\\:text-teal-darker:hover {\n    color: #20504f;\n  }\n\n  .lg\\:hover\\:text-teal-dark:hover {\n    color: #38a89d;\n  }\n\n  .lg\\:hover\\:text-teal:hover {\n    color: #4dc0b5;\n  }\n\n  .lg\\:hover\\:text-teal-light:hover {\n    color: #64d5ca;\n  }\n\n  .lg\\:hover\\:text-teal-lighter:hover {\n    color: #a0f0ed;\n  }\n\n  .lg\\:hover\\:text-teal-lightest:hover {\n    color: #e8fffe;\n  }\n\n  .lg\\:hover\\:text-blue-darkest:hover {\n    color: #12283a;\n  }\n\n  .lg\\:hover\\:text-blue-darker:hover {\n    color: #1c3d5a;\n  }\n\n  .lg\\:hover\\:text-blue-dark:hover {\n    color: #2779bd;\n  }\n\n  .lg\\:hover\\:text-blue:hover {\n    color: #3490dc;\n  }\n\n  .lg\\:hover\\:text-blue-light:hover {\n    color: #6cb2eb;\n  }\n\n  .lg\\:hover\\:text-blue-lighter:hover {\n    color: #bcdefa;\n  }\n\n  .lg\\:hover\\:text-blue-lightest:hover {\n    color: #eff8ff;\n  }\n\n  .lg\\:hover\\:text-indigo-darkest:hover {\n    color: #191e38;\n  }\n\n  .lg\\:hover\\:text-indigo-darker:hover {\n    color: #2f365f;\n  }\n\n  .lg\\:hover\\:text-indigo-dark:hover {\n    color: #5661b3;\n  }\n\n  .lg\\:hover\\:text-indigo:hover {\n    color: #6574cd;\n  }\n\n  .lg\\:hover\\:text-indigo-light:hover {\n    color: #7886d7;\n  }\n\n  .lg\\:hover\\:text-indigo-lighter:hover {\n    color: #b2b7ff;\n  }\n\n  .lg\\:hover\\:text-indigo-lightest:hover {\n    color: #e6e8ff;\n  }\n\n  .lg\\:hover\\:text-purple-darkest:hover {\n    color: #21183c;\n  }\n\n  .lg\\:hover\\:text-purple-darker:hover {\n    color: #382b5f;\n  }\n\n  .lg\\:hover\\:text-purple-dark:hover {\n    color: #794acf;\n  }\n\n  .lg\\:hover\\:text-purple:hover {\n    color: #9561e2;\n  }\n\n  .lg\\:hover\\:text-purple-light:hover {\n    color: #a779e9;\n  }\n\n  .lg\\:hover\\:text-purple-lighter:hover {\n    color: #d6bbfc;\n  }\n\n  .lg\\:hover\\:text-purple-lightest:hover {\n    color: #f3ebff;\n  }\n\n  .lg\\:hover\\:text-pink-darkest:hover {\n    color: #451225;\n  }\n\n  .lg\\:hover\\:text-pink-darker:hover {\n    color: #6f213f;\n  }\n\n  .lg\\:hover\\:text-pink-dark:hover {\n    color: #eb5286;\n  }\n\n  .lg\\:hover\\:text-pink:hover {\n    color: #f66d9b;\n  }\n\n  .lg\\:hover\\:text-pink-light:hover {\n    color: #fa7ea8;\n  }\n\n  .lg\\:hover\\:text-pink-lighter:hover {\n    color: #ffbbca;\n  }\n\n  .lg\\:hover\\:text-pink-lightest:hover {\n    color: #ffebef;\n  }\n\n  .lg\\:focus\\:text-transparent:focus {\n    color: transparent;\n  }\n\n  .lg\\:focus\\:text-black:focus {\n    color: #22292f;\n  }\n\n  .lg\\:focus\\:text-grey-darkest:focus {\n    color: #3d4852;\n  }\n\n  .lg\\:focus\\:text-grey-darker:focus {\n    color: #606f7b;\n  }\n\n  .lg\\:focus\\:text-grey-dark:focus {\n    color: #8795a1;\n  }\n\n  .lg\\:focus\\:text-grey:focus {\n    color: #b8c2cc;\n  }\n\n  .lg\\:focus\\:text-grey-light:focus {\n    color: #dae1e7;\n  }\n\n  .lg\\:focus\\:text-grey-lighter:focus {\n    color: #f1f5f8;\n  }\n\n  .lg\\:focus\\:text-grey-lightest:focus {\n    color: #f8fafc;\n  }\n\n  .lg\\:focus\\:text-white:focus {\n    color: #fff;\n  }\n\n  .lg\\:focus\\:text-red-darkest:focus {\n    color: #3b0d0c;\n  }\n\n  .lg\\:focus\\:text-red-darker:focus {\n    color: #621b18;\n  }\n\n  .lg\\:focus\\:text-red-dark:focus {\n    color: #cc1f1a;\n  }\n\n  .lg\\:focus\\:text-red:focus {\n    color: #e3342f;\n  }\n\n  .lg\\:focus\\:text-red-light:focus {\n    color: #ef5753;\n  }\n\n  .lg\\:focus\\:text-red-lighter:focus {\n    color: #f9acaa;\n  }\n\n  .lg\\:focus\\:text-red-lightest:focus {\n    color: #fcebea;\n  }\n\n  .lg\\:focus\\:text-orange-darkest:focus {\n    color: #462a16;\n  }\n\n  .lg\\:focus\\:text-orange-darker:focus {\n    color: #613b1f;\n  }\n\n  .lg\\:focus\\:text-orange-dark:focus {\n    color: #de751f;\n  }\n\n  .lg\\:focus\\:text-orange:focus {\n    color: #f6993f;\n  }\n\n  .lg\\:focus\\:text-orange-light:focus {\n    color: #faad63;\n  }\n\n  .lg\\:focus\\:text-orange-lighter:focus {\n    color: #fcd9b6;\n  }\n\n  .lg\\:focus\\:text-orange-lightest:focus {\n    color: #fff5eb;\n  }\n\n  .lg\\:focus\\:text-yellow-darkest:focus {\n    color: #453411;\n  }\n\n  .lg\\:focus\\:text-yellow-darker:focus {\n    color: #684f1d;\n  }\n\n  .lg\\:focus\\:text-yellow-dark:focus {\n    color: #f2d024;\n  }\n\n  .lg\\:focus\\:text-yellow:focus {\n    color: #ffed4a;\n  }\n\n  .lg\\:focus\\:text-yellow-light:focus {\n    color: #fff382;\n  }\n\n  .lg\\:focus\\:text-yellow-lighter:focus {\n    color: #fff9c2;\n  }\n\n  .lg\\:focus\\:text-yellow-lightest:focus {\n    color: #fcfbeb;\n  }\n\n  .lg\\:focus\\:text-green-darkest:focus {\n    color: #0f2f21;\n  }\n\n  .lg\\:focus\\:text-green-darker:focus {\n    color: #1a4731;\n  }\n\n  .lg\\:focus\\:text-green-dark:focus {\n    color: #1f9d55;\n  }\n\n  .lg\\:focus\\:text-green:focus {\n    color: #38c172;\n  }\n\n  .lg\\:focus\\:text-green-light:focus {\n    color: #51d88a;\n  }\n\n  .lg\\:focus\\:text-green-lighter:focus {\n    color: #a2f5bf;\n  }\n\n  .lg\\:focus\\:text-green-lightest:focus {\n    color: #e3fcec;\n  }\n\n  .lg\\:focus\\:text-teal-darkest:focus {\n    color: #0d3331;\n  }\n\n  .lg\\:focus\\:text-teal-darker:focus {\n    color: #20504f;\n  }\n\n  .lg\\:focus\\:text-teal-dark:focus {\n    color: #38a89d;\n  }\n\n  .lg\\:focus\\:text-teal:focus {\n    color: #4dc0b5;\n  }\n\n  .lg\\:focus\\:text-teal-light:focus {\n    color: #64d5ca;\n  }\n\n  .lg\\:focus\\:text-teal-lighter:focus {\n    color: #a0f0ed;\n  }\n\n  .lg\\:focus\\:text-teal-lightest:focus {\n    color: #e8fffe;\n  }\n\n  .lg\\:focus\\:text-blue-darkest:focus {\n    color: #12283a;\n  }\n\n  .lg\\:focus\\:text-blue-darker:focus {\n    color: #1c3d5a;\n  }\n\n  .lg\\:focus\\:text-blue-dark:focus {\n    color: #2779bd;\n  }\n\n  .lg\\:focus\\:text-blue:focus {\n    color: #3490dc;\n  }\n\n  .lg\\:focus\\:text-blue-light:focus {\n    color: #6cb2eb;\n  }\n\n  .lg\\:focus\\:text-blue-lighter:focus {\n    color: #bcdefa;\n  }\n\n  .lg\\:focus\\:text-blue-lightest:focus {\n    color: #eff8ff;\n  }\n\n  .lg\\:focus\\:text-indigo-darkest:focus {\n    color: #191e38;\n  }\n\n  .lg\\:focus\\:text-indigo-darker:focus {\n    color: #2f365f;\n  }\n\n  .lg\\:focus\\:text-indigo-dark:focus {\n    color: #5661b3;\n  }\n\n  .lg\\:focus\\:text-indigo:focus {\n    color: #6574cd;\n  }\n\n  .lg\\:focus\\:text-indigo-light:focus {\n    color: #7886d7;\n  }\n\n  .lg\\:focus\\:text-indigo-lighter:focus {\n    color: #b2b7ff;\n  }\n\n  .lg\\:focus\\:text-indigo-lightest:focus {\n    color: #e6e8ff;\n  }\n\n  .lg\\:focus\\:text-purple-darkest:focus {\n    color: #21183c;\n  }\n\n  .lg\\:focus\\:text-purple-darker:focus {\n    color: #382b5f;\n  }\n\n  .lg\\:focus\\:text-purple-dark:focus {\n    color: #794acf;\n  }\n\n  .lg\\:focus\\:text-purple:focus {\n    color: #9561e2;\n  }\n\n  .lg\\:focus\\:text-purple-light:focus {\n    color: #a779e9;\n  }\n\n  .lg\\:focus\\:text-purple-lighter:focus {\n    color: #d6bbfc;\n  }\n\n  .lg\\:focus\\:text-purple-lightest:focus {\n    color: #f3ebff;\n  }\n\n  .lg\\:focus\\:text-pink-darkest:focus {\n    color: #451225;\n  }\n\n  .lg\\:focus\\:text-pink-darker:focus {\n    color: #6f213f;\n  }\n\n  .lg\\:focus\\:text-pink-dark:focus {\n    color: #eb5286;\n  }\n\n  .lg\\:focus\\:text-pink:focus {\n    color: #f66d9b;\n  }\n\n  .lg\\:focus\\:text-pink-light:focus {\n    color: #fa7ea8;\n  }\n\n  .lg\\:focus\\:text-pink-lighter:focus {\n    color: #ffbbca;\n  }\n\n  .lg\\:focus\\:text-pink-lightest:focus {\n    color: #ffebef;\n  }\n\n  .lg\\:text-xs {\n    font-size: .75rem;\n  }\n\n  .lg\\:text-sm {\n    font-size: .875rem;\n  }\n\n  .lg\\:text-base {\n    font-size: 1rem;\n  }\n\n  .lg\\:text-lg {\n    font-size: 1.125rem;\n  }\n\n  .lg\\:text-xl {\n    font-size: 1.25rem;\n  }\n\n  .lg\\:text-2xl {\n    font-size: 1.5rem;\n  }\n\n  .lg\\:text-3xl {\n    font-size: 1.875rem;\n  }\n\n  .lg\\:text-4xl {\n    font-size: 2.25rem;\n  }\n\n  .lg\\:text-5xl {\n    font-size: 3rem;\n  }\n\n  .lg\\:italic {\n    font-style: italic;\n  }\n\n  .lg\\:roman {\n    font-style: normal;\n  }\n\n  .lg\\:uppercase {\n    text-transform: uppercase;\n  }\n\n  .lg\\:lowercase {\n    text-transform: lowercase;\n  }\n\n  .lg\\:capitalize {\n    text-transform: capitalize;\n  }\n\n  .lg\\:normal-case {\n    text-transform: none;\n  }\n\n  .lg\\:underline {\n    text-decoration: underline;\n  }\n\n  .lg\\:line-through {\n    text-decoration: line-through;\n  }\n\n  .lg\\:no-underline {\n    text-decoration: none;\n  }\n\n  .lg\\:antialiased {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .lg\\:subpixel-antialiased {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .lg\\:hover\\:italic:hover {\n    font-style: italic;\n  }\n\n  .lg\\:hover\\:roman:hover {\n    font-style: normal;\n  }\n\n  .lg\\:hover\\:uppercase:hover {\n    text-transform: uppercase;\n  }\n\n  .lg\\:hover\\:lowercase:hover {\n    text-transform: lowercase;\n  }\n\n  .lg\\:hover\\:capitalize:hover {\n    text-transform: capitalize;\n  }\n\n  .lg\\:hover\\:normal-case:hover {\n    text-transform: none;\n  }\n\n  .lg\\:hover\\:underline:hover {\n    text-decoration: underline;\n  }\n\n  .lg\\:hover\\:line-through:hover {\n    text-decoration: line-through;\n  }\n\n  .lg\\:hover\\:no-underline:hover {\n    text-decoration: none;\n  }\n\n  .lg\\:hover\\:antialiased:hover {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .lg\\:hover\\:subpixel-antialiased:hover {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .lg\\:focus\\:italic:focus {\n    font-style: italic;\n  }\n\n  .lg\\:focus\\:roman:focus {\n    font-style: normal;\n  }\n\n  .lg\\:focus\\:uppercase:focus {\n    text-transform: uppercase;\n  }\n\n  .lg\\:focus\\:lowercase:focus {\n    text-transform: lowercase;\n  }\n\n  .lg\\:focus\\:capitalize:focus {\n    text-transform: capitalize;\n  }\n\n  .lg\\:focus\\:normal-case:focus {\n    text-transform: none;\n  }\n\n  .lg\\:focus\\:underline:focus {\n    text-decoration: underline;\n  }\n\n  .lg\\:focus\\:line-through:focus {\n    text-decoration: line-through;\n  }\n\n  .lg\\:focus\\:no-underline:focus {\n    text-decoration: none;\n  }\n\n  .lg\\:focus\\:antialiased:focus {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .lg\\:focus\\:subpixel-antialiased:focus {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .lg\\:tracking-tight {\n    letter-spacing: -0.05em;\n  }\n\n  .lg\\:tracking-normal {\n    letter-spacing: 0;\n  }\n\n  .lg\\:tracking-wide {\n    letter-spacing: .05em;\n  }\n\n  .lg\\:select-none {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n  }\n\n  .lg\\:select-text {\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n  }\n\n  .lg\\:align-baseline {\n    vertical-align: baseline;\n  }\n\n  .lg\\:align-top {\n    vertical-align: top;\n  }\n\n  .lg\\:align-middle {\n    vertical-align: middle;\n  }\n\n  .lg\\:align-bottom {\n    vertical-align: bottom;\n  }\n\n  .lg\\:align-text-top {\n    vertical-align: text-top;\n  }\n\n  .lg\\:align-text-bottom {\n    vertical-align: text-bottom;\n  }\n\n  .lg\\:visible {\n    visibility: visible;\n  }\n\n  .lg\\:invisible {\n    visibility: hidden;\n  }\n\n  .lg\\:whitespace-normal {\n    white-space: normal;\n  }\n\n  .lg\\:whitespace-no-wrap {\n    white-space: nowrap;\n  }\n\n  .lg\\:whitespace-pre {\n    white-space: pre;\n  }\n\n  .lg\\:whitespace-pre-line {\n    white-space: pre-line;\n  }\n\n  .lg\\:whitespace-pre-wrap {\n    white-space: pre-wrap;\n  }\n\n  .lg\\:break-words {\n    word-wrap: break-word;\n  }\n\n  .lg\\:break-normal {\n    word-wrap: normal;\n  }\n\n  .lg\\:truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .lg\\:w-1 {\n    width: .25rem;\n  }\n\n  .lg\\:w-2 {\n    width: .5rem;\n  }\n\n  .lg\\:w-3 {\n    width: .75rem;\n  }\n\n  .lg\\:w-4 {\n    width: 1rem;\n  }\n\n  .lg\\:w-5 {\n    width: 1.25rem;\n  }\n\n  .lg\\:w-6 {\n    width: 1.5rem;\n  }\n\n  .lg\\:w-8 {\n    width: 2rem;\n  }\n\n  .lg\\:w-10 {\n    width: 2.5rem;\n  }\n\n  .lg\\:w-12 {\n    width: 3rem;\n  }\n\n  .lg\\:w-16 {\n    width: 4rem;\n  }\n\n  .lg\\:w-24 {\n    width: 6rem;\n  }\n\n  .lg\\:w-32 {\n    width: 8rem;\n  }\n\n  .lg\\:w-48 {\n    width: 12rem;\n  }\n\n  .lg\\:w-64 {\n    width: 16rem;\n  }\n\n  .lg\\:w-auto {\n    width: auto;\n  }\n\n  .lg\\:w-px {\n    width: 1px;\n  }\n\n  .lg\\:w-1\\/2 {\n    width: 50%;\n  }\n\n  .lg\\:w-1\\/3 {\n    width: 33.33333%;\n  }\n\n  .lg\\:w-2\\/3 {\n    width: 66.66667%;\n  }\n\n  .lg\\:w-1\\/4 {\n    width: 25%;\n  }\n\n  .lg\\:w-3\\/4 {\n    width: 75%;\n  }\n\n  .lg\\:w-1\\/5 {\n    width: 20%;\n  }\n\n  .lg\\:w-2\\/5 {\n    width: 40%;\n  }\n\n  .lg\\:w-3\\/5 {\n    width: 60%;\n  }\n\n  .lg\\:w-4\\/5 {\n    width: 80%;\n  }\n\n  .lg\\:w-1\\/6 {\n    width: 16.66667%;\n  }\n\n  .lg\\:w-5\\/6 {\n    width: 83.33333%;\n  }\n\n  .lg\\:w-full {\n    width: 100%;\n  }\n\n  .lg\\:w-screen {\n    width: 100vw;\n  }\n\n  .lg\\:z-0 {\n    z-index: 0;\n  }\n\n  .lg\\:z-10 {\n    z-index: 10;\n  }\n\n  .lg\\:z-20 {\n    z-index: 20;\n  }\n\n  .lg\\:z-30 {\n    z-index: 30;\n  }\n\n  .lg\\:z-40 {\n    z-index: 40;\n  }\n\n  .lg\\:z-50 {\n    z-index: 50;\n  }\n\n  .lg\\:z-auto {\n    z-index: auto;\n  }\n}\n\n@media (min-width: 1200px) {\n  .xl\\:list-reset {\n    list-style: none;\n    padding: 0;\n  }\n\n  .xl\\:appearance-none {\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n  }\n\n  .xl\\:bg-fixed {\n    background-attachment: fixed;\n  }\n\n  .xl\\:bg-local {\n    background-attachment: local;\n  }\n\n  .xl\\:bg-scroll {\n    background-attachment: scroll;\n  }\n\n  .xl\\:bg-transparent {\n    background-color: transparent;\n  }\n\n  .xl\\:bg-black {\n    background-color: #22292f;\n  }\n\n  .xl\\:bg-grey-darkest {\n    background-color: #3d4852;\n  }\n\n  .xl\\:bg-grey-darker {\n    background-color: #606f7b;\n  }\n\n  .xl\\:bg-grey-dark {\n    background-color: #8795a1;\n  }\n\n  .xl\\:bg-grey {\n    background-color: #b8c2cc;\n  }\n\n  .xl\\:bg-grey-light {\n    background-color: #dae1e7;\n  }\n\n  .xl\\:bg-grey-lighter {\n    background-color: #f1f5f8;\n  }\n\n  .xl\\:bg-grey-lightest {\n    background-color: #f8fafc;\n  }\n\n  .xl\\:bg-white {\n    background-color: #fff;\n  }\n\n  .xl\\:bg-red-darkest {\n    background-color: #3b0d0c;\n  }\n\n  .xl\\:bg-red-darker {\n    background-color: #621b18;\n  }\n\n  .xl\\:bg-red-dark {\n    background-color: #cc1f1a;\n  }\n\n  .xl\\:bg-red {\n    background-color: #e3342f;\n  }\n\n  .xl\\:bg-red-light {\n    background-color: #ef5753;\n  }\n\n  .xl\\:bg-red-lighter {\n    background-color: #f9acaa;\n  }\n\n  .xl\\:bg-red-lightest {\n    background-color: #fcebea;\n  }\n\n  .xl\\:bg-orange-darkest {\n    background-color: #462a16;\n  }\n\n  .xl\\:bg-orange-darker {\n    background-color: #613b1f;\n  }\n\n  .xl\\:bg-orange-dark {\n    background-color: #de751f;\n  }\n\n  .xl\\:bg-orange {\n    background-color: #f6993f;\n  }\n\n  .xl\\:bg-orange-light {\n    background-color: #faad63;\n  }\n\n  .xl\\:bg-orange-lighter {\n    background-color: #fcd9b6;\n  }\n\n  .xl\\:bg-orange-lightest {\n    background-color: #fff5eb;\n  }\n\n  .xl\\:bg-yellow-darkest {\n    background-color: #453411;\n  }\n\n  .xl\\:bg-yellow-darker {\n    background-color: #684f1d;\n  }\n\n  .xl\\:bg-yellow-dark {\n    background-color: #f2d024;\n  }\n\n  .xl\\:bg-yellow {\n    background-color: #ffed4a;\n  }\n\n  .xl\\:bg-yellow-light {\n    background-color: #fff382;\n  }\n\n  .xl\\:bg-yellow-lighter {\n    background-color: #fff9c2;\n  }\n\n  .xl\\:bg-yellow-lightest {\n    background-color: #fcfbeb;\n  }\n\n  .xl\\:bg-green-darkest {\n    background-color: #0f2f21;\n  }\n\n  .xl\\:bg-green-darker {\n    background-color: #1a4731;\n  }\n\n  .xl\\:bg-green-dark {\n    background-color: #1f9d55;\n  }\n\n  .xl\\:bg-green {\n    background-color: #38c172;\n  }\n\n  .xl\\:bg-green-light {\n    background-color: #51d88a;\n  }\n\n  .xl\\:bg-green-lighter {\n    background-color: #a2f5bf;\n  }\n\n  .xl\\:bg-green-lightest {\n    background-color: #e3fcec;\n  }\n\n  .xl\\:bg-teal-darkest {\n    background-color: #0d3331;\n  }\n\n  .xl\\:bg-teal-darker {\n    background-color: #20504f;\n  }\n\n  .xl\\:bg-teal-dark {\n    background-color: #38a89d;\n  }\n\n  .xl\\:bg-teal {\n    background-color: #4dc0b5;\n  }\n\n  .xl\\:bg-teal-light {\n    background-color: #64d5ca;\n  }\n\n  .xl\\:bg-teal-lighter {\n    background-color: #a0f0ed;\n  }\n\n  .xl\\:bg-teal-lightest {\n    background-color: #e8fffe;\n  }\n\n  .xl\\:bg-blue-darkest {\n    background-color: #12283a;\n  }\n\n  .xl\\:bg-blue-darker {\n    background-color: #1c3d5a;\n  }\n\n  .xl\\:bg-blue-dark {\n    background-color: #2779bd;\n  }\n\n  .xl\\:bg-blue {\n    background-color: #3490dc;\n  }\n\n  .xl\\:bg-blue-light {\n    background-color: #6cb2eb;\n  }\n\n  .xl\\:bg-blue-lighter {\n    background-color: #bcdefa;\n  }\n\n  .xl\\:bg-blue-lightest {\n    background-color: #eff8ff;\n  }\n\n  .xl\\:bg-indigo-darkest {\n    background-color: #191e38;\n  }\n\n  .xl\\:bg-indigo-darker {\n    background-color: #2f365f;\n  }\n\n  .xl\\:bg-indigo-dark {\n    background-color: #5661b3;\n  }\n\n  .xl\\:bg-indigo {\n    background-color: #6574cd;\n  }\n\n  .xl\\:bg-indigo-light {\n    background-color: #7886d7;\n  }\n\n  .xl\\:bg-indigo-lighter {\n    background-color: #b2b7ff;\n  }\n\n  .xl\\:bg-indigo-lightest {\n    background-color: #e6e8ff;\n  }\n\n  .xl\\:bg-purple-darkest {\n    background-color: #21183c;\n  }\n\n  .xl\\:bg-purple-darker {\n    background-color: #382b5f;\n  }\n\n  .xl\\:bg-purple-dark {\n    background-color: #794acf;\n  }\n\n  .xl\\:bg-purple {\n    background-color: #9561e2;\n  }\n\n  .xl\\:bg-purple-light {\n    background-color: #a779e9;\n  }\n\n  .xl\\:bg-purple-lighter {\n    background-color: #d6bbfc;\n  }\n\n  .xl\\:bg-purple-lightest {\n    background-color: #f3ebff;\n  }\n\n  .xl\\:bg-pink-darkest {\n    background-color: #451225;\n  }\n\n  .xl\\:bg-pink-darker {\n    background-color: #6f213f;\n  }\n\n  .xl\\:bg-pink-dark {\n    background-color: #eb5286;\n  }\n\n  .xl\\:bg-pink {\n    background-color: #f66d9b;\n  }\n\n  .xl\\:bg-pink-light {\n    background-color: #fa7ea8;\n  }\n\n  .xl\\:bg-pink-lighter {\n    background-color: #ffbbca;\n  }\n\n  .xl\\:bg-pink-lightest {\n    background-color: #ffebef;\n  }\n\n  .xl\\:hover\\:bg-transparent:hover {\n    background-color: transparent;\n  }\n\n  .xl\\:hover\\:bg-black:hover {\n    background-color: #22292f;\n  }\n\n  .xl\\:hover\\:bg-grey-darkest:hover {\n    background-color: #3d4852;\n  }\n\n  .xl\\:hover\\:bg-grey-darker:hover {\n    background-color: #606f7b;\n  }\n\n  .xl\\:hover\\:bg-grey-dark:hover {\n    background-color: #8795a1;\n  }\n\n  .xl\\:hover\\:bg-grey:hover {\n    background-color: #b8c2cc;\n  }\n\n  .xl\\:hover\\:bg-grey-light:hover {\n    background-color: #dae1e7;\n  }\n\n  .xl\\:hover\\:bg-grey-lighter:hover {\n    background-color: #f1f5f8;\n  }\n\n  .xl\\:hover\\:bg-grey-lightest:hover {\n    background-color: #f8fafc;\n  }\n\n  .xl\\:hover\\:bg-white:hover {\n    background-color: #fff;\n  }\n\n  .xl\\:hover\\:bg-red-darkest:hover {\n    background-color: #3b0d0c;\n  }\n\n  .xl\\:hover\\:bg-red-darker:hover {\n    background-color: #621b18;\n  }\n\n  .xl\\:hover\\:bg-red-dark:hover {\n    background-color: #cc1f1a;\n  }\n\n  .xl\\:hover\\:bg-red:hover {\n    background-color: #e3342f;\n  }\n\n  .xl\\:hover\\:bg-red-light:hover {\n    background-color: #ef5753;\n  }\n\n  .xl\\:hover\\:bg-red-lighter:hover {\n    background-color: #f9acaa;\n  }\n\n  .xl\\:hover\\:bg-red-lightest:hover {\n    background-color: #fcebea;\n  }\n\n  .xl\\:hover\\:bg-orange-darkest:hover {\n    background-color: #462a16;\n  }\n\n  .xl\\:hover\\:bg-orange-darker:hover {\n    background-color: #613b1f;\n  }\n\n  .xl\\:hover\\:bg-orange-dark:hover {\n    background-color: #de751f;\n  }\n\n  .xl\\:hover\\:bg-orange:hover {\n    background-color: #f6993f;\n  }\n\n  .xl\\:hover\\:bg-orange-light:hover {\n    background-color: #faad63;\n  }\n\n  .xl\\:hover\\:bg-orange-lighter:hover {\n    background-color: #fcd9b6;\n  }\n\n  .xl\\:hover\\:bg-orange-lightest:hover {\n    background-color: #fff5eb;\n  }\n\n  .xl\\:hover\\:bg-yellow-darkest:hover {\n    background-color: #453411;\n  }\n\n  .xl\\:hover\\:bg-yellow-darker:hover {\n    background-color: #684f1d;\n  }\n\n  .xl\\:hover\\:bg-yellow-dark:hover {\n    background-color: #f2d024;\n  }\n\n  .xl\\:hover\\:bg-yellow:hover {\n    background-color: #ffed4a;\n  }\n\n  .xl\\:hover\\:bg-yellow-light:hover {\n    background-color: #fff382;\n  }\n\n  .xl\\:hover\\:bg-yellow-lighter:hover {\n    background-color: #fff9c2;\n  }\n\n  .xl\\:hover\\:bg-yellow-lightest:hover {\n    background-color: #fcfbeb;\n  }\n\n  .xl\\:hover\\:bg-green-darkest:hover {\n    background-color: #0f2f21;\n  }\n\n  .xl\\:hover\\:bg-green-darker:hover {\n    background-color: #1a4731;\n  }\n\n  .xl\\:hover\\:bg-green-dark:hover {\n    background-color: #1f9d55;\n  }\n\n  .xl\\:hover\\:bg-green:hover {\n    background-color: #38c172;\n  }\n\n  .xl\\:hover\\:bg-green-light:hover {\n    background-color: #51d88a;\n  }\n\n  .xl\\:hover\\:bg-green-lighter:hover {\n    background-color: #a2f5bf;\n  }\n\n  .xl\\:hover\\:bg-green-lightest:hover {\n    background-color: #e3fcec;\n  }\n\n  .xl\\:hover\\:bg-teal-darkest:hover {\n    background-color: #0d3331;\n  }\n\n  .xl\\:hover\\:bg-teal-darker:hover {\n    background-color: #20504f;\n  }\n\n  .xl\\:hover\\:bg-teal-dark:hover {\n    background-color: #38a89d;\n  }\n\n  .xl\\:hover\\:bg-teal:hover {\n    background-color: #4dc0b5;\n  }\n\n  .xl\\:hover\\:bg-teal-light:hover {\n    background-color: #64d5ca;\n  }\n\n  .xl\\:hover\\:bg-teal-lighter:hover {\n    background-color: #a0f0ed;\n  }\n\n  .xl\\:hover\\:bg-teal-lightest:hover {\n    background-color: #e8fffe;\n  }\n\n  .xl\\:hover\\:bg-blue-darkest:hover {\n    background-color: #12283a;\n  }\n\n  .xl\\:hover\\:bg-blue-darker:hover {\n    background-color: #1c3d5a;\n  }\n\n  .xl\\:hover\\:bg-blue-dark:hover {\n    background-color: #2779bd;\n  }\n\n  .xl\\:hover\\:bg-blue:hover {\n    background-color: #3490dc;\n  }\n\n  .xl\\:hover\\:bg-blue-light:hover {\n    background-color: #6cb2eb;\n  }\n\n  .xl\\:hover\\:bg-blue-lighter:hover {\n    background-color: #bcdefa;\n  }\n\n  .xl\\:hover\\:bg-blue-lightest:hover {\n    background-color: #eff8ff;\n  }\n\n  .xl\\:hover\\:bg-indigo-darkest:hover {\n    background-color: #191e38;\n  }\n\n  .xl\\:hover\\:bg-indigo-darker:hover {\n    background-color: #2f365f;\n  }\n\n  .xl\\:hover\\:bg-indigo-dark:hover {\n    background-color: #5661b3;\n  }\n\n  .xl\\:hover\\:bg-indigo:hover {\n    background-color: #6574cd;\n  }\n\n  .xl\\:hover\\:bg-indigo-light:hover {\n    background-color: #7886d7;\n  }\n\n  .xl\\:hover\\:bg-indigo-lighter:hover {\n    background-color: #b2b7ff;\n  }\n\n  .xl\\:hover\\:bg-indigo-lightest:hover {\n    background-color: #e6e8ff;\n  }\n\n  .xl\\:hover\\:bg-purple-darkest:hover {\n    background-color: #21183c;\n  }\n\n  .xl\\:hover\\:bg-purple-darker:hover {\n    background-color: #382b5f;\n  }\n\n  .xl\\:hover\\:bg-purple-dark:hover {\n    background-color: #794acf;\n  }\n\n  .xl\\:hover\\:bg-purple:hover {\n    background-color: #9561e2;\n  }\n\n  .xl\\:hover\\:bg-purple-light:hover {\n    background-color: #a779e9;\n  }\n\n  .xl\\:hover\\:bg-purple-lighter:hover {\n    background-color: #d6bbfc;\n  }\n\n  .xl\\:hover\\:bg-purple-lightest:hover {\n    background-color: #f3ebff;\n  }\n\n  .xl\\:hover\\:bg-pink-darkest:hover {\n    background-color: #451225;\n  }\n\n  .xl\\:hover\\:bg-pink-darker:hover {\n    background-color: #6f213f;\n  }\n\n  .xl\\:hover\\:bg-pink-dark:hover {\n    background-color: #eb5286;\n  }\n\n  .xl\\:hover\\:bg-pink:hover {\n    background-color: #f66d9b;\n  }\n\n  .xl\\:hover\\:bg-pink-light:hover {\n    background-color: #fa7ea8;\n  }\n\n  .xl\\:hover\\:bg-pink-lighter:hover {\n    background-color: #ffbbca;\n  }\n\n  .xl\\:hover\\:bg-pink-lightest:hover {\n    background-color: #ffebef;\n  }\n\n  .xl\\:focus\\:bg-transparent:focus {\n    background-color: transparent;\n  }\n\n  .xl\\:focus\\:bg-black:focus {\n    background-color: #22292f;\n  }\n\n  .xl\\:focus\\:bg-grey-darkest:focus {\n    background-color: #3d4852;\n  }\n\n  .xl\\:focus\\:bg-grey-darker:focus {\n    background-color: #606f7b;\n  }\n\n  .xl\\:focus\\:bg-grey-dark:focus {\n    background-color: #8795a1;\n  }\n\n  .xl\\:focus\\:bg-grey:focus {\n    background-color: #b8c2cc;\n  }\n\n  .xl\\:focus\\:bg-grey-light:focus {\n    background-color: #dae1e7;\n  }\n\n  .xl\\:focus\\:bg-grey-lighter:focus {\n    background-color: #f1f5f8;\n  }\n\n  .xl\\:focus\\:bg-grey-lightest:focus {\n    background-color: #f8fafc;\n  }\n\n  .xl\\:focus\\:bg-white:focus {\n    background-color: #fff;\n  }\n\n  .xl\\:focus\\:bg-red-darkest:focus {\n    background-color: #3b0d0c;\n  }\n\n  .xl\\:focus\\:bg-red-darker:focus {\n    background-color: #621b18;\n  }\n\n  .xl\\:focus\\:bg-red-dark:focus {\n    background-color: #cc1f1a;\n  }\n\n  .xl\\:focus\\:bg-red:focus {\n    background-color: #e3342f;\n  }\n\n  .xl\\:focus\\:bg-red-light:focus {\n    background-color: #ef5753;\n  }\n\n  .xl\\:focus\\:bg-red-lighter:focus {\n    background-color: #f9acaa;\n  }\n\n  .xl\\:focus\\:bg-red-lightest:focus {\n    background-color: #fcebea;\n  }\n\n  .xl\\:focus\\:bg-orange-darkest:focus {\n    background-color: #462a16;\n  }\n\n  .xl\\:focus\\:bg-orange-darker:focus {\n    background-color: #613b1f;\n  }\n\n  .xl\\:focus\\:bg-orange-dark:focus {\n    background-color: #de751f;\n  }\n\n  .xl\\:focus\\:bg-orange:focus {\n    background-color: #f6993f;\n  }\n\n  .xl\\:focus\\:bg-orange-light:focus {\n    background-color: #faad63;\n  }\n\n  .xl\\:focus\\:bg-orange-lighter:focus {\n    background-color: #fcd9b6;\n  }\n\n  .xl\\:focus\\:bg-orange-lightest:focus {\n    background-color: #fff5eb;\n  }\n\n  .xl\\:focus\\:bg-yellow-darkest:focus {\n    background-color: #453411;\n  }\n\n  .xl\\:focus\\:bg-yellow-darker:focus {\n    background-color: #684f1d;\n  }\n\n  .xl\\:focus\\:bg-yellow-dark:focus {\n    background-color: #f2d024;\n  }\n\n  .xl\\:focus\\:bg-yellow:focus {\n    background-color: #ffed4a;\n  }\n\n  .xl\\:focus\\:bg-yellow-light:focus {\n    background-color: #fff382;\n  }\n\n  .xl\\:focus\\:bg-yellow-lighter:focus {\n    background-color: #fff9c2;\n  }\n\n  .xl\\:focus\\:bg-yellow-lightest:focus {\n    background-color: #fcfbeb;\n  }\n\n  .xl\\:focus\\:bg-green-darkest:focus {\n    background-color: #0f2f21;\n  }\n\n  .xl\\:focus\\:bg-green-darker:focus {\n    background-color: #1a4731;\n  }\n\n  .xl\\:focus\\:bg-green-dark:focus {\n    background-color: #1f9d55;\n  }\n\n  .xl\\:focus\\:bg-green:focus {\n    background-color: #38c172;\n  }\n\n  .xl\\:focus\\:bg-green-light:focus {\n    background-color: #51d88a;\n  }\n\n  .xl\\:focus\\:bg-green-lighter:focus {\n    background-color: #a2f5bf;\n  }\n\n  .xl\\:focus\\:bg-green-lightest:focus {\n    background-color: #e3fcec;\n  }\n\n  .xl\\:focus\\:bg-teal-darkest:focus {\n    background-color: #0d3331;\n  }\n\n  .xl\\:focus\\:bg-teal-darker:focus {\n    background-color: #20504f;\n  }\n\n  .xl\\:focus\\:bg-teal-dark:focus {\n    background-color: #38a89d;\n  }\n\n  .xl\\:focus\\:bg-teal:focus {\n    background-color: #4dc0b5;\n  }\n\n  .xl\\:focus\\:bg-teal-light:focus {\n    background-color: #64d5ca;\n  }\n\n  .xl\\:focus\\:bg-teal-lighter:focus {\n    background-color: #a0f0ed;\n  }\n\n  .xl\\:focus\\:bg-teal-lightest:focus {\n    background-color: #e8fffe;\n  }\n\n  .xl\\:focus\\:bg-blue-darkest:focus {\n    background-color: #12283a;\n  }\n\n  .xl\\:focus\\:bg-blue-darker:focus {\n    background-color: #1c3d5a;\n  }\n\n  .xl\\:focus\\:bg-blue-dark:focus {\n    background-color: #2779bd;\n  }\n\n  .xl\\:focus\\:bg-blue:focus {\n    background-color: #3490dc;\n  }\n\n  .xl\\:focus\\:bg-blue-light:focus {\n    background-color: #6cb2eb;\n  }\n\n  .xl\\:focus\\:bg-blue-lighter:focus {\n    background-color: #bcdefa;\n  }\n\n  .xl\\:focus\\:bg-blue-lightest:focus {\n    background-color: #eff8ff;\n  }\n\n  .xl\\:focus\\:bg-indigo-darkest:focus {\n    background-color: #191e38;\n  }\n\n  .xl\\:focus\\:bg-indigo-darker:focus {\n    background-color: #2f365f;\n  }\n\n  .xl\\:focus\\:bg-indigo-dark:focus {\n    background-color: #5661b3;\n  }\n\n  .xl\\:focus\\:bg-indigo:focus {\n    background-color: #6574cd;\n  }\n\n  .xl\\:focus\\:bg-indigo-light:focus {\n    background-color: #7886d7;\n  }\n\n  .xl\\:focus\\:bg-indigo-lighter:focus {\n    background-color: #b2b7ff;\n  }\n\n  .xl\\:focus\\:bg-indigo-lightest:focus {\n    background-color: #e6e8ff;\n  }\n\n  .xl\\:focus\\:bg-purple-darkest:focus {\n    background-color: #21183c;\n  }\n\n  .xl\\:focus\\:bg-purple-darker:focus {\n    background-color: #382b5f;\n  }\n\n  .xl\\:focus\\:bg-purple-dark:focus {\n    background-color: #794acf;\n  }\n\n  .xl\\:focus\\:bg-purple:focus {\n    background-color: #9561e2;\n  }\n\n  .xl\\:focus\\:bg-purple-light:focus {\n    background-color: #a779e9;\n  }\n\n  .xl\\:focus\\:bg-purple-lighter:focus {\n    background-color: #d6bbfc;\n  }\n\n  .xl\\:focus\\:bg-purple-lightest:focus {\n    background-color: #f3ebff;\n  }\n\n  .xl\\:focus\\:bg-pink-darkest:focus {\n    background-color: #451225;\n  }\n\n  .xl\\:focus\\:bg-pink-darker:focus {\n    background-color: #6f213f;\n  }\n\n  .xl\\:focus\\:bg-pink-dark:focus {\n    background-color: #eb5286;\n  }\n\n  .xl\\:focus\\:bg-pink:focus {\n    background-color: #f66d9b;\n  }\n\n  .xl\\:focus\\:bg-pink-light:focus {\n    background-color: #fa7ea8;\n  }\n\n  .xl\\:focus\\:bg-pink-lighter:focus {\n    background-color: #ffbbca;\n  }\n\n  .xl\\:focus\\:bg-pink-lightest:focus {\n    background-color: #ffebef;\n  }\n\n  .xl\\:bg-bottom {\n    background-position: bottom;\n  }\n\n  .xl\\:bg-center {\n    background-position: center;\n  }\n\n  .xl\\:bg-left {\n    background-position: left;\n  }\n\n  .xl\\:bg-left-bottom {\n    background-position: left bottom;\n  }\n\n  .xl\\:bg-left-top {\n    background-position: left top;\n  }\n\n  .xl\\:bg-right {\n    background-position: right;\n  }\n\n  .xl\\:bg-right-bottom {\n    background-position: right bottom;\n  }\n\n  .xl\\:bg-right-top {\n    background-position: right top;\n  }\n\n  .xl\\:bg-top {\n    background-position: top;\n  }\n\n  .xl\\:bg-repeat {\n    background-repeat: repeat;\n  }\n\n  .xl\\:bg-no-repeat {\n    background-repeat: no-repeat;\n  }\n\n  .xl\\:bg-repeat-x {\n    background-repeat: repeat-x;\n  }\n\n  .xl\\:bg-repeat-y {\n    background-repeat: repeat-y;\n  }\n\n  .xl\\:bg-auto {\n    background-size: auto;\n  }\n\n  .xl\\:bg-cover {\n    background-size: cover;\n  }\n\n  .xl\\:bg-contain {\n    background-size: contain;\n  }\n\n  .xl\\:border-transparent {\n    border-color: transparent;\n  }\n\n  .xl\\:border-black {\n    border-color: #22292f;\n  }\n\n  .xl\\:border-grey-darkest {\n    border-color: #3d4852;\n  }\n\n  .xl\\:border-grey-darker {\n    border-color: #606f7b;\n  }\n\n  .xl\\:border-grey-dark {\n    border-color: #8795a1;\n  }\n\n  .xl\\:border-grey {\n    border-color: #b8c2cc;\n  }\n\n  .xl\\:border-grey-light {\n    border-color: #dae1e7;\n  }\n\n  .xl\\:border-grey-lighter {\n    border-color: #f1f5f8;\n  }\n\n  .xl\\:border-grey-lightest {\n    border-color: #f8fafc;\n  }\n\n  .xl\\:border-white {\n    border-color: #fff;\n  }\n\n  .xl\\:border-red-darkest {\n    border-color: #3b0d0c;\n  }\n\n  .xl\\:border-red-darker {\n    border-color: #621b18;\n  }\n\n  .xl\\:border-red-dark {\n    border-color: #cc1f1a;\n  }\n\n  .xl\\:border-red {\n    border-color: #e3342f;\n  }\n\n  .xl\\:border-red-light {\n    border-color: #ef5753;\n  }\n\n  .xl\\:border-red-lighter {\n    border-color: #f9acaa;\n  }\n\n  .xl\\:border-red-lightest {\n    border-color: #fcebea;\n  }\n\n  .xl\\:border-orange-darkest {\n    border-color: #462a16;\n  }\n\n  .xl\\:border-orange-darker {\n    border-color: #613b1f;\n  }\n\n  .xl\\:border-orange-dark {\n    border-color: #de751f;\n  }\n\n  .xl\\:border-orange {\n    border-color: #f6993f;\n  }\n\n  .xl\\:border-orange-light {\n    border-color: #faad63;\n  }\n\n  .xl\\:border-orange-lighter {\n    border-color: #fcd9b6;\n  }\n\n  .xl\\:border-orange-lightest {\n    border-color: #fff5eb;\n  }\n\n  .xl\\:border-yellow-darkest {\n    border-color: #453411;\n  }\n\n  .xl\\:border-yellow-darker {\n    border-color: #684f1d;\n  }\n\n  .xl\\:border-yellow-dark {\n    border-color: #f2d024;\n  }\n\n  .xl\\:border-yellow {\n    border-color: #ffed4a;\n  }\n\n  .xl\\:border-yellow-light {\n    border-color: #fff382;\n  }\n\n  .xl\\:border-yellow-lighter {\n    border-color: #fff9c2;\n  }\n\n  .xl\\:border-yellow-lightest {\n    border-color: #fcfbeb;\n  }\n\n  .xl\\:border-green-darkest {\n    border-color: #0f2f21;\n  }\n\n  .xl\\:border-green-darker {\n    border-color: #1a4731;\n  }\n\n  .xl\\:border-green-dark {\n    border-color: #1f9d55;\n  }\n\n  .xl\\:border-green {\n    border-color: #38c172;\n  }\n\n  .xl\\:border-green-light {\n    border-color: #51d88a;\n  }\n\n  .xl\\:border-green-lighter {\n    border-color: #a2f5bf;\n  }\n\n  .xl\\:border-green-lightest {\n    border-color: #e3fcec;\n  }\n\n  .xl\\:border-teal-darkest {\n    border-color: #0d3331;\n  }\n\n  .xl\\:border-teal-darker {\n    border-color: #20504f;\n  }\n\n  .xl\\:border-teal-dark {\n    border-color: #38a89d;\n  }\n\n  .xl\\:border-teal {\n    border-color: #4dc0b5;\n  }\n\n  .xl\\:border-teal-light {\n    border-color: #64d5ca;\n  }\n\n  .xl\\:border-teal-lighter {\n    border-color: #a0f0ed;\n  }\n\n  .xl\\:border-teal-lightest {\n    border-color: #e8fffe;\n  }\n\n  .xl\\:border-blue-darkest {\n    border-color: #12283a;\n  }\n\n  .xl\\:border-blue-darker {\n    border-color: #1c3d5a;\n  }\n\n  .xl\\:border-blue-dark {\n    border-color: #2779bd;\n  }\n\n  .xl\\:border-blue {\n    border-color: #3490dc;\n  }\n\n  .xl\\:border-blue-light {\n    border-color: #6cb2eb;\n  }\n\n  .xl\\:border-blue-lighter {\n    border-color: #bcdefa;\n  }\n\n  .xl\\:border-blue-lightest {\n    border-color: #eff8ff;\n  }\n\n  .xl\\:border-indigo-darkest {\n    border-color: #191e38;\n  }\n\n  .xl\\:border-indigo-darker {\n    border-color: #2f365f;\n  }\n\n  .xl\\:border-indigo-dark {\n    border-color: #5661b3;\n  }\n\n  .xl\\:border-indigo {\n    border-color: #6574cd;\n  }\n\n  .xl\\:border-indigo-light {\n    border-color: #7886d7;\n  }\n\n  .xl\\:border-indigo-lighter {\n    border-color: #b2b7ff;\n  }\n\n  .xl\\:border-indigo-lightest {\n    border-color: #e6e8ff;\n  }\n\n  .xl\\:border-purple-darkest {\n    border-color: #21183c;\n  }\n\n  .xl\\:border-purple-darker {\n    border-color: #382b5f;\n  }\n\n  .xl\\:border-purple-dark {\n    border-color: #794acf;\n  }\n\n  .xl\\:border-purple {\n    border-color: #9561e2;\n  }\n\n  .xl\\:border-purple-light {\n    border-color: #a779e9;\n  }\n\n  .xl\\:border-purple-lighter {\n    border-color: #d6bbfc;\n  }\n\n  .xl\\:border-purple-lightest {\n    border-color: #f3ebff;\n  }\n\n  .xl\\:border-pink-darkest {\n    border-color: #451225;\n  }\n\n  .xl\\:border-pink-darker {\n    border-color: #6f213f;\n  }\n\n  .xl\\:border-pink-dark {\n    border-color: #eb5286;\n  }\n\n  .xl\\:border-pink {\n    border-color: #f66d9b;\n  }\n\n  .xl\\:border-pink-light {\n    border-color: #fa7ea8;\n  }\n\n  .xl\\:border-pink-lighter {\n    border-color: #ffbbca;\n  }\n\n  .xl\\:border-pink-lightest {\n    border-color: #ffebef;\n  }\n\n  .xl\\:hover\\:border-transparent:hover {\n    border-color: transparent;\n  }\n\n  .xl\\:hover\\:border-black:hover {\n    border-color: #22292f;\n  }\n\n  .xl\\:hover\\:border-grey-darkest:hover {\n    border-color: #3d4852;\n  }\n\n  .xl\\:hover\\:border-grey-darker:hover {\n    border-color: #606f7b;\n  }\n\n  .xl\\:hover\\:border-grey-dark:hover {\n    border-color: #8795a1;\n  }\n\n  .xl\\:hover\\:border-grey:hover {\n    border-color: #b8c2cc;\n  }\n\n  .xl\\:hover\\:border-grey-light:hover {\n    border-color: #dae1e7;\n  }\n\n  .xl\\:hover\\:border-grey-lighter:hover {\n    border-color: #f1f5f8;\n  }\n\n  .xl\\:hover\\:border-grey-lightest:hover {\n    border-color: #f8fafc;\n  }\n\n  .xl\\:hover\\:border-white:hover {\n    border-color: #fff;\n  }\n\n  .xl\\:hover\\:border-red-darkest:hover {\n    border-color: #3b0d0c;\n  }\n\n  .xl\\:hover\\:border-red-darker:hover {\n    border-color: #621b18;\n  }\n\n  .xl\\:hover\\:border-red-dark:hover {\n    border-color: #cc1f1a;\n  }\n\n  .xl\\:hover\\:border-red:hover {\n    border-color: #e3342f;\n  }\n\n  .xl\\:hover\\:border-red-light:hover {\n    border-color: #ef5753;\n  }\n\n  .xl\\:hover\\:border-red-lighter:hover {\n    border-color: #f9acaa;\n  }\n\n  .xl\\:hover\\:border-red-lightest:hover {\n    border-color: #fcebea;\n  }\n\n  .xl\\:hover\\:border-orange-darkest:hover {\n    border-color: #462a16;\n  }\n\n  .xl\\:hover\\:border-orange-darker:hover {\n    border-color: #613b1f;\n  }\n\n  .xl\\:hover\\:border-orange-dark:hover {\n    border-color: #de751f;\n  }\n\n  .xl\\:hover\\:border-orange:hover {\n    border-color: #f6993f;\n  }\n\n  .xl\\:hover\\:border-orange-light:hover {\n    border-color: #faad63;\n  }\n\n  .xl\\:hover\\:border-orange-lighter:hover {\n    border-color: #fcd9b6;\n  }\n\n  .xl\\:hover\\:border-orange-lightest:hover {\n    border-color: #fff5eb;\n  }\n\n  .xl\\:hover\\:border-yellow-darkest:hover {\n    border-color: #453411;\n  }\n\n  .xl\\:hover\\:border-yellow-darker:hover {\n    border-color: #684f1d;\n  }\n\n  .xl\\:hover\\:border-yellow-dark:hover {\n    border-color: #f2d024;\n  }\n\n  .xl\\:hover\\:border-yellow:hover {\n    border-color: #ffed4a;\n  }\n\n  .xl\\:hover\\:border-yellow-light:hover {\n    border-color: #fff382;\n  }\n\n  .xl\\:hover\\:border-yellow-lighter:hover {\n    border-color: #fff9c2;\n  }\n\n  .xl\\:hover\\:border-yellow-lightest:hover {\n    border-color: #fcfbeb;\n  }\n\n  .xl\\:hover\\:border-green-darkest:hover {\n    border-color: #0f2f21;\n  }\n\n  .xl\\:hover\\:border-green-darker:hover {\n    border-color: #1a4731;\n  }\n\n  .xl\\:hover\\:border-green-dark:hover {\n    border-color: #1f9d55;\n  }\n\n  .xl\\:hover\\:border-green:hover {\n    border-color: #38c172;\n  }\n\n  .xl\\:hover\\:border-green-light:hover {\n    border-color: #51d88a;\n  }\n\n  .xl\\:hover\\:border-green-lighter:hover {\n    border-color: #a2f5bf;\n  }\n\n  .xl\\:hover\\:border-green-lightest:hover {\n    border-color: #e3fcec;\n  }\n\n  .xl\\:hover\\:border-teal-darkest:hover {\n    border-color: #0d3331;\n  }\n\n  .xl\\:hover\\:border-teal-darker:hover {\n    border-color: #20504f;\n  }\n\n  .xl\\:hover\\:border-teal-dark:hover {\n    border-color: #38a89d;\n  }\n\n  .xl\\:hover\\:border-teal:hover {\n    border-color: #4dc0b5;\n  }\n\n  .xl\\:hover\\:border-teal-light:hover {\n    border-color: #64d5ca;\n  }\n\n  .xl\\:hover\\:border-teal-lighter:hover {\n    border-color: #a0f0ed;\n  }\n\n  .xl\\:hover\\:border-teal-lightest:hover {\n    border-color: #e8fffe;\n  }\n\n  .xl\\:hover\\:border-blue-darkest:hover {\n    border-color: #12283a;\n  }\n\n  .xl\\:hover\\:border-blue-darker:hover {\n    border-color: #1c3d5a;\n  }\n\n  .xl\\:hover\\:border-blue-dark:hover {\n    border-color: #2779bd;\n  }\n\n  .xl\\:hover\\:border-blue:hover {\n    border-color: #3490dc;\n  }\n\n  .xl\\:hover\\:border-blue-light:hover {\n    border-color: #6cb2eb;\n  }\n\n  .xl\\:hover\\:border-blue-lighter:hover {\n    border-color: #bcdefa;\n  }\n\n  .xl\\:hover\\:border-blue-lightest:hover {\n    border-color: #eff8ff;\n  }\n\n  .xl\\:hover\\:border-indigo-darkest:hover {\n    border-color: #191e38;\n  }\n\n  .xl\\:hover\\:border-indigo-darker:hover {\n    border-color: #2f365f;\n  }\n\n  .xl\\:hover\\:border-indigo-dark:hover {\n    border-color: #5661b3;\n  }\n\n  .xl\\:hover\\:border-indigo:hover {\n    border-color: #6574cd;\n  }\n\n  .xl\\:hover\\:border-indigo-light:hover {\n    border-color: #7886d7;\n  }\n\n  .xl\\:hover\\:border-indigo-lighter:hover {\n    border-color: #b2b7ff;\n  }\n\n  .xl\\:hover\\:border-indigo-lightest:hover {\n    border-color: #e6e8ff;\n  }\n\n  .xl\\:hover\\:border-purple-darkest:hover {\n    border-color: #21183c;\n  }\n\n  .xl\\:hover\\:border-purple-darker:hover {\n    border-color: #382b5f;\n  }\n\n  .xl\\:hover\\:border-purple-dark:hover {\n    border-color: #794acf;\n  }\n\n  .xl\\:hover\\:border-purple:hover {\n    border-color: #9561e2;\n  }\n\n  .xl\\:hover\\:border-purple-light:hover {\n    border-color: #a779e9;\n  }\n\n  .xl\\:hover\\:border-purple-lighter:hover {\n    border-color: #d6bbfc;\n  }\n\n  .xl\\:hover\\:border-purple-lightest:hover {\n    border-color: #f3ebff;\n  }\n\n  .xl\\:hover\\:border-pink-darkest:hover {\n    border-color: #451225;\n  }\n\n  .xl\\:hover\\:border-pink-darker:hover {\n    border-color: #6f213f;\n  }\n\n  .xl\\:hover\\:border-pink-dark:hover {\n    border-color: #eb5286;\n  }\n\n  .xl\\:hover\\:border-pink:hover {\n    border-color: #f66d9b;\n  }\n\n  .xl\\:hover\\:border-pink-light:hover {\n    border-color: #fa7ea8;\n  }\n\n  .xl\\:hover\\:border-pink-lighter:hover {\n    border-color: #ffbbca;\n  }\n\n  .xl\\:hover\\:border-pink-lightest:hover {\n    border-color: #ffebef;\n  }\n\n  .xl\\:focus\\:border-transparent:focus {\n    border-color: transparent;\n  }\n\n  .xl\\:focus\\:border-black:focus {\n    border-color: #22292f;\n  }\n\n  .xl\\:focus\\:border-grey-darkest:focus {\n    border-color: #3d4852;\n  }\n\n  .xl\\:focus\\:border-grey-darker:focus {\n    border-color: #606f7b;\n  }\n\n  .xl\\:focus\\:border-grey-dark:focus {\n    border-color: #8795a1;\n  }\n\n  .xl\\:focus\\:border-grey:focus {\n    border-color: #b8c2cc;\n  }\n\n  .xl\\:focus\\:border-grey-light:focus {\n    border-color: #dae1e7;\n  }\n\n  .xl\\:focus\\:border-grey-lighter:focus {\n    border-color: #f1f5f8;\n  }\n\n  .xl\\:focus\\:border-grey-lightest:focus {\n    border-color: #f8fafc;\n  }\n\n  .xl\\:focus\\:border-white:focus {\n    border-color: #fff;\n  }\n\n  .xl\\:focus\\:border-red-darkest:focus {\n    border-color: #3b0d0c;\n  }\n\n  .xl\\:focus\\:border-red-darker:focus {\n    border-color: #621b18;\n  }\n\n  .xl\\:focus\\:border-red-dark:focus {\n    border-color: #cc1f1a;\n  }\n\n  .xl\\:focus\\:border-red:focus {\n    border-color: #e3342f;\n  }\n\n  .xl\\:focus\\:border-red-light:focus {\n    border-color: #ef5753;\n  }\n\n  .xl\\:focus\\:border-red-lighter:focus {\n    border-color: #f9acaa;\n  }\n\n  .xl\\:focus\\:border-red-lightest:focus {\n    border-color: #fcebea;\n  }\n\n  .xl\\:focus\\:border-orange-darkest:focus {\n    border-color: #462a16;\n  }\n\n  .xl\\:focus\\:border-orange-darker:focus {\n    border-color: #613b1f;\n  }\n\n  .xl\\:focus\\:border-orange-dark:focus {\n    border-color: #de751f;\n  }\n\n  .xl\\:focus\\:border-orange:focus {\n    border-color: #f6993f;\n  }\n\n  .xl\\:focus\\:border-orange-light:focus {\n    border-color: #faad63;\n  }\n\n  .xl\\:focus\\:border-orange-lighter:focus {\n    border-color: #fcd9b6;\n  }\n\n  .xl\\:focus\\:border-orange-lightest:focus {\n    border-color: #fff5eb;\n  }\n\n  .xl\\:focus\\:border-yellow-darkest:focus {\n    border-color: #453411;\n  }\n\n  .xl\\:focus\\:border-yellow-darker:focus {\n    border-color: #684f1d;\n  }\n\n  .xl\\:focus\\:border-yellow-dark:focus {\n    border-color: #f2d024;\n  }\n\n  .xl\\:focus\\:border-yellow:focus {\n    border-color: #ffed4a;\n  }\n\n  .xl\\:focus\\:border-yellow-light:focus {\n    border-color: #fff382;\n  }\n\n  .xl\\:focus\\:border-yellow-lighter:focus {\n    border-color: #fff9c2;\n  }\n\n  .xl\\:focus\\:border-yellow-lightest:focus {\n    border-color: #fcfbeb;\n  }\n\n  .xl\\:focus\\:border-green-darkest:focus {\n    border-color: #0f2f21;\n  }\n\n  .xl\\:focus\\:border-green-darker:focus {\n    border-color: #1a4731;\n  }\n\n  .xl\\:focus\\:border-green-dark:focus {\n    border-color: #1f9d55;\n  }\n\n  .xl\\:focus\\:border-green:focus {\n    border-color: #38c172;\n  }\n\n  .xl\\:focus\\:border-green-light:focus {\n    border-color: #51d88a;\n  }\n\n  .xl\\:focus\\:border-green-lighter:focus {\n    border-color: #a2f5bf;\n  }\n\n  .xl\\:focus\\:border-green-lightest:focus {\n    border-color: #e3fcec;\n  }\n\n  .xl\\:focus\\:border-teal-darkest:focus {\n    border-color: #0d3331;\n  }\n\n  .xl\\:focus\\:border-teal-darker:focus {\n    border-color: #20504f;\n  }\n\n  .xl\\:focus\\:border-teal-dark:focus {\n    border-color: #38a89d;\n  }\n\n  .xl\\:focus\\:border-teal:focus {\n    border-color: #4dc0b5;\n  }\n\n  .xl\\:focus\\:border-teal-light:focus {\n    border-color: #64d5ca;\n  }\n\n  .xl\\:focus\\:border-teal-lighter:focus {\n    border-color: #a0f0ed;\n  }\n\n  .xl\\:focus\\:border-teal-lightest:focus {\n    border-color: #e8fffe;\n  }\n\n  .xl\\:focus\\:border-blue-darkest:focus {\n    border-color: #12283a;\n  }\n\n  .xl\\:focus\\:border-blue-darker:focus {\n    border-color: #1c3d5a;\n  }\n\n  .xl\\:focus\\:border-blue-dark:focus {\n    border-color: #2779bd;\n  }\n\n  .xl\\:focus\\:border-blue:focus {\n    border-color: #3490dc;\n  }\n\n  .xl\\:focus\\:border-blue-light:focus {\n    border-color: #6cb2eb;\n  }\n\n  .xl\\:focus\\:border-blue-lighter:focus {\n    border-color: #bcdefa;\n  }\n\n  .xl\\:focus\\:border-blue-lightest:focus {\n    border-color: #eff8ff;\n  }\n\n  .xl\\:focus\\:border-indigo-darkest:focus {\n    border-color: #191e38;\n  }\n\n  .xl\\:focus\\:border-indigo-darker:focus {\n    border-color: #2f365f;\n  }\n\n  .xl\\:focus\\:border-indigo-dark:focus {\n    border-color: #5661b3;\n  }\n\n  .xl\\:focus\\:border-indigo:focus {\n    border-color: #6574cd;\n  }\n\n  .xl\\:focus\\:border-indigo-light:focus {\n    border-color: #7886d7;\n  }\n\n  .xl\\:focus\\:border-indigo-lighter:focus {\n    border-color: #b2b7ff;\n  }\n\n  .xl\\:focus\\:border-indigo-lightest:focus {\n    border-color: #e6e8ff;\n  }\n\n  .xl\\:focus\\:border-purple-darkest:focus {\n    border-color: #21183c;\n  }\n\n  .xl\\:focus\\:border-purple-darker:focus {\n    border-color: #382b5f;\n  }\n\n  .xl\\:focus\\:border-purple-dark:focus {\n    border-color: #794acf;\n  }\n\n  .xl\\:focus\\:border-purple:focus {\n    border-color: #9561e2;\n  }\n\n  .xl\\:focus\\:border-purple-light:focus {\n    border-color: #a779e9;\n  }\n\n  .xl\\:focus\\:border-purple-lighter:focus {\n    border-color: #d6bbfc;\n  }\n\n  .xl\\:focus\\:border-purple-lightest:focus {\n    border-color: #f3ebff;\n  }\n\n  .xl\\:focus\\:border-pink-darkest:focus {\n    border-color: #451225;\n  }\n\n  .xl\\:focus\\:border-pink-darker:focus {\n    border-color: #6f213f;\n  }\n\n  .xl\\:focus\\:border-pink-dark:focus {\n    border-color: #eb5286;\n  }\n\n  .xl\\:focus\\:border-pink:focus {\n    border-color: #f66d9b;\n  }\n\n  .xl\\:focus\\:border-pink-light:focus {\n    border-color: #fa7ea8;\n  }\n\n  .xl\\:focus\\:border-pink-lighter:focus {\n    border-color: #ffbbca;\n  }\n\n  .xl\\:focus\\:border-pink-lightest:focus {\n    border-color: #ffebef;\n  }\n\n  .xl\\:rounded-none {\n    border-radius: 0;\n  }\n\n  .xl\\:rounded-sm {\n    border-radius: .125rem;\n  }\n\n  .xl\\:rounded {\n    border-radius: .25rem;\n  }\n\n  .xl\\:rounded-lg {\n    border-radius: .5rem;\n  }\n\n  .xl\\:rounded-full {\n    border-radius: 9999px;\n  }\n\n  .xl\\:rounded-t-none {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  .xl\\:rounded-r-none {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  .xl\\:rounded-b-none {\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .xl\\:rounded-l-none {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .xl\\:rounded-t-sm {\n    border-top-left-radius: .125rem;\n    border-top-right-radius: .125rem;\n  }\n\n  .xl\\:rounded-r-sm {\n    border-top-right-radius: .125rem;\n    border-bottom-right-radius: .125rem;\n  }\n\n  .xl\\:rounded-b-sm {\n    border-bottom-right-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .xl\\:rounded-l-sm {\n    border-top-left-radius: .125rem;\n    border-bottom-left-radius: .125rem;\n  }\n\n  .xl\\:rounded-t {\n    border-top-left-radius: .25rem;\n    border-top-right-radius: .25rem;\n  }\n\n  .xl\\:rounded-r {\n    border-top-right-radius: .25rem;\n    border-bottom-right-radius: .25rem;\n  }\n\n  .xl\\:rounded-b {\n    border-bottom-right-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .xl\\:rounded-l {\n    border-top-left-radius: .25rem;\n    border-bottom-left-radius: .25rem;\n  }\n\n  .xl\\:rounded-t-lg {\n    border-top-left-radius: .5rem;\n    border-top-right-radius: .5rem;\n  }\n\n  .xl\\:rounded-r-lg {\n    border-top-right-radius: .5rem;\n    border-bottom-right-radius: .5rem;\n  }\n\n  .xl\\:rounded-b-lg {\n    border-bottom-right-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .xl\\:rounded-l-lg {\n    border-top-left-radius: .5rem;\n    border-bottom-left-radius: .5rem;\n  }\n\n  .xl\\:rounded-t-full {\n    border-top-left-radius: 9999px;\n    border-top-right-radius: 9999px;\n  }\n\n  .xl\\:rounded-r-full {\n    border-top-right-radius: 9999px;\n    border-bottom-right-radius: 9999px;\n  }\n\n  .xl\\:rounded-b-full {\n    border-bottom-right-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .xl\\:rounded-l-full {\n    border-top-left-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n  }\n\n  .xl\\:rounded-tl-none {\n    border-top-left-radius: 0;\n  }\n\n  .xl\\:rounded-tr-none {\n    border-top-right-radius: 0;\n  }\n\n  .xl\\:rounded-br-none {\n    border-bottom-right-radius: 0;\n  }\n\n  .xl\\:rounded-bl-none {\n    border-bottom-left-radius: 0;\n  }\n\n  .xl\\:rounded-tl-sm {\n    border-top-left-radius: .125rem;\n  }\n\n  .xl\\:rounded-tr-sm {\n    border-top-right-radius: .125rem;\n  }\n\n  .xl\\:rounded-br-sm {\n    border-bottom-right-radius: .125rem;\n  }\n\n  .xl\\:rounded-bl-sm {\n    border-bottom-left-radius: .125rem;\n  }\n\n  .xl\\:rounded-tl {\n    border-top-left-radius: .25rem;\n  }\n\n  .xl\\:rounded-tr {\n    border-top-right-radius: .25rem;\n  }\n\n  .xl\\:rounded-br {\n    border-bottom-right-radius: .25rem;\n  }\n\n  .xl\\:rounded-bl {\n    border-bottom-left-radius: .25rem;\n  }\n\n  .xl\\:rounded-tl-lg {\n    border-top-left-radius: .5rem;\n  }\n\n  .xl\\:rounded-tr-lg {\n    border-top-right-radius: .5rem;\n  }\n\n  .xl\\:rounded-br-lg {\n    border-bottom-right-radius: .5rem;\n  }\n\n  .xl\\:rounded-bl-lg {\n    border-bottom-left-radius: .5rem;\n  }\n\n  .xl\\:rounded-tl-full {\n    border-top-left-radius: 9999px;\n  }\n\n  .xl\\:rounded-tr-full {\n    border-top-right-radius: 9999px;\n  }\n\n  .xl\\:rounded-br-full {\n    border-bottom-right-radius: 9999px;\n  }\n\n  .xl\\:rounded-bl-full {\n    border-bottom-left-radius: 9999px;\n  }\n\n  .xl\\:border-solid {\n    border-style: solid;\n  }\n\n  .xl\\:border-dashed {\n    border-style: dashed;\n  }\n\n  .xl\\:border-dotted {\n    border-style: dotted;\n  }\n\n  .xl\\:border-none {\n    border-style: none;\n  }\n\n  .xl\\:border-0 {\n    border-width: 0;\n  }\n\n  .xl\\:border-2 {\n    border-width: 2px;\n  }\n\n  .xl\\:border-4 {\n    border-width: 4px;\n  }\n\n  .xl\\:border-8 {\n    border-width: 8px;\n  }\n\n  .xl\\:border {\n    border-width: 1px;\n  }\n\n  .xl\\:border-t-0 {\n    border-top-width: 0;\n  }\n\n  .xl\\:border-r-0 {\n    border-right-width: 0;\n  }\n\n  .xl\\:border-b-0 {\n    border-bottom-width: 0;\n  }\n\n  .xl\\:border-l-0 {\n    border-left-width: 0;\n  }\n\n  .xl\\:border-t-2 {\n    border-top-width: 2px;\n  }\n\n  .xl\\:border-r-2 {\n    border-right-width: 2px;\n  }\n\n  .xl\\:border-b-2 {\n    border-bottom-width: 2px;\n  }\n\n  .xl\\:border-l-2 {\n    border-left-width: 2px;\n  }\n\n  .xl\\:border-t-4 {\n    border-top-width: 4px;\n  }\n\n  .xl\\:border-r-4 {\n    border-right-width: 4px;\n  }\n\n  .xl\\:border-b-4 {\n    border-bottom-width: 4px;\n  }\n\n  .xl\\:border-l-4 {\n    border-left-width: 4px;\n  }\n\n  .xl\\:border-t-8 {\n    border-top-width: 8px;\n  }\n\n  .xl\\:border-r-8 {\n    border-right-width: 8px;\n  }\n\n  .xl\\:border-b-8 {\n    border-bottom-width: 8px;\n  }\n\n  .xl\\:border-l-8 {\n    border-left-width: 8px;\n  }\n\n  .xl\\:border-t {\n    border-top-width: 1px;\n  }\n\n  .xl\\:border-r {\n    border-right-width: 1px;\n  }\n\n  .xl\\:border-b {\n    border-bottom-width: 1px;\n  }\n\n  .xl\\:border-l {\n    border-left-width: 1px;\n  }\n\n  .xl\\:cursor-auto {\n    cursor: auto;\n  }\n\n  .xl\\:cursor-default {\n    cursor: default;\n  }\n\n  .xl\\:cursor-pointer {\n    cursor: pointer;\n  }\n\n  .xl\\:cursor-wait {\n    cursor: wait;\n  }\n\n  .xl\\:cursor-move {\n    cursor: move;\n  }\n\n  .xl\\:cursor-not-allowed {\n    cursor: not-allowed;\n  }\n\n  .xl\\:block {\n    display: block;\n  }\n\n  .xl\\:inline-block {\n    display: inline-block;\n  }\n\n  .xl\\:inline {\n    display: inline;\n  }\n\n  .xl\\:table {\n    display: table;\n  }\n\n  .xl\\:table-row {\n    display: table-row;\n  }\n\n  .xl\\:table-cell {\n    display: table-cell;\n  }\n\n  .xl\\:hidden {\n    display: none;\n  }\n\n  .xl\\:flex {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\n\n  .xl\\:inline-flex {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  }\n\n  .xl\\:flex-row {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n  }\n\n  .xl\\:flex-row-reverse {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: row-reverse;\n            flex-direction: row-reverse;\n  }\n\n  .xl\\:flex-col {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n  }\n\n  .xl\\:flex-col-reverse {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: reverse;\n        -ms-flex-direction: column-reverse;\n            flex-direction: column-reverse;\n  }\n\n  .xl\\:flex-wrap {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n  }\n\n  .xl\\:flex-wrap-reverse {\n    -ms-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n  }\n\n  .xl\\:flex-no-wrap {\n    -ms-flex-wrap: nowrap;\n        flex-wrap: nowrap;\n  }\n\n  .xl\\:items-start {\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n  }\n\n  .xl\\:items-end {\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n  }\n\n  .xl\\:items-center {\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n  }\n\n  .xl\\:items-baseline {\n    -webkit-box-align: baseline;\n        -ms-flex-align: baseline;\n            align-items: baseline;\n  }\n\n  .xl\\:items-stretch {\n    -webkit-box-align: stretch;\n        -ms-flex-align: stretch;\n            align-items: stretch;\n  }\n\n  .xl\\:self-auto {\n    -ms-flex-item-align: auto;\n        align-self: auto;\n  }\n\n  .xl\\:self-start {\n    -ms-flex-item-align: start;\n        align-self: flex-start;\n  }\n\n  .xl\\:self-end {\n    -ms-flex-item-align: end;\n        align-self: flex-end;\n  }\n\n  .xl\\:self-center {\n    -ms-flex-item-align: center;\n        align-self: center;\n  }\n\n  .xl\\:self-stretch {\n    -ms-flex-item-align: stretch;\n        align-self: stretch;\n  }\n\n  .xl\\:justify-start {\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start;\n  }\n\n  .xl\\:justify-end {\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end;\n  }\n\n  .xl\\:justify-center {\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n  }\n\n  .xl\\:justify-between {\n    -webkit-box-pack: justify;\n        -ms-flex-pack: justify;\n            justify-content: space-between;\n  }\n\n  .xl\\:justify-around {\n    -ms-flex-pack: distribute;\n        justify-content: space-around;\n  }\n\n  .xl\\:content-center {\n    -ms-flex-line-pack: center;\n        align-content: center;\n  }\n\n  .xl\\:content-start {\n    -ms-flex-line-pack: start;\n        align-content: flex-start;\n  }\n\n  .xl\\:content-end {\n    -ms-flex-line-pack: end;\n        align-content: flex-end;\n  }\n\n  .xl\\:content-between {\n    -ms-flex-line-pack: justify;\n        align-content: space-between;\n  }\n\n  .xl\\:content-around {\n    -ms-flex-line-pack: distribute;\n        align-content: space-around;\n  }\n\n  .xl\\:flex-1 {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n  }\n\n  .xl\\:flex-auto {\n    -webkit-box-flex: 1;\n        -ms-flex: auto;\n            flex: auto;\n  }\n\n  .xl\\:flex-initial {\n    -webkit-box-flex: initial;\n        -ms-flex: initial;\n            flex: initial;\n  }\n\n  .xl\\:flex-none {\n    -webkit-box-flex: 0;\n        -ms-flex: none;\n            flex: none;\n  }\n\n  .xl\\:flex-grow {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1;\n  }\n\n  .xl\\:flex-shrink {\n    -ms-flex-negative: 1;\n        flex-shrink: 1;\n  }\n\n  .xl\\:flex-no-grow {\n    -webkit-box-flex: 0;\n        -ms-flex-positive: 0;\n            flex-grow: 0;\n  }\n\n  .xl\\:flex-no-shrink {\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n  }\n\n  .xl\\:float-right {\n    float: right;\n  }\n\n  .xl\\:float-left {\n    float: left;\n  }\n\n  .xl\\:float-none {\n    float: none;\n  }\n\n  .xl\\:clearfix:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  .xl\\:font-sans {\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue, -apple-system, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n  }\n\n  .xl\\:font-serif {\n    font-family: Constantia, Lucida Bright, Lucidabright, Lucida Serif, Lucida, DejaVu Serif, Bitstream Vera Serif, Liberation Serif, Georgia, serif;\n  }\n\n  .xl\\:font-mono {\n    font-family: Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;\n  }\n\n  .xl\\:font-hairline {\n    font-weight: 100;\n  }\n\n  .xl\\:font-thin {\n    font-weight: 200;\n  }\n\n  .xl\\:font-light {\n    font-weight: 300;\n  }\n\n  .xl\\:font-normal {\n    font-weight: 400;\n  }\n\n  .xl\\:font-medium {\n    font-weight: 500;\n  }\n\n  .xl\\:font-semibold {\n    font-weight: 600;\n  }\n\n  .xl\\:font-bold {\n    font-weight: 700;\n  }\n\n  .xl\\:font-extrabold {\n    font-weight: 800;\n  }\n\n  .xl\\:font-black {\n    font-weight: 900;\n  }\n\n  .xl\\:hover\\:font-hairline:hover {\n    font-weight: 100;\n  }\n\n  .xl\\:hover\\:font-thin:hover {\n    font-weight: 200;\n  }\n\n  .xl\\:hover\\:font-light:hover {\n    font-weight: 300;\n  }\n\n  .xl\\:hover\\:font-normal:hover {\n    font-weight: 400;\n  }\n\n  .xl\\:hover\\:font-medium:hover {\n    font-weight: 500;\n  }\n\n  .xl\\:hover\\:font-semibold:hover {\n    font-weight: 600;\n  }\n\n  .xl\\:hover\\:font-bold:hover {\n    font-weight: 700;\n  }\n\n  .xl\\:hover\\:font-extrabold:hover {\n    font-weight: 800;\n  }\n\n  .xl\\:hover\\:font-black:hover {\n    font-weight: 900;\n  }\n\n  .xl\\:focus\\:font-hairline:focus {\n    font-weight: 100;\n  }\n\n  .xl\\:focus\\:font-thin:focus {\n    font-weight: 200;\n  }\n\n  .xl\\:focus\\:font-light:focus {\n    font-weight: 300;\n  }\n\n  .xl\\:focus\\:font-normal:focus {\n    font-weight: 400;\n  }\n\n  .xl\\:focus\\:font-medium:focus {\n    font-weight: 500;\n  }\n\n  .xl\\:focus\\:font-semibold:focus {\n    font-weight: 600;\n  }\n\n  .xl\\:focus\\:font-bold:focus {\n    font-weight: 700;\n  }\n\n  .xl\\:focus\\:font-extrabold:focus {\n    font-weight: 800;\n  }\n\n  .xl\\:focus\\:font-black:focus {\n    font-weight: 900;\n  }\n\n  .xl\\:h-1 {\n    height: .25rem;\n  }\n\n  .xl\\:h-2 {\n    height: .5rem;\n  }\n\n  .xl\\:h-3 {\n    height: .75rem;\n  }\n\n  .xl\\:h-4 {\n    height: 1rem;\n  }\n\n  .xl\\:h-5 {\n    height: 1.25rem;\n  }\n\n  .xl\\:h-6 {\n    height: 1.5rem;\n  }\n\n  .xl\\:h-8 {\n    height: 2rem;\n  }\n\n  .xl\\:h-10 {\n    height: 2.5rem;\n  }\n\n  .xl\\:h-12 {\n    height: 3rem;\n  }\n\n  .xl\\:h-16 {\n    height: 4rem;\n  }\n\n  .xl\\:h-24 {\n    height: 6rem;\n  }\n\n  .xl\\:h-32 {\n    height: 8rem;\n  }\n\n  .xl\\:h-48 {\n    height: 12rem;\n  }\n\n  .xl\\:h-64 {\n    height: 16rem;\n  }\n\n  .xl\\:h-auto {\n    height: auto;\n  }\n\n  .xl\\:h-px {\n    height: 1px;\n  }\n\n  .xl\\:h-full {\n    height: 100%;\n  }\n\n  .xl\\:h-screen {\n    height: 100vh;\n  }\n\n  .xl\\:leading-none {\n    line-height: 1;\n  }\n\n  .xl\\:leading-tight {\n    line-height: 1.25;\n  }\n\n  .xl\\:leading-normal {\n    line-height: 1.5;\n  }\n\n  .xl\\:leading-loose {\n    line-height: 2;\n  }\n\n  .xl\\:m-0 {\n    margin: 0;\n  }\n\n  .xl\\:m-1 {\n    margin: .25rem;\n  }\n\n  .xl\\:m-2 {\n    margin: .5rem;\n  }\n\n  .xl\\:m-3 {\n    margin: .75rem;\n  }\n\n  .xl\\:m-4 {\n    margin: 1rem;\n  }\n\n  .xl\\:m-5 {\n    margin: 1.25rem;\n  }\n\n  .xl\\:m-6 {\n    margin: 1.5rem;\n  }\n\n  .xl\\:m-8 {\n    margin: 2rem;\n  }\n\n  .xl\\:m-10 {\n    margin: 2.5rem;\n  }\n\n  .xl\\:m-12 {\n    margin: 3rem;\n  }\n\n  .xl\\:m-16 {\n    margin: 4rem;\n  }\n\n  .xl\\:m-20 {\n    margin: 5rem;\n  }\n\n  .xl\\:m-24 {\n    margin: 6rem;\n  }\n\n  .xl\\:m-32 {\n    margin: 8rem;\n  }\n\n  .xl\\:m-auto {\n    margin: auto;\n  }\n\n  .xl\\:m-px {\n    margin: 1px;\n  }\n\n  .xl\\:my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .xl\\:mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .xl\\:my-1 {\n    margin-top: .25rem;\n    margin-bottom: .25rem;\n  }\n\n  .xl\\:mx-1 {\n    margin-left: .25rem;\n    margin-right: .25rem;\n  }\n\n  .xl\\:my-2 {\n    margin-top: .5rem;\n    margin-bottom: .5rem;\n  }\n\n  .xl\\:mx-2 {\n    margin-left: .5rem;\n    margin-right: .5rem;\n  }\n\n  .xl\\:my-3 {\n    margin-top: .75rem;\n    margin-bottom: .75rem;\n  }\n\n  .xl\\:mx-3 {\n    margin-left: .75rem;\n    margin-right: .75rem;\n  }\n\n  .xl\\:my-4 {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  .xl\\:mx-4 {\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n\n  .xl\\:my-5 {\n    margin-top: 1.25rem;\n    margin-bottom: 1.25rem;\n  }\n\n  .xl\\:mx-5 {\n    margin-left: 1.25rem;\n    margin-right: 1.25rem;\n  }\n\n  .xl\\:my-6 {\n    margin-top: 1.5rem;\n    margin-bottom: 1.5rem;\n  }\n\n  .xl\\:mx-6 {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  .xl\\:my-8 {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  .xl\\:mx-8 {\n    margin-left: 2rem;\n    margin-right: 2rem;\n  }\n\n  .xl\\:my-10 {\n    margin-top: 2.5rem;\n    margin-bottom: 2.5rem;\n  }\n\n  .xl\\:mx-10 {\n    margin-left: 2.5rem;\n    margin-right: 2.5rem;\n  }\n\n  .xl\\:my-12 {\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n  }\n\n  .xl\\:mx-12 {\n    margin-left: 3rem;\n    margin-right: 3rem;\n  }\n\n  .xl\\:my-16 {\n    margin-top: 4rem;\n    margin-bottom: 4rem;\n  }\n\n  .xl\\:mx-16 {\n    margin-left: 4rem;\n    margin-right: 4rem;\n  }\n\n  .xl\\:my-20 {\n    margin-top: 5rem;\n    margin-bottom: 5rem;\n  }\n\n  .xl\\:mx-20 {\n    margin-left: 5rem;\n    margin-right: 5rem;\n  }\n\n  .xl\\:my-24 {\n    margin-top: 6rem;\n    margin-bottom: 6rem;\n  }\n\n  .xl\\:mx-24 {\n    margin-left: 6rem;\n    margin-right: 6rem;\n  }\n\n  .xl\\:my-32 {\n    margin-top: 8rem;\n    margin-bottom: 8rem;\n  }\n\n  .xl\\:mx-32 {\n    margin-left: 8rem;\n    margin-right: 8rem;\n  }\n\n  .xl\\:my-auto {\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n\n  .xl\\:mx-auto {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .xl\\:my-px {\n    margin-top: 1px;\n    margin-bottom: 1px;\n  }\n\n  .xl\\:mx-px {\n    margin-left: 1px;\n    margin-right: 1px;\n  }\n\n  .xl\\:mt-0 {\n    margin-top: 0;\n  }\n\n  .xl\\:mr-0 {\n    margin-right: 0;\n  }\n\n  .xl\\:mb-0 {\n    margin-bottom: 0;\n  }\n\n  .xl\\:ml-0 {\n    margin-left: 0;\n  }\n\n  .xl\\:mt-1 {\n    margin-top: .25rem;\n  }\n\n  .xl\\:mr-1 {\n    margin-right: .25rem;\n  }\n\n  .xl\\:mb-1 {\n    margin-bottom: .25rem;\n  }\n\n  .xl\\:ml-1 {\n    margin-left: .25rem;\n  }\n\n  .xl\\:mt-2 {\n    margin-top: .5rem;\n  }\n\n  .xl\\:mr-2 {\n    margin-right: .5rem;\n  }\n\n  .xl\\:mb-2 {\n    margin-bottom: .5rem;\n  }\n\n  .xl\\:ml-2 {\n    margin-left: .5rem;\n  }\n\n  .xl\\:mt-3 {\n    margin-top: .75rem;\n  }\n\n  .xl\\:mr-3 {\n    margin-right: .75rem;\n  }\n\n  .xl\\:mb-3 {\n    margin-bottom: .75rem;\n  }\n\n  .xl\\:ml-3 {\n    margin-left: .75rem;\n  }\n\n  .xl\\:mt-4 {\n    margin-top: 1rem;\n  }\n\n  .xl\\:mr-4 {\n    margin-right: 1rem;\n  }\n\n  .xl\\:mb-4 {\n    margin-bottom: 1rem;\n  }\n\n  .xl\\:ml-4 {\n    margin-left: 1rem;\n  }\n\n  .xl\\:mt-5 {\n    margin-top: 1.25rem;\n  }\n\n  .xl\\:mr-5 {\n    margin-right: 1.25rem;\n  }\n\n  .xl\\:mb-5 {\n    margin-bottom: 1.25rem;\n  }\n\n  .xl\\:ml-5 {\n    margin-left: 1.25rem;\n  }\n\n  .xl\\:mt-6 {\n    margin-top: 1.5rem;\n  }\n\n  .xl\\:mr-6 {\n    margin-right: 1.5rem;\n  }\n\n  .xl\\:mb-6 {\n    margin-bottom: 1.5rem;\n  }\n\n  .xl\\:ml-6 {\n    margin-left: 1.5rem;\n  }\n\n  .xl\\:mt-8 {\n    margin-top: 2rem;\n  }\n\n  .xl\\:mr-8 {\n    margin-right: 2rem;\n  }\n\n  .xl\\:mb-8 {\n    margin-bottom: 2rem;\n  }\n\n  .xl\\:ml-8 {\n    margin-left: 2rem;\n  }\n\n  .xl\\:mt-10 {\n    margin-top: 2.5rem;\n  }\n\n  .xl\\:mr-10 {\n    margin-right: 2.5rem;\n  }\n\n  .xl\\:mb-10 {\n    margin-bottom: 2.5rem;\n  }\n\n  .xl\\:ml-10 {\n    margin-left: 2.5rem;\n  }\n\n  .xl\\:mt-12 {\n    margin-top: 3rem;\n  }\n\n  .xl\\:mr-12 {\n    margin-right: 3rem;\n  }\n\n  .xl\\:mb-12 {\n    margin-bottom: 3rem;\n  }\n\n  .xl\\:ml-12 {\n    margin-left: 3rem;\n  }\n\n  .xl\\:mt-16 {\n    margin-top: 4rem;\n  }\n\n  .xl\\:mr-16 {\n    margin-right: 4rem;\n  }\n\n  .xl\\:mb-16 {\n    margin-bottom: 4rem;\n  }\n\n  .xl\\:ml-16 {\n    margin-left: 4rem;\n  }\n\n  .xl\\:mt-20 {\n    margin-top: 5rem;\n  }\n\n  .xl\\:mr-20 {\n    margin-right: 5rem;\n  }\n\n  .xl\\:mb-20 {\n    margin-bottom: 5rem;\n  }\n\n  .xl\\:ml-20 {\n    margin-left: 5rem;\n  }\n\n  .xl\\:mt-24 {\n    margin-top: 6rem;\n  }\n\n  .xl\\:mr-24 {\n    margin-right: 6rem;\n  }\n\n  .xl\\:mb-24 {\n    margin-bottom: 6rem;\n  }\n\n  .xl\\:ml-24 {\n    margin-left: 6rem;\n  }\n\n  .xl\\:mt-32 {\n    margin-top: 8rem;\n  }\n\n  .xl\\:mr-32 {\n    margin-right: 8rem;\n  }\n\n  .xl\\:mb-32 {\n    margin-bottom: 8rem;\n  }\n\n  .xl\\:ml-32 {\n    margin-left: 8rem;\n  }\n\n  .xl\\:mt-auto {\n    margin-top: auto;\n  }\n\n  .xl\\:mr-auto {\n    margin-right: auto;\n  }\n\n  .xl\\:mb-auto {\n    margin-bottom: auto;\n  }\n\n  .xl\\:ml-auto {\n    margin-left: auto;\n  }\n\n  .xl\\:mt-px {\n    margin-top: 1px;\n  }\n\n  .xl\\:mr-px {\n    margin-right: 1px;\n  }\n\n  .xl\\:mb-px {\n    margin-bottom: 1px;\n  }\n\n  .xl\\:ml-px {\n    margin-left: 1px;\n  }\n\n  .xl\\:max-h-full {\n    max-height: 100%;\n  }\n\n  .xl\\:max-h-screen {\n    max-height: 100vh;\n  }\n\n  .xl\\:max-w-xs {\n    max-width: 20rem;\n  }\n\n  .xl\\:max-w-sm {\n    max-width: 30rem;\n  }\n\n  .xl\\:max-w-md {\n    max-width: 40rem;\n  }\n\n  .xl\\:max-w-lg {\n    max-width: 50rem;\n  }\n\n  .xl\\:max-w-xl {\n    max-width: 60rem;\n  }\n\n  .xl\\:max-w-2xl {\n    max-width: 70rem;\n  }\n\n  .xl\\:max-w-3xl {\n    max-width: 80rem;\n  }\n\n  .xl\\:max-w-4xl {\n    max-width: 90rem;\n  }\n\n  .xl\\:max-w-5xl {\n    max-width: 100rem;\n  }\n\n  .xl\\:max-w-full {\n    max-width: 100%;\n  }\n\n  .xl\\:min-h-0 {\n    min-height: 0;\n  }\n\n  .xl\\:min-h-full {\n    min-height: 100%;\n  }\n\n  .xl\\:min-h-screen {\n    min-height: 100vh;\n  }\n\n  .xl\\:min-w-0 {\n    min-width: 0;\n  }\n\n  .xl\\:min-w-full {\n    min-width: 100%;\n  }\n\n  .xl\\:-m-0 {\n    margin: 0;\n  }\n\n  .xl\\:-m-1 {\n    margin: -0.25rem;\n  }\n\n  .xl\\:-m-2 {\n    margin: -0.5rem;\n  }\n\n  .xl\\:-m-3 {\n    margin: -0.75rem;\n  }\n\n  .xl\\:-m-4 {\n    margin: -1rem;\n  }\n\n  .xl\\:-m-5 {\n    margin: -1.25rem;\n  }\n\n  .xl\\:-m-6 {\n    margin: -1.5rem;\n  }\n\n  .xl\\:-m-8 {\n    margin: -2rem;\n  }\n\n  .xl\\:-m-10 {\n    margin: -2.5rem;\n  }\n\n  .xl\\:-m-12 {\n    margin: -3rem;\n  }\n\n  .xl\\:-m-16 {\n    margin: -4rem;\n  }\n\n  .xl\\:-m-20 {\n    margin: -5rem;\n  }\n\n  .xl\\:-m-24 {\n    margin: -6rem;\n  }\n\n  .xl\\:-m-32 {\n    margin: -8rem;\n  }\n\n  .xl\\:-m-px {\n    margin: -1px;\n  }\n\n  .xl\\:-my-0 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .xl\\:-mx-0 {\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .xl\\:-my-1 {\n    margin-top: -0.25rem;\n    margin-bottom: -0.25rem;\n  }\n\n  .xl\\:-mx-1 {\n    margin-left: -0.25rem;\n    margin-right: -0.25rem;\n  }\n\n  .xl\\:-my-2 {\n    margin-top: -0.5rem;\n    margin-bottom: -0.5rem;\n  }\n\n  .xl\\:-mx-2 {\n    margin-left: -0.5rem;\n    margin-right: -0.5rem;\n  }\n\n  .xl\\:-my-3 {\n    margin-top: -0.75rem;\n    margin-bottom: -0.75rem;\n  }\n\n  .xl\\:-mx-3 {\n    margin-left: -0.75rem;\n    margin-right: -0.75rem;\n  }\n\n  .xl\\:-my-4 {\n    margin-top: -1rem;\n    margin-bottom: -1rem;\n  }\n\n  .xl\\:-mx-4 {\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n\n  .xl\\:-my-5 {\n    margin-top: -1.25rem;\n    margin-bottom: -1.25rem;\n  }\n\n  .xl\\:-mx-5 {\n    margin-left: -1.25rem;\n    margin-right: -1.25rem;\n  }\n\n  .xl\\:-my-6 {\n    margin-top: -1.5rem;\n    margin-bottom: -1.5rem;\n  }\n\n  .xl\\:-mx-6 {\n    margin-left: -1.5rem;\n    margin-right: -1.5rem;\n  }\n\n  .xl\\:-my-8 {\n    margin-top: -2rem;\n    margin-bottom: -2rem;\n  }\n\n  .xl\\:-mx-8 {\n    margin-left: -2rem;\n    margin-right: -2rem;\n  }\n\n  .xl\\:-my-10 {\n    margin-top: -2.5rem;\n    margin-bottom: -2.5rem;\n  }\n\n  .xl\\:-mx-10 {\n    margin-left: -2.5rem;\n    margin-right: -2.5rem;\n  }\n\n  .xl\\:-my-12 {\n    margin-top: -3rem;\n    margin-bottom: -3rem;\n  }\n\n  .xl\\:-mx-12 {\n    margin-left: -3rem;\n    margin-right: -3rem;\n  }\n\n  .xl\\:-my-16 {\n    margin-top: -4rem;\n    margin-bottom: -4rem;\n  }\n\n  .xl\\:-mx-16 {\n    margin-left: -4rem;\n    margin-right: -4rem;\n  }\n\n  .xl\\:-my-20 {\n    margin-top: -5rem;\n    margin-bottom: -5rem;\n  }\n\n  .xl\\:-mx-20 {\n    margin-left: -5rem;\n    margin-right: -5rem;\n  }\n\n  .xl\\:-my-24 {\n    margin-top: -6rem;\n    margin-bottom: -6rem;\n  }\n\n  .xl\\:-mx-24 {\n    margin-left: -6rem;\n    margin-right: -6rem;\n  }\n\n  .xl\\:-my-32 {\n    margin-top: -8rem;\n    margin-bottom: -8rem;\n  }\n\n  .xl\\:-mx-32 {\n    margin-left: -8rem;\n    margin-right: -8rem;\n  }\n\n  .xl\\:-my-px {\n    margin-top: -1px;\n    margin-bottom: -1px;\n  }\n\n  .xl\\:-mx-px {\n    margin-left: -1px;\n    margin-right: -1px;\n  }\n\n  .xl\\:-mt-0 {\n    margin-top: 0;\n  }\n\n  .xl\\:-mr-0 {\n    margin-right: 0;\n  }\n\n  .xl\\:-mb-0 {\n    margin-bottom: 0;\n  }\n\n  .xl\\:-ml-0 {\n    margin-left: 0;\n  }\n\n  .xl\\:-mt-1 {\n    margin-top: -0.25rem;\n  }\n\n  .xl\\:-mr-1 {\n    margin-right: -0.25rem;\n  }\n\n  .xl\\:-mb-1 {\n    margin-bottom: -0.25rem;\n  }\n\n  .xl\\:-ml-1 {\n    margin-left: -0.25rem;\n  }\n\n  .xl\\:-mt-2 {\n    margin-top: -0.5rem;\n  }\n\n  .xl\\:-mr-2 {\n    margin-right: -0.5rem;\n  }\n\n  .xl\\:-mb-2 {\n    margin-bottom: -0.5rem;\n  }\n\n  .xl\\:-ml-2 {\n    margin-left: -0.5rem;\n  }\n\n  .xl\\:-mt-3 {\n    margin-top: -0.75rem;\n  }\n\n  .xl\\:-mr-3 {\n    margin-right: -0.75rem;\n  }\n\n  .xl\\:-mb-3 {\n    margin-bottom: -0.75rem;\n  }\n\n  .xl\\:-ml-3 {\n    margin-left: -0.75rem;\n  }\n\n  .xl\\:-mt-4 {\n    margin-top: -1rem;\n  }\n\n  .xl\\:-mr-4 {\n    margin-right: -1rem;\n  }\n\n  .xl\\:-mb-4 {\n    margin-bottom: -1rem;\n  }\n\n  .xl\\:-ml-4 {\n    margin-left: -1rem;\n  }\n\n  .xl\\:-mt-5 {\n    margin-top: -1.25rem;\n  }\n\n  .xl\\:-mr-5 {\n    margin-right: -1.25rem;\n  }\n\n  .xl\\:-mb-5 {\n    margin-bottom: -1.25rem;\n  }\n\n  .xl\\:-ml-5 {\n    margin-left: -1.25rem;\n  }\n\n  .xl\\:-mt-6 {\n    margin-top: -1.5rem;\n  }\n\n  .xl\\:-mr-6 {\n    margin-right: -1.5rem;\n  }\n\n  .xl\\:-mb-6 {\n    margin-bottom: -1.5rem;\n  }\n\n  .xl\\:-ml-6 {\n    margin-left: -1.5rem;\n  }\n\n  .xl\\:-mt-8 {\n    margin-top: -2rem;\n  }\n\n  .xl\\:-mr-8 {\n    margin-right: -2rem;\n  }\n\n  .xl\\:-mb-8 {\n    margin-bottom: -2rem;\n  }\n\n  .xl\\:-ml-8 {\n    margin-left: -2rem;\n  }\n\n  .xl\\:-mt-10 {\n    margin-top: -2.5rem;\n  }\n\n  .xl\\:-mr-10 {\n    margin-right: -2.5rem;\n  }\n\n  .xl\\:-mb-10 {\n    margin-bottom: -2.5rem;\n  }\n\n  .xl\\:-ml-10 {\n    margin-left: -2.5rem;\n  }\n\n  .xl\\:-mt-12 {\n    margin-top: -3rem;\n  }\n\n  .xl\\:-mr-12 {\n    margin-right: -3rem;\n  }\n\n  .xl\\:-mb-12 {\n    margin-bottom: -3rem;\n  }\n\n  .xl\\:-ml-12 {\n    margin-left: -3rem;\n  }\n\n  .xl\\:-mt-16 {\n    margin-top: -4rem;\n  }\n\n  .xl\\:-mr-16 {\n    margin-right: -4rem;\n  }\n\n  .xl\\:-mb-16 {\n    margin-bottom: -4rem;\n  }\n\n  .xl\\:-ml-16 {\n    margin-left: -4rem;\n  }\n\n  .xl\\:-mt-20 {\n    margin-top: -5rem;\n  }\n\n  .xl\\:-mr-20 {\n    margin-right: -5rem;\n  }\n\n  .xl\\:-mb-20 {\n    margin-bottom: -5rem;\n  }\n\n  .xl\\:-ml-20 {\n    margin-left: -5rem;\n  }\n\n  .xl\\:-mt-24 {\n    margin-top: -6rem;\n  }\n\n  .xl\\:-mr-24 {\n    margin-right: -6rem;\n  }\n\n  .xl\\:-mb-24 {\n    margin-bottom: -6rem;\n  }\n\n  .xl\\:-ml-24 {\n    margin-left: -6rem;\n  }\n\n  .xl\\:-mt-32 {\n    margin-top: -8rem;\n  }\n\n  .xl\\:-mr-32 {\n    margin-right: -8rem;\n  }\n\n  .xl\\:-mb-32 {\n    margin-bottom: -8rem;\n  }\n\n  .xl\\:-ml-32 {\n    margin-left: -8rem;\n  }\n\n  .xl\\:-mt-px {\n    margin-top: -1px;\n  }\n\n  .xl\\:-mr-px {\n    margin-right: -1px;\n  }\n\n  .xl\\:-mb-px {\n    margin-bottom: -1px;\n  }\n\n  .xl\\:-ml-px {\n    margin-left: -1px;\n  }\n\n  .xl\\:opacity-0 {\n    opacity: 0;\n  }\n\n  .xl\\:opacity-25 {\n    opacity: .25;\n  }\n\n  .xl\\:opacity-50 {\n    opacity: .5;\n  }\n\n  .xl\\:opacity-75 {\n    opacity: .75;\n  }\n\n  .xl\\:opacity-100 {\n    opacity: 1;\n  }\n\n  .xl\\:overflow-auto {\n    overflow: auto;\n  }\n\n  .xl\\:overflow-hidden {\n    overflow: hidden;\n  }\n\n  .xl\\:overflow-visible {\n    overflow: visible;\n  }\n\n  .xl\\:overflow-scroll {\n    overflow: scroll;\n  }\n\n  .xl\\:overflow-x-auto {\n    overflow-x: auto;\n  }\n\n  .xl\\:overflow-y-auto {\n    overflow-y: auto;\n  }\n\n  .xl\\:overflow-x-hidden {\n    overflow-x: hidden;\n  }\n\n  .xl\\:overflow-y-hidden {\n    overflow-y: hidden;\n  }\n\n  .xl\\:overflow-x-visible {\n    overflow-x: visible;\n  }\n\n  .xl\\:overflow-y-visible {\n    overflow-y: visible;\n  }\n\n  .xl\\:overflow-x-scroll {\n    overflow-x: scroll;\n  }\n\n  .xl\\:overflow-y-scroll {\n    overflow-y: scroll;\n  }\n\n  .xl\\:scrolling-touch {\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .xl\\:scrolling-auto {\n    -webkit-overflow-scrolling: auto;\n  }\n\n  .xl\\:p-0 {\n    padding: 0;\n  }\n\n  .xl\\:p-1 {\n    padding: .25rem;\n  }\n\n  .xl\\:p-2 {\n    padding: .5rem;\n  }\n\n  .xl\\:p-3 {\n    padding: .75rem;\n  }\n\n  .xl\\:p-4 {\n    padding: 1rem;\n  }\n\n  .xl\\:p-5 {\n    padding: 1.25rem;\n  }\n\n  .xl\\:p-6 {\n    padding: 1.5rem;\n  }\n\n  .xl\\:p-8 {\n    padding: 2rem;\n  }\n\n  .xl\\:p-10 {\n    padding: 2.5rem;\n  }\n\n  .xl\\:p-12 {\n    padding: 3rem;\n  }\n\n  .xl\\:p-16 {\n    padding: 4rem;\n  }\n\n  .xl\\:p-20 {\n    padding: 5rem;\n  }\n\n  .xl\\:p-24 {\n    padding: 6rem;\n  }\n\n  .xl\\:p-32 {\n    padding: 8rem;\n  }\n\n  .xl\\:p-px {\n    padding: 1px;\n  }\n\n  .xl\\:py-0 {\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n\n  .xl\\:px-0 {\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  .xl\\:py-1 {\n    padding-top: .25rem;\n    padding-bottom: .25rem;\n  }\n\n  .xl\\:px-1 {\n    padding-left: .25rem;\n    padding-right: .25rem;\n  }\n\n  .xl\\:py-2 {\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n  }\n\n  .xl\\:px-2 {\n    padding-left: .5rem;\n    padding-right: .5rem;\n  }\n\n  .xl\\:py-3 {\n    padding-top: .75rem;\n    padding-bottom: .75rem;\n  }\n\n  .xl\\:px-3 {\n    padding-left: .75rem;\n    padding-right: .75rem;\n  }\n\n  .xl\\:py-4 {\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n\n  .xl\\:px-4 {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  .xl\\:py-5 {\n    padding-top: 1.25rem;\n    padding-bottom: 1.25rem;\n  }\n\n  .xl\\:px-5 {\n    padding-left: 1.25rem;\n    padding-right: 1.25rem;\n  }\n\n  .xl\\:py-6 {\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n  }\n\n  .xl\\:px-6 {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n\n  .xl\\:py-8 {\n    padding-top: 2rem;\n    padding-bottom: 2rem;\n  }\n\n  .xl\\:px-8 {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  .xl\\:py-10 {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n\n  .xl\\:px-10 {\n    padding-left: 2.5rem;\n    padding-right: 2.5rem;\n  }\n\n  .xl\\:py-12 {\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n  }\n\n  .xl\\:px-12 {\n    padding-left: 3rem;\n    padding-right: 3rem;\n  }\n\n  .xl\\:py-16 {\n    padding-top: 4rem;\n    padding-bottom: 4rem;\n  }\n\n  .xl\\:px-16 {\n    padding-left: 4rem;\n    padding-right: 4rem;\n  }\n\n  .xl\\:py-20 {\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n  }\n\n  .xl\\:px-20 {\n    padding-left: 5rem;\n    padding-right: 5rem;\n  }\n\n  .xl\\:py-24 {\n    padding-top: 6rem;\n    padding-bottom: 6rem;\n  }\n\n  .xl\\:px-24 {\n    padding-left: 6rem;\n    padding-right: 6rem;\n  }\n\n  .xl\\:py-32 {\n    padding-top: 8rem;\n    padding-bottom: 8rem;\n  }\n\n  .xl\\:px-32 {\n    padding-left: 8rem;\n    padding-right: 8rem;\n  }\n\n  .xl\\:py-px {\n    padding-top: 1px;\n    padding-bottom: 1px;\n  }\n\n  .xl\\:px-px {\n    padding-left: 1px;\n    padding-right: 1px;\n  }\n\n  .xl\\:pt-0 {\n    padding-top: 0;\n  }\n\n  .xl\\:pr-0 {\n    padding-right: 0;\n  }\n\n  .xl\\:pb-0 {\n    padding-bottom: 0;\n  }\n\n  .xl\\:pl-0 {\n    padding-left: 0;\n  }\n\n  .xl\\:pt-1 {\n    padding-top: .25rem;\n  }\n\n  .xl\\:pr-1 {\n    padding-right: .25rem;\n  }\n\n  .xl\\:pb-1 {\n    padding-bottom: .25rem;\n  }\n\n  .xl\\:pl-1 {\n    padding-left: .25rem;\n  }\n\n  .xl\\:pt-2 {\n    padding-top: .5rem;\n  }\n\n  .xl\\:pr-2 {\n    padding-right: .5rem;\n  }\n\n  .xl\\:pb-2 {\n    padding-bottom: .5rem;\n  }\n\n  .xl\\:pl-2 {\n    padding-left: .5rem;\n  }\n\n  .xl\\:pt-3 {\n    padding-top: .75rem;\n  }\n\n  .xl\\:pr-3 {\n    padding-right: .75rem;\n  }\n\n  .xl\\:pb-3 {\n    padding-bottom: .75rem;\n  }\n\n  .xl\\:pl-3 {\n    padding-left: .75rem;\n  }\n\n  .xl\\:pt-4 {\n    padding-top: 1rem;\n  }\n\n  .xl\\:pr-4 {\n    padding-right: 1rem;\n  }\n\n  .xl\\:pb-4 {\n    padding-bottom: 1rem;\n  }\n\n  .xl\\:pl-4 {\n    padding-left: 1rem;\n  }\n\n  .xl\\:pt-5 {\n    padding-top: 1.25rem;\n  }\n\n  .xl\\:pr-5 {\n    padding-right: 1.25rem;\n  }\n\n  .xl\\:pb-5 {\n    padding-bottom: 1.25rem;\n  }\n\n  .xl\\:pl-5 {\n    padding-left: 1.25rem;\n  }\n\n  .xl\\:pt-6 {\n    padding-top: 1.5rem;\n  }\n\n  .xl\\:pr-6 {\n    padding-right: 1.5rem;\n  }\n\n  .xl\\:pb-6 {\n    padding-bottom: 1.5rem;\n  }\n\n  .xl\\:pl-6 {\n    padding-left: 1.5rem;\n  }\n\n  .xl\\:pt-8 {\n    padding-top: 2rem;\n  }\n\n  .xl\\:pr-8 {\n    padding-right: 2rem;\n  }\n\n  .xl\\:pb-8 {\n    padding-bottom: 2rem;\n  }\n\n  .xl\\:pl-8 {\n    padding-left: 2rem;\n  }\n\n  .xl\\:pt-10 {\n    padding-top: 2.5rem;\n  }\n\n  .xl\\:pr-10 {\n    padding-right: 2.5rem;\n  }\n\n  .xl\\:pb-10 {\n    padding-bottom: 2.5rem;\n  }\n\n  .xl\\:pl-10 {\n    padding-left: 2.5rem;\n  }\n\n  .xl\\:pt-12 {\n    padding-top: 3rem;\n  }\n\n  .xl\\:pr-12 {\n    padding-right: 3rem;\n  }\n\n  .xl\\:pb-12 {\n    padding-bottom: 3rem;\n  }\n\n  .xl\\:pl-12 {\n    padding-left: 3rem;\n  }\n\n  .xl\\:pt-16 {\n    padding-top: 4rem;\n  }\n\n  .xl\\:pr-16 {\n    padding-right: 4rem;\n  }\n\n  .xl\\:pb-16 {\n    padding-bottom: 4rem;\n  }\n\n  .xl\\:pl-16 {\n    padding-left: 4rem;\n  }\n\n  .xl\\:pt-20 {\n    padding-top: 5rem;\n  }\n\n  .xl\\:pr-20 {\n    padding-right: 5rem;\n  }\n\n  .xl\\:pb-20 {\n    padding-bottom: 5rem;\n  }\n\n  .xl\\:pl-20 {\n    padding-left: 5rem;\n  }\n\n  .xl\\:pt-24 {\n    padding-top: 6rem;\n  }\n\n  .xl\\:pr-24 {\n    padding-right: 6rem;\n  }\n\n  .xl\\:pb-24 {\n    padding-bottom: 6rem;\n  }\n\n  .xl\\:pl-24 {\n    padding-left: 6rem;\n  }\n\n  .xl\\:pt-32 {\n    padding-top: 8rem;\n  }\n\n  .xl\\:pr-32 {\n    padding-right: 8rem;\n  }\n\n  .xl\\:pb-32 {\n    padding-bottom: 8rem;\n  }\n\n  .xl\\:pl-32 {\n    padding-left: 8rem;\n  }\n\n  .xl\\:pt-px {\n    padding-top: 1px;\n  }\n\n  .xl\\:pr-px {\n    padding-right: 1px;\n  }\n\n  .xl\\:pb-px {\n    padding-bottom: 1px;\n  }\n\n  .xl\\:pl-px {\n    padding-left: 1px;\n  }\n\n  .xl\\:pointer-events-none {\n    pointer-events: none;\n  }\n\n  .xl\\:pointer-events-auto {\n    pointer-events: auto;\n  }\n\n  .xl\\:static {\n    position: static;\n  }\n\n  .xl\\:fixed {\n    position: fixed;\n  }\n\n  .xl\\:absolute {\n    position: absolute;\n  }\n\n  .xl\\:relative {\n    position: relative;\n  }\n\n  .xl\\:sticky {\n    position: -webkit-sticky;\n    position: sticky;\n  }\n\n  .xl\\:pin-none {\n    top: auto;\n    right: auto;\n    bottom: auto;\n    left: auto;\n  }\n\n  .xl\\:pin {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  .xl\\:pin-y {\n    top: 0;\n    bottom: 0;\n  }\n\n  .xl\\:pin-x {\n    right: 0;\n    left: 0;\n  }\n\n  .xl\\:pin-t {\n    top: 0;\n  }\n\n  .xl\\:pin-r {\n    right: 0;\n  }\n\n  .xl\\:pin-b {\n    bottom: 0;\n  }\n\n  .xl\\:pin-l {\n    left: 0;\n  }\n\n  .xl\\:resize-none {\n    resize: none;\n  }\n\n  .xl\\:resize-y {\n    resize: vertical;\n  }\n\n  .xl\\:resize-x {\n    resize: horizontal;\n  }\n\n  .xl\\:resize {\n    resize: both;\n  }\n\n  .xl\\:shadow {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .xl\\:shadow-md {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .xl\\:shadow-lg {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .xl\\:shadow-inner {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .xl\\:shadow-outline {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .xl\\:shadow-none {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .xl\\:hover\\:shadow:hover {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .xl\\:hover\\:shadow-md:hover {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .xl\\:hover\\:shadow-lg:hover {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .xl\\:hover\\:shadow-inner:hover {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .xl\\:hover\\:shadow-outline:hover {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .xl\\:hover\\:shadow-none:hover {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .xl\\:focus\\:shadow:focus {\n    -webkit-box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .1);\n  }\n\n  .xl\\:focus\\:shadow-md:focus {\n    -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .12), 0 2px 4px 0 rgba(0, 0, 0, .08);\n  }\n\n  .xl\\:focus\\:shadow-lg:focus {\n    -webkit-box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n            box-shadow: 0 15px 30px 0 rgba(0, 0, 0, .11), 0 5px 15px 0 rgba(0, 0, 0, .08);\n  }\n\n  .xl\\:focus\\:shadow-inner:focus {\n    -webkit-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n            box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, .06);\n  }\n\n  .xl\\:focus\\:shadow-outline:focus {\n    -webkit-box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n            box-shadow: 0 0 0 3px rgba(52, 144, 220, .5);\n  }\n\n  .xl\\:focus\\:shadow-none:focus {\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  .xl\\:table-auto {\n    table-layout: auto;\n  }\n\n  .xl\\:table-fixed {\n    table-layout: fixed;\n  }\n\n  .xl\\:text-left {\n    text-align: left;\n  }\n\n  .xl\\:text-center {\n    text-align: center;\n  }\n\n  .xl\\:text-right {\n    text-align: right;\n  }\n\n  .xl\\:text-justify {\n    text-align: justify;\n  }\n\n  .xl\\:text-transparent {\n    color: transparent;\n  }\n\n  .xl\\:text-black {\n    color: #22292f;\n  }\n\n  .xl\\:text-grey-darkest {\n    color: #3d4852;\n  }\n\n  .xl\\:text-grey-darker {\n    color: #606f7b;\n  }\n\n  .xl\\:text-grey-dark {\n    color: #8795a1;\n  }\n\n  .xl\\:text-grey {\n    color: #b8c2cc;\n  }\n\n  .xl\\:text-grey-light {\n    color: #dae1e7;\n  }\n\n  .xl\\:text-grey-lighter {\n    color: #f1f5f8;\n  }\n\n  .xl\\:text-grey-lightest {\n    color: #f8fafc;\n  }\n\n  .xl\\:text-white {\n    color: #fff;\n  }\n\n  .xl\\:text-red-darkest {\n    color: #3b0d0c;\n  }\n\n  .xl\\:text-red-darker {\n    color: #621b18;\n  }\n\n  .xl\\:text-red-dark {\n    color: #cc1f1a;\n  }\n\n  .xl\\:text-red {\n    color: #e3342f;\n  }\n\n  .xl\\:text-red-light {\n    color: #ef5753;\n  }\n\n  .xl\\:text-red-lighter {\n    color: #f9acaa;\n  }\n\n  .xl\\:text-red-lightest {\n    color: #fcebea;\n  }\n\n  .xl\\:text-orange-darkest {\n    color: #462a16;\n  }\n\n  .xl\\:text-orange-darker {\n    color: #613b1f;\n  }\n\n  .xl\\:text-orange-dark {\n    color: #de751f;\n  }\n\n  .xl\\:text-orange {\n    color: #f6993f;\n  }\n\n  .xl\\:text-orange-light {\n    color: #faad63;\n  }\n\n  .xl\\:text-orange-lighter {\n    color: #fcd9b6;\n  }\n\n  .xl\\:text-orange-lightest {\n    color: #fff5eb;\n  }\n\n  .xl\\:text-yellow-darkest {\n    color: #453411;\n  }\n\n  .xl\\:text-yellow-darker {\n    color: #684f1d;\n  }\n\n  .xl\\:text-yellow-dark {\n    color: #f2d024;\n  }\n\n  .xl\\:text-yellow {\n    color: #ffed4a;\n  }\n\n  .xl\\:text-yellow-light {\n    color: #fff382;\n  }\n\n  .xl\\:text-yellow-lighter {\n    color: #fff9c2;\n  }\n\n  .xl\\:text-yellow-lightest {\n    color: #fcfbeb;\n  }\n\n  .xl\\:text-green-darkest {\n    color: #0f2f21;\n  }\n\n  .xl\\:text-green-darker {\n    color: #1a4731;\n  }\n\n  .xl\\:text-green-dark {\n    color: #1f9d55;\n  }\n\n  .xl\\:text-green {\n    color: #38c172;\n  }\n\n  .xl\\:text-green-light {\n    color: #51d88a;\n  }\n\n  .xl\\:text-green-lighter {\n    color: #a2f5bf;\n  }\n\n  .xl\\:text-green-lightest {\n    color: #e3fcec;\n  }\n\n  .xl\\:text-teal-darkest {\n    color: #0d3331;\n  }\n\n  .xl\\:text-teal-darker {\n    color: #20504f;\n  }\n\n  .xl\\:text-teal-dark {\n    color: #38a89d;\n  }\n\n  .xl\\:text-teal {\n    color: #4dc0b5;\n  }\n\n  .xl\\:text-teal-light {\n    color: #64d5ca;\n  }\n\n  .xl\\:text-teal-lighter {\n    color: #a0f0ed;\n  }\n\n  .xl\\:text-teal-lightest {\n    color: #e8fffe;\n  }\n\n  .xl\\:text-blue-darkest {\n    color: #12283a;\n  }\n\n  .xl\\:text-blue-darker {\n    color: #1c3d5a;\n  }\n\n  .xl\\:text-blue-dark {\n    color: #2779bd;\n  }\n\n  .xl\\:text-blue {\n    color: #3490dc;\n  }\n\n  .xl\\:text-blue-light {\n    color: #6cb2eb;\n  }\n\n  .xl\\:text-blue-lighter {\n    color: #bcdefa;\n  }\n\n  .xl\\:text-blue-lightest {\n    color: #eff8ff;\n  }\n\n  .xl\\:text-indigo-darkest {\n    color: #191e38;\n  }\n\n  .xl\\:text-indigo-darker {\n    color: #2f365f;\n  }\n\n  .xl\\:text-indigo-dark {\n    color: #5661b3;\n  }\n\n  .xl\\:text-indigo {\n    color: #6574cd;\n  }\n\n  .xl\\:text-indigo-light {\n    color: #7886d7;\n  }\n\n  .xl\\:text-indigo-lighter {\n    color: #b2b7ff;\n  }\n\n  .xl\\:text-indigo-lightest {\n    color: #e6e8ff;\n  }\n\n  .xl\\:text-purple-darkest {\n    color: #21183c;\n  }\n\n  .xl\\:text-purple-darker {\n    color: #382b5f;\n  }\n\n  .xl\\:text-purple-dark {\n    color: #794acf;\n  }\n\n  .xl\\:text-purple {\n    color: #9561e2;\n  }\n\n  .xl\\:text-purple-light {\n    color: #a779e9;\n  }\n\n  .xl\\:text-purple-lighter {\n    color: #d6bbfc;\n  }\n\n  .xl\\:text-purple-lightest {\n    color: #f3ebff;\n  }\n\n  .xl\\:text-pink-darkest {\n    color: #451225;\n  }\n\n  .xl\\:text-pink-darker {\n    color: #6f213f;\n  }\n\n  .xl\\:text-pink-dark {\n    color: #eb5286;\n  }\n\n  .xl\\:text-pink {\n    color: #f66d9b;\n  }\n\n  .xl\\:text-pink-light {\n    color: #fa7ea8;\n  }\n\n  .xl\\:text-pink-lighter {\n    color: #ffbbca;\n  }\n\n  .xl\\:text-pink-lightest {\n    color: #ffebef;\n  }\n\n  .xl\\:hover\\:text-transparent:hover {\n    color: transparent;\n  }\n\n  .xl\\:hover\\:text-black:hover {\n    color: #22292f;\n  }\n\n  .xl\\:hover\\:text-grey-darkest:hover {\n    color: #3d4852;\n  }\n\n  .xl\\:hover\\:text-grey-darker:hover {\n    color: #606f7b;\n  }\n\n  .xl\\:hover\\:text-grey-dark:hover {\n    color: #8795a1;\n  }\n\n  .xl\\:hover\\:text-grey:hover {\n    color: #b8c2cc;\n  }\n\n  .xl\\:hover\\:text-grey-light:hover {\n    color: #dae1e7;\n  }\n\n  .xl\\:hover\\:text-grey-lighter:hover {\n    color: #f1f5f8;\n  }\n\n  .xl\\:hover\\:text-grey-lightest:hover {\n    color: #f8fafc;\n  }\n\n  .xl\\:hover\\:text-white:hover {\n    color: #fff;\n  }\n\n  .xl\\:hover\\:text-red-darkest:hover {\n    color: #3b0d0c;\n  }\n\n  .xl\\:hover\\:text-red-darker:hover {\n    color: #621b18;\n  }\n\n  .xl\\:hover\\:text-red-dark:hover {\n    color: #cc1f1a;\n  }\n\n  .xl\\:hover\\:text-red:hover {\n    color: #e3342f;\n  }\n\n  .xl\\:hover\\:text-red-light:hover {\n    color: #ef5753;\n  }\n\n  .xl\\:hover\\:text-red-lighter:hover {\n    color: #f9acaa;\n  }\n\n  .xl\\:hover\\:text-red-lightest:hover {\n    color: #fcebea;\n  }\n\n  .xl\\:hover\\:text-orange-darkest:hover {\n    color: #462a16;\n  }\n\n  .xl\\:hover\\:text-orange-darker:hover {\n    color: #613b1f;\n  }\n\n  .xl\\:hover\\:text-orange-dark:hover {\n    color: #de751f;\n  }\n\n  .xl\\:hover\\:text-orange:hover {\n    color: #f6993f;\n  }\n\n  .xl\\:hover\\:text-orange-light:hover {\n    color: #faad63;\n  }\n\n  .xl\\:hover\\:text-orange-lighter:hover {\n    color: #fcd9b6;\n  }\n\n  .xl\\:hover\\:text-orange-lightest:hover {\n    color: #fff5eb;\n  }\n\n  .xl\\:hover\\:text-yellow-darkest:hover {\n    color: #453411;\n  }\n\n  .xl\\:hover\\:text-yellow-darker:hover {\n    color: #684f1d;\n  }\n\n  .xl\\:hover\\:text-yellow-dark:hover {\n    color: #f2d024;\n  }\n\n  .xl\\:hover\\:text-yellow:hover {\n    color: #ffed4a;\n  }\n\n  .xl\\:hover\\:text-yellow-light:hover {\n    color: #fff382;\n  }\n\n  .xl\\:hover\\:text-yellow-lighter:hover {\n    color: #fff9c2;\n  }\n\n  .xl\\:hover\\:text-yellow-lightest:hover {\n    color: #fcfbeb;\n  }\n\n  .xl\\:hover\\:text-green-darkest:hover {\n    color: #0f2f21;\n  }\n\n  .xl\\:hover\\:text-green-darker:hover {\n    color: #1a4731;\n  }\n\n  .xl\\:hover\\:text-green-dark:hover {\n    color: #1f9d55;\n  }\n\n  .xl\\:hover\\:text-green:hover {\n    color: #38c172;\n  }\n\n  .xl\\:hover\\:text-green-light:hover {\n    color: #51d88a;\n  }\n\n  .xl\\:hover\\:text-green-lighter:hover {\n    color: #a2f5bf;\n  }\n\n  .xl\\:hover\\:text-green-lightest:hover {\n    color: #e3fcec;\n  }\n\n  .xl\\:hover\\:text-teal-darkest:hover {\n    color: #0d3331;\n  }\n\n  .xl\\:hover\\:text-teal-darker:hover {\n    color: #20504f;\n  }\n\n  .xl\\:hover\\:text-teal-dark:hover {\n    color: #38a89d;\n  }\n\n  .xl\\:hover\\:text-teal:hover {\n    color: #4dc0b5;\n  }\n\n  .xl\\:hover\\:text-teal-light:hover {\n    color: #64d5ca;\n  }\n\n  .xl\\:hover\\:text-teal-lighter:hover {\n    color: #a0f0ed;\n  }\n\n  .xl\\:hover\\:text-teal-lightest:hover {\n    color: #e8fffe;\n  }\n\n  .xl\\:hover\\:text-blue-darkest:hover {\n    color: #12283a;\n  }\n\n  .xl\\:hover\\:text-blue-darker:hover {\n    color: #1c3d5a;\n  }\n\n  .xl\\:hover\\:text-blue-dark:hover {\n    color: #2779bd;\n  }\n\n  .xl\\:hover\\:text-blue:hover {\n    color: #3490dc;\n  }\n\n  .xl\\:hover\\:text-blue-light:hover {\n    color: #6cb2eb;\n  }\n\n  .xl\\:hover\\:text-blue-lighter:hover {\n    color: #bcdefa;\n  }\n\n  .xl\\:hover\\:text-blue-lightest:hover {\n    color: #eff8ff;\n  }\n\n  .xl\\:hover\\:text-indigo-darkest:hover {\n    color: #191e38;\n  }\n\n  .xl\\:hover\\:text-indigo-darker:hover {\n    color: #2f365f;\n  }\n\n  .xl\\:hover\\:text-indigo-dark:hover {\n    color: #5661b3;\n  }\n\n  .xl\\:hover\\:text-indigo:hover {\n    color: #6574cd;\n  }\n\n  .xl\\:hover\\:text-indigo-light:hover {\n    color: #7886d7;\n  }\n\n  .xl\\:hover\\:text-indigo-lighter:hover {\n    color: #b2b7ff;\n  }\n\n  .xl\\:hover\\:text-indigo-lightest:hover {\n    color: #e6e8ff;\n  }\n\n  .xl\\:hover\\:text-purple-darkest:hover {\n    color: #21183c;\n  }\n\n  .xl\\:hover\\:text-purple-darker:hover {\n    color: #382b5f;\n  }\n\n  .xl\\:hover\\:text-purple-dark:hover {\n    color: #794acf;\n  }\n\n  .xl\\:hover\\:text-purple:hover {\n    color: #9561e2;\n  }\n\n  .xl\\:hover\\:text-purple-light:hover {\n    color: #a779e9;\n  }\n\n  .xl\\:hover\\:text-purple-lighter:hover {\n    color: #d6bbfc;\n  }\n\n  .xl\\:hover\\:text-purple-lightest:hover {\n    color: #f3ebff;\n  }\n\n  .xl\\:hover\\:text-pink-darkest:hover {\n    color: #451225;\n  }\n\n  .xl\\:hover\\:text-pink-darker:hover {\n    color: #6f213f;\n  }\n\n  .xl\\:hover\\:text-pink-dark:hover {\n    color: #eb5286;\n  }\n\n  .xl\\:hover\\:text-pink:hover {\n    color: #f66d9b;\n  }\n\n  .xl\\:hover\\:text-pink-light:hover {\n    color: #fa7ea8;\n  }\n\n  .xl\\:hover\\:text-pink-lighter:hover {\n    color: #ffbbca;\n  }\n\n  .xl\\:hover\\:text-pink-lightest:hover {\n    color: #ffebef;\n  }\n\n  .xl\\:focus\\:text-transparent:focus {\n    color: transparent;\n  }\n\n  .xl\\:focus\\:text-black:focus {\n    color: #22292f;\n  }\n\n  .xl\\:focus\\:text-grey-darkest:focus {\n    color: #3d4852;\n  }\n\n  .xl\\:focus\\:text-grey-darker:focus {\n    color: #606f7b;\n  }\n\n  .xl\\:focus\\:text-grey-dark:focus {\n    color: #8795a1;\n  }\n\n  .xl\\:focus\\:text-grey:focus {\n    color: #b8c2cc;\n  }\n\n  .xl\\:focus\\:text-grey-light:focus {\n    color: #dae1e7;\n  }\n\n  .xl\\:focus\\:text-grey-lighter:focus {\n    color: #f1f5f8;\n  }\n\n  .xl\\:focus\\:text-grey-lightest:focus {\n    color: #f8fafc;\n  }\n\n  .xl\\:focus\\:text-white:focus {\n    color: #fff;\n  }\n\n  .xl\\:focus\\:text-red-darkest:focus {\n    color: #3b0d0c;\n  }\n\n  .xl\\:focus\\:text-red-darker:focus {\n    color: #621b18;\n  }\n\n  .xl\\:focus\\:text-red-dark:focus {\n    color: #cc1f1a;\n  }\n\n  .xl\\:focus\\:text-red:focus {\n    color: #e3342f;\n  }\n\n  .xl\\:focus\\:text-red-light:focus {\n    color: #ef5753;\n  }\n\n  .xl\\:focus\\:text-red-lighter:focus {\n    color: #f9acaa;\n  }\n\n  .xl\\:focus\\:text-red-lightest:focus {\n    color: #fcebea;\n  }\n\n  .xl\\:focus\\:text-orange-darkest:focus {\n    color: #462a16;\n  }\n\n  .xl\\:focus\\:text-orange-darker:focus {\n    color: #613b1f;\n  }\n\n  .xl\\:focus\\:text-orange-dark:focus {\n    color: #de751f;\n  }\n\n  .xl\\:focus\\:text-orange:focus {\n    color: #f6993f;\n  }\n\n  .xl\\:focus\\:text-orange-light:focus {\n    color: #faad63;\n  }\n\n  .xl\\:focus\\:text-orange-lighter:focus {\n    color: #fcd9b6;\n  }\n\n  .xl\\:focus\\:text-orange-lightest:focus {\n    color: #fff5eb;\n  }\n\n  .xl\\:focus\\:text-yellow-darkest:focus {\n    color: #453411;\n  }\n\n  .xl\\:focus\\:text-yellow-darker:focus {\n    color: #684f1d;\n  }\n\n  .xl\\:focus\\:text-yellow-dark:focus {\n    color: #f2d024;\n  }\n\n  .xl\\:focus\\:text-yellow:focus {\n    color: #ffed4a;\n  }\n\n  .xl\\:focus\\:text-yellow-light:focus {\n    color: #fff382;\n  }\n\n  .xl\\:focus\\:text-yellow-lighter:focus {\n    color: #fff9c2;\n  }\n\n  .xl\\:focus\\:text-yellow-lightest:focus {\n    color: #fcfbeb;\n  }\n\n  .xl\\:focus\\:text-green-darkest:focus {\n    color: #0f2f21;\n  }\n\n  .xl\\:focus\\:text-green-darker:focus {\n    color: #1a4731;\n  }\n\n  .xl\\:focus\\:text-green-dark:focus {\n    color: #1f9d55;\n  }\n\n  .xl\\:focus\\:text-green:focus {\n    color: #38c172;\n  }\n\n  .xl\\:focus\\:text-green-light:focus {\n    color: #51d88a;\n  }\n\n  .xl\\:focus\\:text-green-lighter:focus {\n    color: #a2f5bf;\n  }\n\n  .xl\\:focus\\:text-green-lightest:focus {\n    color: #e3fcec;\n  }\n\n  .xl\\:focus\\:text-teal-darkest:focus {\n    color: #0d3331;\n  }\n\n  .xl\\:focus\\:text-teal-darker:focus {\n    color: #20504f;\n  }\n\n  .xl\\:focus\\:text-teal-dark:focus {\n    color: #38a89d;\n  }\n\n  .xl\\:focus\\:text-teal:focus {\n    color: #4dc0b5;\n  }\n\n  .xl\\:focus\\:text-teal-light:focus {\n    color: #64d5ca;\n  }\n\n  .xl\\:focus\\:text-teal-lighter:focus {\n    color: #a0f0ed;\n  }\n\n  .xl\\:focus\\:text-teal-lightest:focus {\n    color: #e8fffe;\n  }\n\n  .xl\\:focus\\:text-blue-darkest:focus {\n    color: #12283a;\n  }\n\n  .xl\\:focus\\:text-blue-darker:focus {\n    color: #1c3d5a;\n  }\n\n  .xl\\:focus\\:text-blue-dark:focus {\n    color: #2779bd;\n  }\n\n  .xl\\:focus\\:text-blue:focus {\n    color: #3490dc;\n  }\n\n  .xl\\:focus\\:text-blue-light:focus {\n    color: #6cb2eb;\n  }\n\n  .xl\\:focus\\:text-blue-lighter:focus {\n    color: #bcdefa;\n  }\n\n  .xl\\:focus\\:text-blue-lightest:focus {\n    color: #eff8ff;\n  }\n\n  .xl\\:focus\\:text-indigo-darkest:focus {\n    color: #191e38;\n  }\n\n  .xl\\:focus\\:text-indigo-darker:focus {\n    color: #2f365f;\n  }\n\n  .xl\\:focus\\:text-indigo-dark:focus {\n    color: #5661b3;\n  }\n\n  .xl\\:focus\\:text-indigo:focus {\n    color: #6574cd;\n  }\n\n  .xl\\:focus\\:text-indigo-light:focus {\n    color: #7886d7;\n  }\n\n  .xl\\:focus\\:text-indigo-lighter:focus {\n    color: #b2b7ff;\n  }\n\n  .xl\\:focus\\:text-indigo-lightest:focus {\n    color: #e6e8ff;\n  }\n\n  .xl\\:focus\\:text-purple-darkest:focus {\n    color: #21183c;\n  }\n\n  .xl\\:focus\\:text-purple-darker:focus {\n    color: #382b5f;\n  }\n\n  .xl\\:focus\\:text-purple-dark:focus {\n    color: #794acf;\n  }\n\n  .xl\\:focus\\:text-purple:focus {\n    color: #9561e2;\n  }\n\n  .xl\\:focus\\:text-purple-light:focus {\n    color: #a779e9;\n  }\n\n  .xl\\:focus\\:text-purple-lighter:focus {\n    color: #d6bbfc;\n  }\n\n  .xl\\:focus\\:text-purple-lightest:focus {\n    color: #f3ebff;\n  }\n\n  .xl\\:focus\\:text-pink-darkest:focus {\n    color: #451225;\n  }\n\n  .xl\\:focus\\:text-pink-darker:focus {\n    color: #6f213f;\n  }\n\n  .xl\\:focus\\:text-pink-dark:focus {\n    color: #eb5286;\n  }\n\n  .xl\\:focus\\:text-pink:focus {\n    color: #f66d9b;\n  }\n\n  .xl\\:focus\\:text-pink-light:focus {\n    color: #fa7ea8;\n  }\n\n  .xl\\:focus\\:text-pink-lighter:focus {\n    color: #ffbbca;\n  }\n\n  .xl\\:focus\\:text-pink-lightest:focus {\n    color: #ffebef;\n  }\n\n  .xl\\:text-xs {\n    font-size: .75rem;\n  }\n\n  .xl\\:text-sm {\n    font-size: .875rem;\n  }\n\n  .xl\\:text-base {\n    font-size: 1rem;\n  }\n\n  .xl\\:text-lg {\n    font-size: 1.125rem;\n  }\n\n  .xl\\:text-xl {\n    font-size: 1.25rem;\n  }\n\n  .xl\\:text-2xl {\n    font-size: 1.5rem;\n  }\n\n  .xl\\:text-3xl {\n    font-size: 1.875rem;\n  }\n\n  .xl\\:text-4xl {\n    font-size: 2.25rem;\n  }\n\n  .xl\\:text-5xl {\n    font-size: 3rem;\n  }\n\n  .xl\\:italic {\n    font-style: italic;\n  }\n\n  .xl\\:roman {\n    font-style: normal;\n  }\n\n  .xl\\:uppercase {\n    text-transform: uppercase;\n  }\n\n  .xl\\:lowercase {\n    text-transform: lowercase;\n  }\n\n  .xl\\:capitalize {\n    text-transform: capitalize;\n  }\n\n  .xl\\:normal-case {\n    text-transform: none;\n  }\n\n  .xl\\:underline {\n    text-decoration: underline;\n  }\n\n  .xl\\:line-through {\n    text-decoration: line-through;\n  }\n\n  .xl\\:no-underline {\n    text-decoration: none;\n  }\n\n  .xl\\:antialiased {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .xl\\:subpixel-antialiased {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .xl\\:hover\\:italic:hover {\n    font-style: italic;\n  }\n\n  .xl\\:hover\\:roman:hover {\n    font-style: normal;\n  }\n\n  .xl\\:hover\\:uppercase:hover {\n    text-transform: uppercase;\n  }\n\n  .xl\\:hover\\:lowercase:hover {\n    text-transform: lowercase;\n  }\n\n  .xl\\:hover\\:capitalize:hover {\n    text-transform: capitalize;\n  }\n\n  .xl\\:hover\\:normal-case:hover {\n    text-transform: none;\n  }\n\n  .xl\\:hover\\:underline:hover {\n    text-decoration: underline;\n  }\n\n  .xl\\:hover\\:line-through:hover {\n    text-decoration: line-through;\n  }\n\n  .xl\\:hover\\:no-underline:hover {\n    text-decoration: none;\n  }\n\n  .xl\\:hover\\:antialiased:hover {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .xl\\:hover\\:subpixel-antialiased:hover {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .xl\\:focus\\:italic:focus {\n    font-style: italic;\n  }\n\n  .xl\\:focus\\:roman:focus {\n    font-style: normal;\n  }\n\n  .xl\\:focus\\:uppercase:focus {\n    text-transform: uppercase;\n  }\n\n  .xl\\:focus\\:lowercase:focus {\n    text-transform: lowercase;\n  }\n\n  .xl\\:focus\\:capitalize:focus {\n    text-transform: capitalize;\n  }\n\n  .xl\\:focus\\:normal-case:focus {\n    text-transform: none;\n  }\n\n  .xl\\:focus\\:underline:focus {\n    text-decoration: underline;\n  }\n\n  .xl\\:focus\\:line-through:focus {\n    text-decoration: line-through;\n  }\n\n  .xl\\:focus\\:no-underline:focus {\n    text-decoration: none;\n  }\n\n  .xl\\:focus\\:antialiased:focus {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .xl\\:focus\\:subpixel-antialiased:focus {\n    -webkit-font-smoothing: auto;\n    -moz-osx-font-smoothing: auto;\n  }\n\n  .xl\\:tracking-tight {\n    letter-spacing: -0.05em;\n  }\n\n  .xl\\:tracking-normal {\n    letter-spacing: 0;\n  }\n\n  .xl\\:tracking-wide {\n    letter-spacing: .05em;\n  }\n\n  .xl\\:select-none {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n  }\n\n  .xl\\:select-text {\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text;\n  }\n\n  .xl\\:align-baseline {\n    vertical-align: baseline;\n  }\n\n  .xl\\:align-top {\n    vertical-align: top;\n  }\n\n  .xl\\:align-middle {\n    vertical-align: middle;\n  }\n\n  .xl\\:align-bottom {\n    vertical-align: bottom;\n  }\n\n  .xl\\:align-text-top {\n    vertical-align: text-top;\n  }\n\n  .xl\\:align-text-bottom {\n    vertical-align: text-bottom;\n  }\n\n  .xl\\:visible {\n    visibility: visible;\n  }\n\n  .xl\\:invisible {\n    visibility: hidden;\n  }\n\n  .xl\\:whitespace-normal {\n    white-space: normal;\n  }\n\n  .xl\\:whitespace-no-wrap {\n    white-space: nowrap;\n  }\n\n  .xl\\:whitespace-pre {\n    white-space: pre;\n  }\n\n  .xl\\:whitespace-pre-line {\n    white-space: pre-line;\n  }\n\n  .xl\\:whitespace-pre-wrap {\n    white-space: pre-wrap;\n  }\n\n  .xl\\:break-words {\n    word-wrap: break-word;\n  }\n\n  .xl\\:break-normal {\n    word-wrap: normal;\n  }\n\n  .xl\\:truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .xl\\:w-1 {\n    width: .25rem;\n  }\n\n  .xl\\:w-2 {\n    width: .5rem;\n  }\n\n  .xl\\:w-3 {\n    width: .75rem;\n  }\n\n  .xl\\:w-4 {\n    width: 1rem;\n  }\n\n  .xl\\:w-5 {\n    width: 1.25rem;\n  }\n\n  .xl\\:w-6 {\n    width: 1.5rem;\n  }\n\n  .xl\\:w-8 {\n    width: 2rem;\n  }\n\n  .xl\\:w-10 {\n    width: 2.5rem;\n  }\n\n  .xl\\:w-12 {\n    width: 3rem;\n  }\n\n  .xl\\:w-16 {\n    width: 4rem;\n  }\n\n  .xl\\:w-24 {\n    width: 6rem;\n  }\n\n  .xl\\:w-32 {\n    width: 8rem;\n  }\n\n  .xl\\:w-48 {\n    width: 12rem;\n  }\n\n  .xl\\:w-64 {\n    width: 16rem;\n  }\n\n  .xl\\:w-auto {\n    width: auto;\n  }\n\n  .xl\\:w-px {\n    width: 1px;\n  }\n\n  .xl\\:w-1\\/2 {\n    width: 50%;\n  }\n\n  .xl\\:w-1\\/3 {\n    width: 33.33333%;\n  }\n\n  .xl\\:w-2\\/3 {\n    width: 66.66667%;\n  }\n\n  .xl\\:w-1\\/4 {\n    width: 25%;\n  }\n\n  .xl\\:w-3\\/4 {\n    width: 75%;\n  }\n\n  .xl\\:w-1\\/5 {\n    width: 20%;\n  }\n\n  .xl\\:w-2\\/5 {\n    width: 40%;\n  }\n\n  .xl\\:w-3\\/5 {\n    width: 60%;\n  }\n\n  .xl\\:w-4\\/5 {\n    width: 80%;\n  }\n\n  .xl\\:w-1\\/6 {\n    width: 16.66667%;\n  }\n\n  .xl\\:w-5\\/6 {\n    width: 83.33333%;\n  }\n\n  .xl\\:w-full {\n    width: 100%;\n  }\n\n  .xl\\:w-screen {\n    width: 100vw;\n  }\n\n  .xl\\:z-0 {\n    z-index: 0;\n  }\n\n  .xl\\:z-10 {\n    z-index: 10;\n  }\n\n  .xl\\:z-20 {\n    z-index: 20;\n  }\n\n  .xl\\:z-30 {\n    z-index: 30;\n  }\n\n  .xl\\:z-40 {\n    z-index: 40;\n  }\n\n  .xl\\:z-50 {\n    z-index: 50;\n  }\n\n  .xl\\:z-auto {\n    z-index: auto;\n  }\n}\n";
  styleInject(css);

  /*!
   * Vue.js v2.5.8
   * (c) 2014-2017 Evan You
   * Released under the MIT License.
   */

  /*  */
  const emptyObject = Object.freeze({}); // these helpers produces better vm code in JS engines due to their
  // explicitness and function inlining

  function isUndef(v) {
    return v === undefined || v === null;
  }

  function isDef(v) {
    return v !== undefined && v !== null;
  }

  function isTrue(v) {
    return v === true;
  }

  function isFalse(v) {
    return v === false;
  }
  /**
   * Check if value is primitive
   */


  function isPrimitive(value) {
    return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';
  }
  /**
   * Quick object check - this is primarily used to tell
   * Objects from primitive values when we know the value
   * is a JSON-compliant type.
   */


  function isObject(obj) {
    return obj !== null && typeof obj === 'object';
  }
  /**
   * Get the raw type string of a value e.g. [object Object]
   */


  const _toString = Object.prototype.toString;

  function toRawType(value) {
    return _toString.call(value).slice(8, -1);
  }
  /**
   * Strict object type check. Only returns true
   * for plain JavaScript objects.
   */


  function isPlainObject(obj) {
    return _toString.call(obj) === '[object Object]';
  }

  function isRegExp(v) {
    return _toString.call(v) === '[object RegExp]';
  }
  /**
   * Check if val is a valid array index.
   */


  function isValidArrayIndex(val) {
    const n = parseFloat(String(val));
    return n >= 0 && Math.floor(n) === n && isFinite(val);
  }
  /**
   * Convert a value to a string that is actually rendered.
   */


  function toString$1(val) {
    return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);
  }
  /**
   * Convert a input value to a number for persistence.
   * If the conversion fails, return original string.
   */


  function toNumber(val) {
    const n = parseFloat(val);
    return isNaN(n) ? val : n;
  }
  /**
   * Make a map and return a function for checking if a key
   * is in that map.
   */


  function makeMap(str, expectsLowerCase) {
    const map = Object.create(null);
    const list = str.split(',');

    for (let i = 0; i < list.length; i++) {
      map[list[i]] = true;
    }

    return expectsLowerCase ? val => map[val.toLowerCase()] : val => map[val];
  }
  /**
   * Check if a tag is a built-in tag.
   */


  const isBuiltInTag = makeMap('slot,component', true);
  /**
   * Check if a attribute is a reserved attribute.
   */

  const isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');
  /**
   * Remove an item from an array
   */

  function remove(arr, item) {
    if (arr.length) {
      const index = arr.indexOf(item);

      if (index > -1) {
        return arr.splice(index, 1);
      }
    }
  }
  /**
   * Check whether the object has the property.
   */


  const hasOwnProperty$1 = Object.prototype.hasOwnProperty;

  function hasOwn(obj, key) {
    return hasOwnProperty$1.call(obj, key);
  }
  /**
   * Create a cached version of a pure function.
   */


  function cached(fn) {
    const cache = Object.create(null);
    return function cachedFn(str) {
      const hit = cache[str];
      return hit || (cache[str] = fn(str));
    };
  }
  /**
   * Camelize a hyphen-delimited string.
   */


  const camelizeRE = /-(\w)/g;
  const camelize = cached(str => {
    return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '');
  });
  /**
   * Capitalize a string.
   */

  const capitalize = cached(str => {
    return str.charAt(0).toUpperCase() + str.slice(1);
  });
  /**
   * Hyphenate a camelCase string.
   */

  const hyphenateRE = /\B([A-Z])/g;
  const hyphenate = cached(str => {
    return str.replace(hyphenateRE, '-$1').toLowerCase();
  });
  /**
   * Simple bind, faster than native
   */

  function bind(fn, ctx) {
    function boundFn(a) {
      const l = arguments.length;
      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
    } // record original fn length


    boundFn._length = fn.length;
    return boundFn;
  }
  /**
   * Convert an Array-like object to a real Array.
   */


  function toArray(list, start) {
    start = start || 0;
    let i = list.length - start;
    const ret = new Array(i);

    while (i--) {
      ret[i] = list[i + start];
    }

    return ret;
  }
  /**
   * Mix properties into target object.
   */


  function extend(to, _from) {
    for (const key in _from) {
      to[key] = _from[key];
    }

    return to;
  }
  /**
   * Merge an Array of Objects into a single Object.
   */


  function toObject(arr) {
    const res = {};

    for (let i = 0; i < arr.length; i++) {
      if (arr[i]) {
        extend(res, arr[i]);
      }
    }

    return res;
  }
  /**
   * Perform no operation.
   * Stubbing args to make Flow happy without leaving useless transpiled code
   * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
   */


  function noop(a, b, c) {}
  /**
   * Always return false.
   */


  const no = (a, b, c) => false;
  /**
   * Return same value
   */


  const identity = _ => _;
  /**
   * Generate a static keys string from compiler modules.
   */


  function genStaticKeys(modules) {
    return modules.reduce((keys, m) => {
      return keys.concat(m.staticKeys || []);
    }, []).join(',');
  }
  /**
   * Check if two values are loosely equal - that is,
   * if they are plain objects, do they have the same shape?
   */


  function looseEqual(a, b) {
    if (a === b) return true;
    const isObjectA = isObject(a);
    const isObjectB = isObject(b);

    if (isObjectA && isObjectB) {
      try {
        const isArrayA = Array.isArray(a);
        const isArrayB = Array.isArray(b);

        if (isArrayA && isArrayB) {
          return a.length === b.length && a.every((e, i) => {
            return looseEqual(e, b[i]);
          });
        } else if (!isArrayA && !isArrayB) {
          const keysA = Object.keys(a);
          const keysB = Object.keys(b);
          return keysA.length === keysB.length && keysA.every(key => {
            return looseEqual(a[key], b[key]);
          });
        } else {
          /* istanbul ignore next */
          return false;
        }
      } catch (e) {
        /* istanbul ignore next */
        return false;
      }
    } else if (!isObjectA && !isObjectB) {
      return String(a) === String(b);
    } else {
      return false;
    }
  }

  function looseIndexOf(arr, val) {
    for (let i = 0; i < arr.length; i++) {
      if (looseEqual(arr[i], val)) return i;
    }

    return -1;
  }
  /**
   * Ensure a function is called only once.
   */


  function once(fn) {
    let called = false;
    return function () {
      if (!called) {
        called = true;
        fn.apply(this, arguments);
      }
    };
  }

  const SSR_ATTR = 'data-server-rendered';
  const ASSET_TYPES = ['component', 'directive', 'filter'];
  const LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated', 'errorCaptured'];
  /*  */

  var config = {
    /**
     * Option merge strategies (used in core/util/options)
     */
    optionMergeStrategies: Object.create(null),

    /**
     * Whether to suppress warnings.
     */
    silent: false,

    /**
     * Show production mode tip message on boot?
     */
    productionTip: "development" !== 'production',

    /**
     * Whether to enable devtools
     */
    devtools: "development" !== 'production',

    /**
     * Whether to record perf
     */
    performance: false,

    /**
     * Error handler for watcher errors
     */
    errorHandler: null,

    /**
     * Warn handler for watcher warns
     */
    warnHandler: null,

    /**
     * Ignore certain custom elements
     */
    ignoredElements: [],

    /**
     * Custom user key aliases for v-on
     */
    keyCodes: Object.create(null),

    /**
     * Check if a tag is reserved so that it cannot be registered as a
     * component. This is platform-dependent and may be overwritten.
     */
    isReservedTag: no,

    /**
     * Check if an attribute is reserved so that it cannot be used as a component
     * prop. This is platform-dependent and may be overwritten.
     */
    isReservedAttr: no,

    /**
     * Check if a tag is an unknown element.
     * Platform-dependent.
     */
    isUnknownElement: no,

    /**
     * Get the namespace of an element
     */
    getTagNamespace: noop,

    /**
     * Parse the real tag name for the specific platform.
     */
    parsePlatformTagName: identity,

    /**
     * Check if an attribute must be bound using property, e.g. value
     * Platform-dependent.
     */
    mustUseProp: no,

    /**
     * Exposed for legacy reasons
     */
    _lifecycleHooks: LIFECYCLE_HOOKS
  };
  /*  */

  /**
   * Check if a string starts with $ or _
   */

  function isReserved(str) {
    const c = (str + '').charCodeAt(0);
    return c === 0x24 || c === 0x5F;
  }
  /**
   * Define a property.
   */


  function def(obj, key, val, enumerable) {
    Object.defineProperty(obj, key, {
      value: val,
      enumerable: !!enumerable,
      writable: true,
      configurable: true
    });
  }
  /**
   * Parse simple path.
   */


  const bailRE = /[^\w.$]/;

  function parsePath(path) {
    if (bailRE.test(path)) {
      return;
    }

    const segments = path.split('.');
    return function (obj) {
      for (let i = 0; i < segments.length; i++) {
        if (!obj) return;
        obj = obj[segments[i]];
      }

      return obj;
    };
  }
  /*  */
  // can we use __proto__?


  const hasProto = '__proto__' in {}; // Browser environment sniffing

  const inBrowser = typeof window !== 'undefined';
  const inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
  const weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
  const UA = inBrowser && window.navigator.userAgent.toLowerCase();
  const isIE = UA && /msie|trident/.test(UA);
  const isIE9 = UA && UA.indexOf('msie 9.0') > 0;
  const isEdge = UA && UA.indexOf('edge/') > 0;
  const isAndroid = UA && UA.indexOf('android') > 0 || weexPlatform === 'android';
  const isIOS = UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === 'ios';
  const isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge; // Firefox has a "watch" function on Object.prototype...

  const nativeWatch = {}.watch;
  let supportsPassive = false;

  if (inBrowser) {
    try {
      const opts = {};
      Object.defineProperty(opts, 'passive', {
        get() {
          /* istanbul ignore next */
          supportsPassive = true;
        }

      }); // https://github.com/facebook/flow/issues/285

      window.addEventListener('test-passive', null, opts);
    } catch (e) {}
  } // this needs to be lazy-evaled because vue may be required before
  // vue-server-renderer can set VUE_ENV


  let _isServer;

  const isServerRendering = () => {
    if (_isServer === undefined) {
      /* istanbul ignore if */
      if (!inBrowser && typeof global !== 'undefined') {
        // detect presence of vue-server-renderer and avoid
        // Webpack shimming the process
        _isServer = global['process'].env.VUE_ENV === 'server';
      } else {
        _isServer = false;
      }
    }

    return _isServer;
  }; // detect devtools


  const devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
  /* istanbul ignore next */

  function isNative(Ctor) {
    return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
  }

  const hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

  let _Set;
  /* istanbul ignore if */
  // $flow-disable-line


  if (typeof Set !== 'undefined' && isNative(Set)) {
    // use native Set when available.
    _Set = Set;
  } else {
    // a non-standard Set polyfill that only works with primitive keys.
    _Set = class Set {
      constructor() {
        this.set = Object.create(null);
      }

      has(key) {
        return this.set[key] === true;
      }

      add(key) {
        this.set[key] = true;
      }

      clear() {
        this.set = Object.create(null);
      }

    };
  }
  /*  */


  let warn = noop;
  let tip = noop;
  let generateComponentTrace = noop; // work around flow check

  let formatComponentName = noop;
  {
    const hasConsole = typeof console !== 'undefined';
    const classifyRE = /(?:^|[-_])(\w)/g;

    const classify = str => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');

    warn = (msg, vm) => {
      const trace = vm ? generateComponentTrace(vm) : '';

      if (config.warnHandler) {
        config.warnHandler.call(null, msg, vm, trace);
      } else if (hasConsole && !config.silent) {
        console.error(`[Vue warn]: ${msg}${trace}`);
      }
    };

    tip = (msg, vm) => {
      if (hasConsole && !config.silent) {
        console.warn(`[Vue tip]: ${msg}` + (vm ? generateComponentTrace(vm) : ''));
      }
    };

    formatComponentName = (vm, includeFile) => {
      if (vm.$root === vm) {
        return '<Root>';
      }

      const options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm || {};
      let name = options.name || options._componentTag;
      const file = options.__file;

      if (!name && file) {
        const match = file.match(/([^/\\]+)\.vue$/);
        name = match && match[1];
      }

      return (name ? `<${classify(name)}>` : `<Anonymous>`) + (file && includeFile !== false ? ` at ${file}` : '');
    };

    const repeat = (str, n) => {
      let res = '';

      while (n) {
        if (n % 2 === 1) res += str;
        if (n > 1) str += str;
        n >>= 1;
      }

      return res;
    };

    generateComponentTrace = vm => {
      if (vm._isVue && vm.$parent) {
        const tree = [];
        let currentRecursiveSequence = 0;

        while (vm) {
          if (tree.length > 0) {
            const last = tree[tree.length - 1];

            if (last.constructor === vm.constructor) {
              currentRecursiveSequence++;
              vm = vm.$parent;
              continue;
            } else if (currentRecursiveSequence > 0) {
              tree[tree.length - 1] = [last, currentRecursiveSequence];
              currentRecursiveSequence = 0;
            }
          }

          tree.push(vm);
          vm = vm.$parent;
        }

        return '\n\nfound in\n\n' + tree.map((vm, i) => `${i === 0 ? '---> ' : repeat(' ', 5 + i * 2)}${Array.isArray(vm) ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)` : formatComponentName(vm)}`).join('\n');
      } else {
        return `\n\n(found in ${formatComponentName(vm)})`;
      }
    };
  }
  /*  */

  let uid = 0;
  /**
   * A dep is an observable that can have multiple
   * directives subscribing to it.
   */

  class Dep {
    constructor() {
      this.id = uid++;
      this.subs = [];
    }

    addSub(sub) {
      this.subs.push(sub);
    }

    removeSub(sub) {
      remove(this.subs, sub);
    }

    depend() {
      if (Dep.target) {
        Dep.target.addDep(this);
      }
    }

    notify() {
      // stabilize the subscriber list first
      const subs = this.subs.slice();

      for (let i = 0, l = subs.length; i < l; i++) {
        subs[i].update();
      }
    }

  } // the current target watcher being evaluated.
  // this is globally unique because there could be only one
  // watcher being evaluated at any time.


  Dep.target = null;
  const targetStack = [];

  function pushTarget(_target) {
    if (Dep.target) targetStack.push(Dep.target);
    Dep.target = _target;
  }

  function popTarget() {
    Dep.target = targetStack.pop();
  }
  /*  */


  class VNode {
    // rendered in this component's scope
    // component instance
    // component placeholder node
    // strictly internal
    // contains raw HTML? (server only)
    // hoisted static node
    // necessary for enter transition check
    // empty comment placeholder?
    // is a cloned node?
    // is a v-once node?
    // async component factory function
    // real context vm for functional nodes
    // for SSR caching
    // functioanl scope id support
    constructor(tag, data, children, text, elm, context, componentOptions, asyncFactory) {
      this.tag = tag;
      this.data = data;
      this.children = children;
      this.text = text;
      this.elm = elm;
      this.ns = undefined;
      this.context = context;
      this.functionalContext = undefined;
      this.functionalOptions = undefined;
      this.functionalScopeId = undefined;
      this.key = data && data.key;
      this.componentOptions = componentOptions;
      this.componentInstance = undefined;
      this.parent = undefined;
      this.raw = false;
      this.isStatic = false;
      this.isRootInsert = true;
      this.isComment = false;
      this.isCloned = false;
      this.isOnce = false;
      this.asyncFactory = asyncFactory;
      this.asyncMeta = undefined;
      this.isAsyncPlaceholder = false;
    } // DEPRECATED: alias for componentInstance for backwards compat.

    /* istanbul ignore next */


    get child() {
      return this.componentInstance;
    }

  }

  const createEmptyVNode = (text = '') => {
    const node = new VNode();
    node.text = text;
    node.isComment = true;
    return node;
  };

  function createTextVNode(val) {
    return new VNode(undefined, undefined, undefined, String(val));
  } // optimized shallow clone
  // used for static nodes and slot nodes because they may be reused across
  // multiple renders, cloning them avoids errors when DOM manipulations rely
  // on their elm reference.


  function cloneVNode(vnode, deep) {
    const componentOptions = vnode.componentOptions;
    const cloned = new VNode(vnode.tag, vnode.data, vnode.children, vnode.text, vnode.elm, vnode.context, componentOptions, vnode.asyncFactory);
    cloned.ns = vnode.ns;
    cloned.isStatic = vnode.isStatic;
    cloned.key = vnode.key;
    cloned.isComment = vnode.isComment;
    cloned.isCloned = true;

    if (deep) {
      if (vnode.children) {
        cloned.children = cloneVNodes(vnode.children, true);
      }

      if (componentOptions && componentOptions.children) {
        componentOptions.children = cloneVNodes(componentOptions.children, true);
      }
    }

    return cloned;
  }

  function cloneVNodes(vnodes, deep) {
    const len = vnodes.length;
    const res = new Array(len);

    for (let i = 0; i < len; i++) {
      res[i] = cloneVNode(vnodes[i], deep);
    }

    return res;
  }
  /*
   * not type checking this file because flow doesn't play well with
   * dynamically accessing methods on Array prototype
   */


  const arrayProto = Array.prototype;
  const arrayMethods = Object.create(arrayProto);
  ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {
    // cache original method
    const original = arrayProto[method];
    def(arrayMethods, method, function mutator(...args) {
      const result = original.apply(this, args);
      const ob = this.__ob__;
      let inserted;

      switch (method) {
        case 'push':
        case 'unshift':
          inserted = args;
          break;

        case 'splice':
          inserted = args.slice(2);
          break;
      }

      if (inserted) ob.observeArray(inserted); // notify change

      ob.dep.notify();
      return result;
    });
  });
  /*  */

  const arrayKeys = Object.getOwnPropertyNames(arrayMethods);
  /**
   * By default, when a reactive property is set, the new value is
   * also converted to become reactive. However when passing down props,
   * we don't want to force conversion because the value may be a nested value
   * under a frozen data structure. Converting it would defeat the optimization.
   */

  const observerState = {
    shouldConvert: true
  };
  /**
   * Observer class that are attached to each observed
   * object. Once attached, the observer converts target
   * object's property keys into getter/setters that
   * collect dependencies and dispatches updates.
   */

  class Observer {
    // number of vms that has this object as root $data
    constructor(value) {
      this.value = value;
      this.dep = new Dep();
      this.vmCount = 0;
      def(value, '__ob__', this);

      if (Array.isArray(value)) {
        const augment = hasProto ? protoAugment : copyAugment;
        augment(value, arrayMethods, arrayKeys);
        this.observeArray(value);
      } else {
        this.walk(value);
      }
    }
    /**
     * Walk through each property and convert them into
     * getter/setters. This method should only be called when
     * value type is Object.
     */


    walk(obj) {
      const keys = Object.keys(obj);

      for (let i = 0; i < keys.length; i++) {
        defineReactive(obj, keys[i], obj[keys[i]]);
      }
    }
    /**
     * Observe a list of Array items.
     */


    observeArray(items) {
      for (let i = 0, l = items.length; i < l; i++) {
        observe(items[i]);
      }
    }

  } // helpers

  /**
   * Augment an target Object or Array by intercepting
   * the prototype chain using __proto__
   */


  function protoAugment(target, src, keys) {
    /* eslint-disable no-proto */
    target.__proto__ = src;
    /* eslint-enable no-proto */
  }
  /**
   * Augment an target Object or Array by defining
   * hidden properties.
   */

  /* istanbul ignore next */


  function copyAugment(target, src, keys) {
    for (let i = 0, l = keys.length; i < l; i++) {
      const key = keys[i];
      def(target, key, src[key]);
    }
  }
  /**
   * Attempt to create an observer instance for a value,
   * returns the new observer if successfully observed,
   * or the existing observer if the value already has one.
   */


  function observe(value, asRootData) {
    if (!isObject(value) || value instanceof VNode) {
      return;
    }

    let ob;

    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
      ob = value.__ob__;
    } else if (observerState.shouldConvert && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
      ob = new Observer(value);
    }

    if (asRootData && ob) {
      ob.vmCount++;
    }

    return ob;
  }
  /**
   * Define a reactive property on an Object.
   */


  function defineReactive(obj, key, val, customSetter, shallow) {
    const dep = new Dep();
    const property = Object.getOwnPropertyDescriptor(obj, key);

    if (property && property.configurable === false) {
      return;
    } // cater for pre-defined getter/setters


    const getter = property && property.get;
    const setter = property && property.set;
    let childOb = !shallow && observe(val);
    Object.defineProperty(obj, key, {
      enumerable: true,
      configurable: true,
      get: function reactiveGetter() {
        const value = getter ? getter.call(obj) : val;

        if (Dep.target) {
          dep.depend();

          if (childOb) {
            childOb.dep.depend();

            if (Array.isArray(value)) {
              dependArray(value);
            }
          }
        }

        return value;
      },
      set: function reactiveSetter(newVal) {
        const value = getter ? getter.call(obj) : val;
        /* eslint-disable no-self-compare */

        if (newVal === value || newVal !== newVal && value !== value) {
          return;
        }
        /* eslint-enable no-self-compare */


        if (customSetter) {
          customSetter();
        }

        if (setter) {
          setter.call(obj, newVal);
        } else {
          val = newVal;
        }

        childOb = !shallow && observe(newVal);
        dep.notify();
      }
    });
  }
  /**
   * Set a property on an object. Adds the new property and
   * triggers change notification if the property doesn't
   * already exist.
   */


  function set$1(target, key, val) {
    if (Array.isArray(target) && isValidArrayIndex(key)) {
      target.length = Math.max(target.length, key);
      target.splice(key, 1, val);
      return val;
    }

    if (key in target && !(key in Object.prototype)) {
      target[key] = val;
      return val;
    }

    const ob = target.__ob__;

    if (target._isVue || ob && ob.vmCount) {
      warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');
      return val;
    }

    if (!ob) {
      target[key] = val;
      return val;
    }

    defineReactive(ob.value, key, val);
    ob.dep.notify();
    return val;
  }
  /**
   * Delete a property and trigger change if necessary.
   */


  function del(target, key) {
    if (Array.isArray(target) && isValidArrayIndex(key)) {
      target.splice(key, 1);
      return;
    }

    const ob = target.__ob__;

    if (target._isVue || ob && ob.vmCount) {
      warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');
      return;
    }

    if (!hasOwn(target, key)) {
      return;
    }

    delete target[key];

    if (!ob) {
      return;
    }

    ob.dep.notify();
  }
  /**
   * Collect dependencies on array elements when the array is touched, since
   * we cannot intercept array element access like property getters.
   */


  function dependArray(value) {
    for (let e, i = 0, l = value.length; i < l; i++) {
      e = value[i];
      e && e.__ob__ && e.__ob__.dep.depend();

      if (Array.isArray(e)) {
        dependArray(e);
      }
    }
  }
  /*  */

  /**
   * Option overwriting strategies are functions that handle
   * how to merge a parent option value and a child option
   * value into the final value.
   */


  const strats = config.optionMergeStrategies;
  /**
   * Options with restrictions
   */

  {
    strats.el = strats.propsData = function (parent, child, vm, key) {
      if (!vm) {
        warn(`option "${key}" can only be used during instance ` + 'creation with the `new` keyword.');
      }

      return defaultStrat(parent, child);
    };
  }
  /**
   * Helper that recursively merges two data objects together.
   */

  function mergeData(to, from) {
    if (!from) return to;
    let key, toVal, fromVal;
    const keys = Object.keys(from);

    for (let i = 0; i < keys.length; i++) {
      key = keys[i];
      toVal = to[key];
      fromVal = from[key];

      if (!hasOwn(to, key)) {
        set$1(to, key, fromVal);
      } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
        mergeData(toVal, fromVal);
      }
    }

    return to;
  }
  /**
   * Data
   */


  function mergeDataOrFn(parentVal, childVal, vm) {
    if (!vm) {
      // in a Vue.extend merge, both should be functions
      if (!childVal) {
        return parentVal;
      }

      if (!parentVal) {
        return childVal;
      } // when parentVal & childVal are both present,
      // we need to return a function that returns the
      // merged result of both functions... no need to
      // check if parentVal is a function here because
      // it has to be a function to pass previous merges.


      return function mergedDataFn() {
        return mergeData(typeof childVal === 'function' ? childVal.call(this) : childVal, typeof parentVal === 'function' ? parentVal.call(this) : parentVal);
      };
    } else {
      return function mergedInstanceDataFn() {
        // instance merge
        const instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;
        const defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : parentVal;

        if (instanceData) {
          return mergeData(instanceData, defaultData);
        } else {
          return defaultData;
        }
      };
    }
  }

  strats.data = function (parentVal, childVal, vm) {
    if (!vm) {
      if (childVal && typeof childVal !== 'function') {
        warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);
        return parentVal;
      }

      return mergeDataOrFn(parentVal, childVal);
    }

    return mergeDataOrFn(parentVal, childVal, vm);
  };
  /**
   * Hooks and props are merged as arrays.
   */


  function mergeHook(parentVal, childVal) {
    return childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  }

  LIFECYCLE_HOOKS.forEach(hook => {
    strats[hook] = mergeHook;
  });
  /**
   * Assets
   *
   * When a vm is present (instance creation), we need to do
   * a three-way merge between constructor options, instance
   * options and parent options.
   */

  function mergeAssets(parentVal, childVal, vm, key) {
    const res = Object.create(parentVal || null);

    if (childVal) {
      assertObjectType(key, childVal, vm);
      return extend(res, childVal);
    } else {
      return res;
    }
  }

  ASSET_TYPES.forEach(function (type) {
    strats[type + 's'] = mergeAssets;
  });
  /**
   * Watchers.
   *
   * Watchers hashes should not overwrite one
   * another, so we merge them as arrays.
   */

  strats.watch = function (parentVal, childVal, vm, key) {
    // work around Firefox's Object.prototype.watch...
    if (parentVal === nativeWatch) parentVal = undefined;
    if (childVal === nativeWatch) childVal = undefined;
    /* istanbul ignore if */

    if (!childVal) return Object.create(parentVal || null);
    {
      assertObjectType(key, childVal, vm);
    }
    if (!parentVal) return childVal;
    const ret = {};
    extend(ret, parentVal);

    for (const key in childVal) {
      let parent = ret[key];
      const child = childVal[key];

      if (parent && !Array.isArray(parent)) {
        parent = [parent];
      }

      ret[key] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];
    }

    return ret;
  };
  /**
   * Other object hashes.
   */


  strats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal, vm, key) {
    if (childVal && "development" !== 'production') {
      assertObjectType(key, childVal, vm);
    }

    if (!parentVal) return childVal;
    const ret = Object.create(null);
    extend(ret, parentVal);
    if (childVal) extend(ret, childVal);
    return ret;
  };

  strats.provide = mergeDataOrFn;
  /**
   * Default strategy.
   */

  const defaultStrat = function (parentVal, childVal) {
    return childVal === undefined ? parentVal : childVal;
  };
  /**
   * Validate component names
   */


  function checkComponents(options) {
    for (const key in options.components) {
      const lower = key.toLowerCase();

      if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
        warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);
      }
    }
  }
  /**
   * Ensure all props option syntax are normalized into the
   * Object-based format.
   */


  function normalizeProps(options, vm) {
    const props = options.props;
    if (!props) return;
    const res = {};
    let i, val, name;

    if (Array.isArray(props)) {
      i = props.length;

      while (i--) {
        val = props[i];

        if (typeof val === 'string') {
          name = camelize(val);
          res[name] = {
            type: null
          };
        } else {
          warn('props must be strings when using array syntax.');
        }
      }
    } else if (isPlainObject(props)) {
      for (const key in props) {
        val = props[key];
        name = camelize(key);
        res[name] = isPlainObject(val) ? val : {
          type: val
        };
      }
    } else {
      warn(`Invalid value for option "props": expected an Array or an Object, ` + `but got ${toRawType(props)}.`, vm);
    }

    options.props = res;
  }
  /**
   * Normalize all injections into Object-based format
   */


  function normalizeInject(options, vm) {
    const inject = options.inject;
    const normalized = options.inject = {};

    if (Array.isArray(inject)) {
      for (let i = 0; i < inject.length; i++) {
        normalized[inject[i]] = {
          from: inject[i]
        };
      }
    } else if (isPlainObject(inject)) {
      for (const key in inject) {
        const val = inject[key];
        normalized[key] = isPlainObject(val) ? extend({
          from: key
        }, val) : {
          from: val
        };
      }
    } else if (inject) {
      warn(`Invalid value for option "inject": expected an Array or an Object, ` + `but got ${toRawType(inject)}.`, vm);
    }
  }
  /**
   * Normalize raw function directives into object format.
   */


  function normalizeDirectives(options) {
    const dirs = options.directives;

    if (dirs) {
      for (const key in dirs) {
        const def = dirs[key];

        if (typeof def === 'function') {
          dirs[key] = {
            bind: def,
            update: def
          };
        }
      }
    }
  }

  function assertObjectType(name, value, vm) {
    if (!isPlainObject(value)) {
      warn(`Invalid value for option "${name}": expected an Object, ` + `but got ${toRawType(value)}.`, vm);
    }
  }
  /**
   * Merge two option objects into a new one.
   * Core utility used in both instantiation and inheritance.
   */


  function mergeOptions(parent, child, vm) {
    {
      checkComponents(child);
    }

    if (typeof child === 'function') {
      child = child.options;
    }

    normalizeProps(child, vm);
    normalizeInject(child, vm);
    normalizeDirectives(child);
    const extendsFrom = child.extends;

    if (extendsFrom) {
      parent = mergeOptions(parent, extendsFrom, vm);
    }

    if (child.mixins) {
      for (let i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }

    const options = {};
    let key;

    for (key in parent) {
      mergeField(key);
    }

    for (key in child) {
      if (!hasOwn(parent, key)) {
        mergeField(key);
      }
    }

    function mergeField(key) {
      const strat = strats[key] || defaultStrat;
      options[key] = strat(parent[key], child[key], vm, key);
    }

    return options;
  }
  /**
   * Resolve an asset.
   * This function is used because child instances need access
   * to assets defined in its ancestor chain.
   */


  function resolveAsset(options, type, id, warnMissing) {
    /* istanbul ignore if */
    if (typeof id !== 'string') {
      return;
    }

    const assets = options[type]; // check local registration variations first

    if (hasOwn(assets, id)) return assets[id];
    const camelizedId = camelize(id);
    if (hasOwn(assets, camelizedId)) return assets[camelizedId];
    const PascalCaseId = capitalize(camelizedId);
    if (hasOwn(assets, PascalCaseId)) return assets[PascalCaseId]; // fallback to prototype chain

    const res = assets[id] || assets[camelizedId] || assets[PascalCaseId];

    if (warnMissing && !res) {
      warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
    }

    return res;
  }
  /*  */


  function validateProp(key, propOptions, propsData, vm) {
    const prop = propOptions[key];
    const absent = !hasOwn(propsData, key);
    let value = propsData[key]; // handle boolean props

    if (isType(Boolean, prop.type)) {
      if (absent && !hasOwn(prop, 'default')) {
        value = false;
      } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
        value = true;
      }
    } // check default value


    if (value === undefined) {
      value = getPropDefaultValue(vm, prop, key); // since the default value is a fresh copy,
      // make sure to observe it.

      const prevShouldConvert = observerState.shouldConvert;
      observerState.shouldConvert = true;
      observe(value);
      observerState.shouldConvert = prevShouldConvert;
    }

    {
      assertProp(prop, key, value, vm, absent);
    }
    return value;
  }
  /**
   * Get the default value of a prop.
   */


  function getPropDefaultValue(vm, prop, key) {
    // no default, return undefined
    if (!hasOwn(prop, 'default')) {
      return undefined;
    }

    const def = prop.default; // warn against non-factory defaults for Object & Array

    if (isObject(def)) {
      warn('Invalid default value for prop "' + key + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
    } // the raw prop value was also undefined from previous render,
    // return previous default value to avoid unnecessary watcher trigger


    if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {
      return vm._props[key];
    } // call factory function for non-Function types
    // a value is Function if its prototype is function even across different execution context


    return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;
  }
  /**
   * Assert whether a prop is valid.
   */


  function assertProp(prop, name, value, vm, absent) {
    if (prop.required && absent) {
      warn('Missing required prop: "' + name + '"', vm);
      return;
    }

    if (value == null && !prop.required) {
      return;
    }

    let type = prop.type;
    let valid = !type || type === true;
    const expectedTypes = [];

    if (type) {
      if (!Array.isArray(type)) {
        type = [type];
      }

      for (let i = 0; i < type.length && !valid; i++) {
        const assertedType = assertType(value, type[i]);
        expectedTypes.push(assertedType.expectedType || '');
        valid = assertedType.valid;
      }
    }

    if (!valid) {
      warn(`Invalid prop: type check failed for prop "${name}".` + ` Expected ${expectedTypes.map(capitalize).join(', ')}` + `, got ${toRawType(value)}.`, vm);
      return;
    }

    const validator = prop.validator;

    if (validator) {
      if (!validator(value)) {
        warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
      }
    }
  }

  const simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

  function assertType(value, type) {
    let valid;
    const expectedType = getType(type);

    if (simpleCheckRE.test(expectedType)) {
      const t = typeof value;
      valid = t === expectedType.toLowerCase(); // for primitive wrapper objects

      if (!valid && t === 'object') {
        valid = value instanceof type;
      }
    } else if (expectedType === 'Object') {
      valid = isPlainObject(value);
    } else if (expectedType === 'Array') {
      valid = Array.isArray(value);
    } else {
      valid = value instanceof type;
    }

    return {
      valid,
      expectedType
    };
  }
  /**
   * Use function string name to check built-in types,
   * because a simple equality check will fail when running
   * across different vms / iframes.
   */


  function getType(fn) {
    const match = fn && fn.toString().match(/^\s*function (\w+)/);
    return match ? match[1] : '';
  }

  function isType(type, fn) {
    if (!Array.isArray(fn)) {
      return getType(fn) === getType(type);
    }

    for (let i = 0, len = fn.length; i < len; i++) {
      if (getType(fn[i]) === getType(type)) {
        return true;
      }
    }
    /* istanbul ignore next */


    return false;
  }
  /*  */


  function handleError(err, vm, info) {
    if (vm) {
      let cur = vm;

      while (cur = cur.$parent) {
        const hooks = cur.$options.errorCaptured;

        if (hooks) {
          for (let i = 0; i < hooks.length; i++) {
            try {
              const capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) return;
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }

    globalHandleError(err, vm, info);
  }

  function globalHandleError(err, vm, info) {
    if (config.errorHandler) {
      try {
        return config.errorHandler.call(null, err, vm, info);
      } catch (e) {
        logError(e, null, 'config.errorHandler');
      }
    }

    logError(err, vm, info);
  }

  function logError(err, vm, info) {
    {
      warn(`Error in ${info}: "${err.toString()}"`, vm);
    }
    /* istanbul ignore else */

    if ((inBrowser || inWeex) && typeof console !== 'undefined') {
      console.error(err);
    } else {
      throw err;
    }
  }
  /*  */

  /* globals MessageChannel */


  const callbacks = [];
  let pending = false;

  function flushCallbacks() {
    pending = false;
    const copies = callbacks.slice(0);
    callbacks.length = 0;

    for (let i = 0; i < copies.length; i++) {
      copies[i]();
    }
  } // Here we have async deferring wrappers using both micro and macro tasks.
  // In < 2.4 we used micro tasks everywhere, but there are some scenarios where
  // micro tasks have too high a priority and fires in between supposedly
  // sequential events (e.g. #4521, #6690) or even between bubbling of the same
  // event (#6566). However, using macro tasks everywhere also has subtle problems
  // when state is changed right before repaint (e.g. #6813, out-in transitions).
  // Here we use micro task by default, but expose a way to force macro task when
  // needed (e.g. in event handlers attached by v-on).


  let microTimerFunc;
  let macroTimerFunc;
  let useMacroTask = false; // Determine (macro) Task defer implementation.
  // Technically setImmediate should be the ideal choice, but it's only available
  // in IE. The only polyfill that consistently queues the callback after all DOM
  // events triggered in the same loop is by using MessageChannel.

  /* istanbul ignore if */

  if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
    macroTimerFunc = () => {
      setImmediate(flushCallbacks);
    };
  } else if (typeof MessageChannel !== 'undefined' && (isNative(MessageChannel) || // PhantomJS
  MessageChannel.toString() === '[object MessageChannelConstructor]')) {
    const channel = new MessageChannel();
    const port = channel.port2;
    channel.port1.onmessage = flushCallbacks;

    macroTimerFunc = () => {
      port.postMessage(1);
    };
  } else {
    /* istanbul ignore next */
    macroTimerFunc = () => {
      setTimeout(flushCallbacks, 0);
    };
  } // Determine MicroTask defer implementation.

  /* istanbul ignore next, $flow-disable-line */


  if (typeof Promise !== 'undefined' && isNative(Promise)) {
    const p = Promise.resolve();

    microTimerFunc = () => {
      p.then(flushCallbacks); // in problematic UIWebViews, Promise.then doesn't completely break, but
      // it can get stuck in a weird state where callbacks are pushed into the
      // microtask queue but the queue isn't being flushed, until the browser
      // needs to do some other work, e.g. handle a timer. Therefore we can
      // "force" the microtask queue to be flushed by adding an empty timer.

      if (isIOS) setTimeout(noop);
    };
  } else {
    // fallback to macro
    microTimerFunc = macroTimerFunc;
  }
  /**
   * Wrap a function so that if any code inside triggers state change,
   * the changes are queued using a Task instead of a MicroTask.
   */


  function withMacroTask(fn) {
    return fn._withTask || (fn._withTask = function () {
      useMacroTask = true;
      const res = fn.apply(null, arguments);
      useMacroTask = false;
      return res;
    });
  }

  function nextTick(cb, ctx) {
    let _resolve;

    callbacks.push(() => {
      if (cb) {
        try {
          cb.call(ctx);
        } catch (e) {
          handleError(e, ctx, 'nextTick');
        }
      } else if (_resolve) {
        _resolve(ctx);
      }
    });

    if (!pending) {
      pending = true;

      if (useMacroTask) {
        macroTimerFunc();
      } else {
        microTimerFunc();
      }
    } // $flow-disable-line


    if (!cb && typeof Promise !== 'undefined') {
      return new Promise(resolve => {
        _resolve = resolve;
      });
    }
  }
  /*  */


  let mark;
  let measure;
  {
    const perf = inBrowser && window.performance;
    /* istanbul ignore if */

    if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {
      mark = tag => perf.mark(tag);

      measure = (name, startTag, endTag) => {
        perf.measure(name, startTag, endTag);
        perf.clearMarks(startTag);
        perf.clearMarks(endTag);
        perf.clearMeasures(name);
      };
    }
  }
  /* not type checking this file because flow doesn't play well with Proxy */

  let initProxy;
  {
    const allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify
    );

    const warnNonPresent = (target, key) => {
      warn(`Property or method "${key}" is not defined on the instance but ` + 'referenced during render. Make sure that this property is reactive, ' + 'either in the data option, or for class-based components, by ' + 'initializing the property. ' + 'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.', target);
    };

    const hasProxy = typeof Proxy !== 'undefined' && Proxy.toString().match(/native code/);

    if (hasProxy) {
      const isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
      config.keyCodes = new Proxy(config.keyCodes, {
        set(target, key, value) {
          if (isBuiltInModifier(key)) {
            warn(`Avoid overwriting built-in modifier in config.keyCodes: .${key}`);
            return false;
          } else {
            target[key] = value;
            return true;
          }
        }

      });
    }

    const hasHandler = {
      has(target, key) {
        const has = key in target;
        const isAllowed = allowedGlobals(key) || key.charAt(0) === '_';

        if (!has && !isAllowed) {
          warnNonPresent(target, key);
        }

        return has || !isAllowed;
      }

    };
    const getHandler = {
      get(target, key) {
        if (typeof key === 'string' && !(key in target)) {
          warnNonPresent(target, key);
        }

        return target[key];
      }

    };

    initProxy = function initProxy(vm) {
      if (hasProxy) {
        // determine which proxy handler to use
        const options = vm.$options;
        const handlers = options.render && options.render._withStripped ? getHandler : hasHandler;
        vm._renderProxy = new Proxy(vm, handlers);
      } else {
        vm._renderProxy = vm;
      }
    };
  }
  /*  */

  const seenObjects = new _Set();
  /**
   * Recursively traverse an object to evoke all converted
   * getters, so that every nested property inside the object
   * is collected as a "deep" dependency.
   */

  function traverse(val) {
    _traverse(val, seenObjects);

    seenObjects.clear();
  }

  function _traverse(val, seen) {
    let i, keys;
    const isA = Array.isArray(val);

    if (!isA && !isObject(val) || Object.isFrozen(val)) {
      return;
    }

    if (val.__ob__) {
      const depId = val.__ob__.dep.id;

      if (seen.has(depId)) {
        return;
      }

      seen.add(depId);
    }

    if (isA) {
      i = val.length;

      while (i--) _traverse(val[i], seen);
    } else {
      keys = Object.keys(val);
      i = keys.length;

      while (i--) _traverse(val[keys[i]], seen);
    }
  }
  /*  */


  const normalizeEvent = cached(name => {
    const passive = name.charAt(0) === '&';
    name = passive ? name.slice(1) : name;
    const once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first

    name = once$$1 ? name.slice(1) : name;
    const capture = name.charAt(0) === '!';
    name = capture ? name.slice(1) : name;
    return {
      name,
      once: once$$1,
      capture,
      passive
    };
  });

  function createFnInvoker(fns) {
    function invoker() {
      const fns = invoker.fns;

      if (Array.isArray(fns)) {
        const cloned = fns.slice();

        for (let i = 0; i < cloned.length; i++) {
          cloned[i].apply(null, arguments);
        }
      } else {
        // return handler return value for single handlers
        return fns.apply(null, arguments);
      }
    }

    invoker.fns = fns;
    return invoker;
  }

  function updateListeners(on, oldOn, add, remove$$1, vm) {
    let name, cur, old, event;

    for (name in on) {
      cur = on[name];
      old = oldOn[name];
      event = normalizeEvent(name);

      if (isUndef(cur)) {
        warn(`Invalid handler for event "${event.name}": got ` + String(cur), vm);
      } else if (isUndef(old)) {
        if (isUndef(cur.fns)) {
          cur = on[name] = createFnInvoker(cur);
        }

        add(event.name, cur, event.once, event.capture, event.passive);
      } else if (cur !== old) {
        old.fns = cur;
        on[name] = old;
      }
    }

    for (name in oldOn) {
      if (isUndef(on[name])) {
        event = normalizeEvent(name);
        remove$$1(event.name, oldOn[name], event.capture);
      }
    }
  }
  /*  */


  function mergeVNodeHook(def, hookKey, hook) {
    if (def instanceof VNode) {
      def = def.data.hook || (def.data.hook = {});
    }

    let invoker;
    const oldHook = def[hookKey];

    function wrappedHook() {
      hook.apply(this, arguments); // important: remove merged hook to ensure it's called only once
      // and prevent memory leak

      remove(invoker.fns, wrappedHook);
    }

    if (isUndef(oldHook)) {
      // no existing hook
      invoker = createFnInvoker([wrappedHook]);
    } else {
      /* istanbul ignore if */
      if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
        // already a merged invoker
        invoker = oldHook;
        invoker.fns.push(wrappedHook);
      } else {
        // existing plain hook
        invoker = createFnInvoker([oldHook, wrappedHook]);
      }
    }

    invoker.merged = true;
    def[hookKey] = invoker;
  }
  /*  */


  function extractPropsFromVNodeData(data, Ctor, tag) {
    // we are only extracting raw values here.
    // validation and default values are handled in the child
    // component itself.
    const propOptions = Ctor.options.props;

    if (isUndef(propOptions)) {
      return;
    }

    const res = {};
    const {
      attrs,
      props
    } = data;

    if (isDef(attrs) || isDef(props)) {
      for (const key in propOptions) {
        const altKey = hyphenate(key);
        {
          const keyInLowerCase = key.toLowerCase();

          if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {
            tip(`Prop "${keyInLowerCase}" is passed to component ` + `${formatComponentName(tag || Ctor)}, but the declared prop name is` + ` "${key}". ` + `Note that HTML attributes are case-insensitive and camelCased ` + `props need to use their kebab-case equivalents when using in-DOM ` + `templates. You should probably use "${altKey}" instead of "${key}".`);
          }
        }
        checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);
      }
    }

    return res;
  }

  function checkProp(res, hash, key, altKey, preserve) {
    if (isDef(hash)) {
      if (hasOwn(hash, key)) {
        res[key] = hash[key];

        if (!preserve) {
          delete hash[key];
        }

        return true;
      } else if (hasOwn(hash, altKey)) {
        res[key] = hash[altKey];

        if (!preserve) {
          delete hash[altKey];
        }

        return true;
      }
    }

    return false;
  }
  /*  */
  // The template compiler attempts to minimize the need for normalization by
  // statically analyzing the template at compile time.
  //
  // For plain HTML markup, normalization can be completely skipped because the
  // generated render function is guaranteed to return Array<VNode>. There are
  // two cases where extra normalization is needed:
  // 1. When the children contains components - because a functional component
  // may return an Array instead of a single root. In this case, just a simple
  // normalization is needed - if any child is an Array, we flatten the whole
  // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
  // because functional components already normalize their own children.


  function simpleNormalizeChildren(children) {
    for (let i = 0; i < children.length; i++) {
      if (Array.isArray(children[i])) {
        return Array.prototype.concat.apply([], children);
      }
    }

    return children;
  } // 2. When the children contains constructs that always generated nested Arrays,
  // e.g. <template>, <slot>, v-for, or when the children is provided by user
  // with hand-written render functions / JSX. In such cases a full normalization
  // is needed to cater to all possible types of children values.


  function normalizeChildren(children) {
    return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;
  }

  function isTextNode(node) {
    return isDef(node) && isDef(node.text) && isFalse(node.isComment);
  }

  function normalizeArrayChildren(children, nestedIndex) {
    const res = [];
    let i, c, lastIndex, last;

    for (i = 0; i < children.length; i++) {
      c = children[i];
      if (isUndef(c) || typeof c === 'boolean') continue;
      lastIndex = res.length - 1;
      last = res[lastIndex]; //  nested

      if (Array.isArray(c)) {
        if (c.length > 0) {
          c = normalizeArrayChildren(c, `${nestedIndex || ''}_${i}`); // merge adjacent text nodes

          if (isTextNode(c[0]) && isTextNode(last)) {
            res[lastIndex] = createTextVNode(last.text + c[0].text);
            c.shift();
          }

          res.push.apply(res, c);
        }
      } else if (isPrimitive(c)) {
        if (isTextNode(last)) {
          // merge adjacent text nodes
          // this is necessary for SSR hydration because text nodes are
          // essentially merged when rendered to HTML strings
          res[lastIndex] = createTextVNode(last.text + c);
        } else if (c !== '') {
          // convert primitive to vnode
          res.push(createTextVNode(c));
        }
      } else {
        if (isTextNode(c) && isTextNode(last)) {
          // merge adjacent text nodes
          res[lastIndex] = createTextVNode(last.text + c.text);
        } else {
          // default key for nested array children (likely generated by v-for)
          if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
            c.key = `__vlist${nestedIndex}_${i}__`;
          }

          res.push(c);
        }
      }
    }

    return res;
  }
  /*  */


  function ensureCtor(comp, base) {
    if (comp.__esModule || hasSymbol && comp[Symbol.toStringTag] === 'Module') {
      comp = comp.default;
    }

    return isObject(comp) ? base.extend(comp) : comp;
  }

  function createAsyncPlaceholder(factory, data, context, children, tag) {
    const node = createEmptyVNode();
    node.asyncFactory = factory;
    node.asyncMeta = {
      data,
      context,
      children,
      tag
    };
    return node;
  }

  function resolveAsyncComponent(factory, baseCtor, context) {
    if (isTrue(factory.error) && isDef(factory.errorComp)) {
      return factory.errorComp;
    }

    if (isDef(factory.resolved)) {
      return factory.resolved;
    }

    if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
      return factory.loadingComp;
    }

    if (isDef(factory.contexts)) {
      // already pending
      factory.contexts.push(context);
    } else {
      const contexts = factory.contexts = [context];
      let sync = true;

      const forceRender = () => {
        for (let i = 0, l = contexts.length; i < l; i++) {
          contexts[i].$forceUpdate();
        }
      };

      const resolve = once(res => {
        // cache resolved
        factory.resolved = ensureCtor(res, baseCtor); // invoke callbacks only if this is not a synchronous resolve
        // (async resolves are shimmed as synchronous during SSR)

        if (!sync) {
          forceRender();
        }
      });
      const reject = once(reason => {
        warn(`Failed to resolve async component: ${String(factory)}` + (reason ? `\nReason: ${reason}` : ''));

        if (isDef(factory.errorComp)) {
          factory.error = true;
          forceRender();
        }
      });
      const res = factory(resolve, reject);

      if (isObject(res)) {
        if (typeof res.then === 'function') {
          // () => Promise
          if (isUndef(factory.resolved)) {
            res.then(resolve, reject);
          }
        } else if (isDef(res.component) && typeof res.component.then === 'function') {
          res.component.then(resolve, reject);

          if (isDef(res.error)) {
            factory.errorComp = ensureCtor(res.error, baseCtor);
          }

          if (isDef(res.loading)) {
            factory.loadingComp = ensureCtor(res.loading, baseCtor);

            if (res.delay === 0) {
              factory.loading = true;
            } else {
              setTimeout(() => {
                if (isUndef(factory.resolved) && isUndef(factory.error)) {
                  factory.loading = true;
                  forceRender();
                }
              }, res.delay || 200);
            }
          }

          if (isDef(res.timeout)) {
            setTimeout(() => {
              if (isUndef(factory.resolved)) {
                reject(`timeout (${res.timeout}ms)`);
              }
            }, res.timeout);
          }
        }
      }

      sync = false; // return in case resolved synchronously

      return factory.loading ? factory.loadingComp : factory.resolved;
    }
  }
  /*  */


  function isAsyncPlaceholder(node) {
    return node.isComment && node.asyncFactory;
  }
  /*  */


  function getFirstComponentChild(children) {
    if (Array.isArray(children)) {
      for (let i = 0; i < children.length; i++) {
        const c = children[i];

        if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
          return c;
        }
      }
    }
  }
  /*  */

  /*  */


  function initEvents(vm) {
    vm._events = Object.create(null);
    vm._hasHookEvent = false; // init parent attached events

    const listeners = vm.$options._parentListeners;

    if (listeners) {
      updateComponentListeners(vm, listeners);
    }
  }

  let target;

  function add(event, fn, once) {
    if (once) {
      target.$once(event, fn);
    } else {
      target.$on(event, fn);
    }
  }

  function remove$1(event, fn) {
    target.$off(event, fn);
  }

  function updateComponentListeners(vm, listeners, oldListeners) {
    target = vm;
    updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
    target = undefined;
  }

  function eventsMixin(Vue) {
    const hookRE = /^hook:/;

    Vue.prototype.$on = function (event, fn) {
      const vm = this;

      if (Array.isArray(event)) {
        for (let i = 0, l = event.length; i < l; i++) {
          this.$on(event[i], fn);
        }
      } else {
        (vm._events[event] || (vm._events[event] = [])).push(fn); // optimize hook:event cost by using a boolean flag marked at registration
        // instead of a hash lookup

        if (hookRE.test(event)) {
          vm._hasHookEvent = true;
        }
      }

      return vm;
    };

    Vue.prototype.$once = function (event, fn) {
      const vm = this;

      function on() {
        vm.$off(event, on);
        fn.apply(vm, arguments);
      }

      on.fn = fn;
      vm.$on(event, on);
      return vm;
    };

    Vue.prototype.$off = function (event, fn) {
      const vm = this; // all

      if (!arguments.length) {
        vm._events = Object.create(null);
        return vm;
      } // array of events


      if (Array.isArray(event)) {
        for (let i = 0, l = event.length; i < l; i++) {
          this.$off(event[i], fn);
        }

        return vm;
      } // specific event


      const cbs = vm._events[event];

      if (!cbs) {
        return vm;
      }

      if (!fn) {
        vm._events[event] = null;
        return vm;
      }

      if (fn) {
        // specific handler
        let cb;
        let i = cbs.length;

        while (i--) {
          cb = cbs[i];

          if (cb === fn || cb.fn === fn) {
            cbs.splice(i, 1);
            break;
          }
        }
      }

      return vm;
    };

    Vue.prototype.$emit = function (event) {
      const vm = this;
      {
        const lowerCaseEvent = event.toLowerCase();

        if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
          tip(`Event "${lowerCaseEvent}" is emitted in component ` + `${formatComponentName(vm)} but the handler is registered for "${event}". ` + `Note that HTML attributes are case-insensitive and you cannot use ` + `v-on to listen to camelCase events when using in-DOM templates. ` + `You should probably use "${hyphenate(event)}" instead of "${event}".`);
        }
      }
      let cbs = vm._events[event];

      if (cbs) {
        cbs = cbs.length > 1 ? toArray(cbs) : cbs;
        const args = toArray(arguments, 1);

        for (let i = 0, l = cbs.length; i < l; i++) {
          try {
            cbs[i].apply(vm, args);
          } catch (e) {
            handleError(e, vm, `event handler for "${event}"`);
          }
        }
      }

      return vm;
    };
  }
  /*  */

  /**
   * Runtime helper for resolving raw children VNodes into a slot object.
   */


  function resolveSlots(children, context) {
    const slots = {};

    if (!children) {
      return slots;
    }

    for (let i = 0, l = children.length; i < l; i++) {
      const child = children[i];
      const data = child.data; // remove slot attribute if the node is resolved as a Vue slot node

      if (data && data.attrs && data.attrs.slot) {
        delete data.attrs.slot;
      } // named slots should only be respected if the vnode was rendered in the
      // same context.


      if ((child.context === context || child.functionalContext === context) && data && data.slot != null) {
        const name = child.data.slot;
        const slot = slots[name] || (slots[name] = []);

        if (child.tag === 'template') {
          slot.push.apply(slot, child.children);
        } else {
          slot.push(child);
        }
      } else {
        (slots.default || (slots.default = [])).push(child);
      }
    } // ignore slots that contains only whitespace


    for (const name in slots) {
      if (slots[name].every(isWhitespace)) {
        delete slots[name];
      }
    }

    return slots;
  }

  function isWhitespace(node) {
    return node.isComment && !node.asyncFactory || node.text === ' ';
  }

  function resolveScopedSlots(fns, // see flow/vnode
  res) {
    res = res || {};

    for (let i = 0; i < fns.length; i++) {
      if (Array.isArray(fns[i])) {
        resolveScopedSlots(fns[i], res);
      } else {
        res[fns[i].key] = fns[i].fn;
      }
    }

    return res;
  }
  /*  */


  let activeInstance = null;
  let isUpdatingChildComponent = false;

  function initLifecycle(vm) {
    const options = vm.$options; // locate first non-abstract parent

    let parent = options.parent;

    if (parent && !options.abstract) {
      while (parent.$options.abstract && parent.$parent) {
        parent = parent.$parent;
      }

      parent.$children.push(vm);
    }

    vm.$parent = parent;
    vm.$root = parent ? parent.$root : vm;
    vm.$children = [];
    vm.$refs = {};
    vm._watcher = null;
    vm._inactive = null;
    vm._directInactive = false;
    vm._isMounted = false;
    vm._isDestroyed = false;
    vm._isBeingDestroyed = false;
  }

  function lifecycleMixin(Vue) {
    Vue.prototype._update = function (vnode, hydrating) {
      const vm = this;

      if (vm._isMounted) {
        callHook(vm, 'beforeUpdate');
      }

      const prevEl = vm.$el;
      const prevVnode = vm._vnode;
      const prevActiveInstance = activeInstance;
      activeInstance = vm;
      vm._vnode = vnode; // Vue.prototype.__patch__ is injected in entry points
      // based on the rendering backend used.

      if (!prevVnode) {
        // initial render
        vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false
        /* removeOnly */
        , vm.$options._parentElm, vm.$options._refElm); // no need for the ref nodes after initial patch
        // this prevents keeping a detached DOM tree in memory (#5851)

        vm.$options._parentElm = vm.$options._refElm = null;
      } else {
        // updates
        vm.$el = vm.__patch__(prevVnode, vnode);
      }

      activeInstance = prevActiveInstance; // update __vue__ reference

      if (prevEl) {
        prevEl.__vue__ = null;
      }

      if (vm.$el) {
        vm.$el.__vue__ = vm;
      } // if parent is an HOC, update its $el as well


      if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
        vm.$parent.$el = vm.$el;
      } // updated hook is called by the scheduler to ensure that children are
      // updated in a parent's updated hook.

    };

    Vue.prototype.$forceUpdate = function () {
      const vm = this;

      if (vm._watcher) {
        vm._watcher.update();
      }
    };

    Vue.prototype.$destroy = function () {
      const vm = this;

      if (vm._isBeingDestroyed) {
        return;
      }

      callHook(vm, 'beforeDestroy');
      vm._isBeingDestroyed = true; // remove self from parent

      const parent = vm.$parent;

      if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
        remove(parent.$children, vm);
      } // teardown watchers


      if (vm._watcher) {
        vm._watcher.teardown();
      }

      let i = vm._watchers.length;

      while (i--) {
        vm._watchers[i].teardown();
      } // remove reference from data ob
      // frozen object may not have observer.


      if (vm._data.__ob__) {
        vm._data.__ob__.vmCount--;
      } // call the last hook...


      vm._isDestroyed = true; // invoke destroy hooks on current rendered tree

      vm.__patch__(vm._vnode, null); // fire destroyed hook


      callHook(vm, 'destroyed'); // turn off all instance listeners.

      vm.$off(); // remove __vue__ reference

      if (vm.$el) {
        vm.$el.__vue__ = null;
      } // release circular reference (#6759)


      if (vm.$vnode) {
        vm.$vnode.parent = null;
      }
    };
  }

  function mountComponent(vm, el, hydrating) {
    vm.$el = el;

    if (!vm.$options.render) {
      vm.$options.render = createEmptyVNode;
      {
        /* istanbul ignore if */
        if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {
          warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);
        } else {
          warn('Failed to mount component: template or render function not defined.', vm);
        }
      }
    }

    callHook(vm, 'beforeMount');
    let updateComponent;
    /* istanbul ignore if */

    if (config.performance && mark) {
      updateComponent = () => {
        const name = vm._name;
        const id = vm._uid;
        const startTag = `vue-perf-start:${id}`;
        const endTag = `vue-perf-end:${id}`;
        mark(startTag);

        const vnode = vm._render();

        mark(endTag);
        measure(`vue ${name} render`, startTag, endTag);
        mark(startTag);

        vm._update(vnode, hydrating);

        mark(endTag);
        measure(`vue ${name} patch`, startTag, endTag);
      };
    } else {
      updateComponent = () => {
        vm._update(vm._render(), hydrating);
      };
    }

    vm._watcher = new Watcher(vm, updateComponent, noop);
    hydrating = false; // manually mounted instance, call mounted on self
    // mounted is called for render-created child components in its inserted hook

    if (vm.$vnode == null) {
      vm._isMounted = true;
      callHook(vm, 'mounted');
    }

    return vm;
  }

  function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
    {
      isUpdatingChildComponent = true;
    } // determine whether component has slot children
    // we need to do this before overwriting $options._renderChildren

    const hasChildren = !!(renderChildren || // has new static slots
    vm.$options._renderChildren || // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
    );
    vm.$options._parentVnode = parentVnode;
    vm.$vnode = parentVnode; // update vm's placeholder node without re-render

    if (vm._vnode) {
      // update child tree's parent
      vm._vnode.parent = parentVnode;
    }

    vm.$options._renderChildren = renderChildren; // update $attrs and $listeners hash
    // these are also reactive so they may trigger child update if the child
    // used them during render

    vm.$attrs = parentVnode.data && parentVnode.data.attrs || emptyObject;
    vm.$listeners = listeners || emptyObject; // update props

    if (propsData && vm.$options.props) {
      observerState.shouldConvert = false;
      const props = vm._props;
      const propKeys = vm.$options._propKeys || [];

      for (let i = 0; i < propKeys.length; i++) {
        const key = propKeys[i];
        props[key] = validateProp(key, vm.$options.props, propsData, vm);
      }

      observerState.shouldConvert = true; // keep a copy of raw propsData

      vm.$options.propsData = propsData;
    } // update listeners


    if (listeners) {
      const oldListeners = vm.$options._parentListeners;
      vm.$options._parentListeners = listeners;
      updateComponentListeners(vm, listeners, oldListeners);
    } // resolve slots + force update if has children


    if (hasChildren) {
      vm.$slots = resolveSlots(renderChildren, parentVnode.context);
      vm.$forceUpdate();
    }

    {
      isUpdatingChildComponent = false;
    }
  }

  function isInInactiveTree(vm) {
    while (vm && (vm = vm.$parent)) {
      if (vm._inactive) return true;
    }

    return false;
  }

  function activateChildComponent(vm, direct) {
    if (direct) {
      vm._directInactive = false;

      if (isInInactiveTree(vm)) {
        return;
      }
    } else if (vm._directInactive) {
      return;
    }

    if (vm._inactive || vm._inactive === null) {
      vm._inactive = false;

      for (let i = 0; i < vm.$children.length; i++) {
        activateChildComponent(vm.$children[i]);
      }

      callHook(vm, 'activated');
    }
  }

  function deactivateChildComponent(vm, direct) {
    if (direct) {
      vm._directInactive = true;

      if (isInInactiveTree(vm)) {
        return;
      }
    }

    if (!vm._inactive) {
      vm._inactive = true;

      for (let i = 0; i < vm.$children.length; i++) {
        deactivateChildComponent(vm.$children[i]);
      }

      callHook(vm, 'deactivated');
    }
  }

  function callHook(vm, hook) {
    const handlers = vm.$options[hook];

    if (handlers) {
      for (let i = 0, j = handlers.length; i < j; i++) {
        try {
          handlers[i].call(vm);
        } catch (e) {
          handleError(e, vm, `${hook} hook`);
        }
      }
    }

    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook);
    }
  }
  /*  */


  const MAX_UPDATE_COUNT = 100;
  const queue = [];
  const activatedChildren = [];
  let has = {};
  let circular = {};
  let waiting = false;
  let flushing = false;
  let index = 0;
  /**
   * Reset the scheduler's state.
   */

  function resetSchedulerState() {
    index = queue.length = activatedChildren.length = 0;
    has = {};
    {
      circular = {};
    }
    waiting = flushing = false;
  }
  /**
   * Flush both queues and run the watchers.
   */


  function flushSchedulerQueue() {
    flushing = true;
    let watcher, id; // Sort queue before flush.
    // This ensures that:
    // 1. Components are updated from parent to child. (because parent is always
    //    created before the child)
    // 2. A component's user watchers are run before its render watcher (because
    //    user watchers are created before the render watcher)
    // 3. If a component is destroyed during a parent component's watcher run,
    //    its watchers can be skipped.

    queue.sort((a, b) => a.id - b.id); // do not cache length because more watchers might be pushed
    // as we run existing watchers

    for (index = 0; index < queue.length; index++) {
      watcher = queue[index];
      id = watcher.id;
      has[id] = null;
      watcher.run(); // in dev build, check and stop circular updates.

      if (has[id] != null) {
        circular[id] = (circular[id] || 0) + 1;

        if (circular[id] > MAX_UPDATE_COUNT) {
          warn('You may have an infinite update loop ' + (watcher.user ? `in watcher with expression "${watcher.expression}"` : `in a component render function.`), watcher.vm);
          break;
        }
      }
    } // keep copies of post queues before resetting state


    const activatedQueue = activatedChildren.slice();
    const updatedQueue = queue.slice();
    resetSchedulerState(); // call component updated and activated hooks

    callActivatedHooks(activatedQueue);
    callUpdatedHooks(updatedQueue); // devtool hook

    /* istanbul ignore if */

    if (devtools && config.devtools) {
      devtools.emit('flush');
    }
  }

  function callUpdatedHooks(queue) {
    let i = queue.length;

    while (i--) {
      const watcher = queue[i];
      const vm = watcher.vm;

      if (vm._watcher === watcher && vm._isMounted) {
        callHook(vm, 'updated');
      }
    }
  }
  /**
   * Queue a kept-alive component that was activated during patch.
   * The queue will be processed after the entire tree has been patched.
   */


  function queueActivatedComponent(vm) {
    // setting _inactive to false here so that a render function can
    // rely on checking whether it's in an inactive tree (e.g. router-view)
    vm._inactive = false;
    activatedChildren.push(vm);
  }

  function callActivatedHooks(queue) {
    for (let i = 0; i < queue.length; i++) {
      queue[i]._inactive = true;
      activateChildComponent(queue[i], true
      /* true */
      );
    }
  }
  /**
   * Push a watcher into the watcher queue.
   * Jobs with duplicate IDs will be skipped unless it's
   * pushed when the queue is being flushed.
   */


  function queueWatcher(watcher) {
    const id = watcher.id;

    if (has[id] == null) {
      has[id] = true;

      if (!flushing) {
        queue.push(watcher);
      } else {
        // if already flushing, splice the watcher based on its id
        // if already past its id, it will be run next immediately.
        let i = queue.length - 1;

        while (i > index && queue[i].id > watcher.id) {
          i--;
        }

        queue.splice(i + 1, 0, watcher);
      } // queue the flush


      if (!waiting) {
        waiting = true;
        nextTick(flushSchedulerQueue);
      }
    }
  }
  /*  */


  let uid$2 = 0;
  /**
   * A watcher parses an expression, collects dependencies,
   * and fires callback when the expression value changes.
   * This is used for both the $watch() api and directives.
   */

  class Watcher {
    constructor(vm, expOrFn, cb, options) {
      this.vm = vm;

      vm._watchers.push(this); // options


      if (options) {
        this.deep = !!options.deep;
        this.user = !!options.user;
        this.lazy = !!options.lazy;
        this.sync = !!options.sync;
      } else {
        this.deep = this.user = this.lazy = this.sync = false;
      }

      this.cb = cb;
      this.id = ++uid$2; // uid for batching

      this.active = true;
      this.dirty = this.lazy; // for lazy watchers

      this.deps = [];
      this.newDeps = [];
      this.depIds = new _Set();
      this.newDepIds = new _Set();
      this.expression = expOrFn.toString(); // parse expression for getter

      if (typeof expOrFn === 'function') {
        this.getter = expOrFn;
      } else {
        this.getter = parsePath(expOrFn);

        if (!this.getter) {
          this.getter = function () {};

          warn(`Failed watching path: "${expOrFn}" ` + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);
        }
      }

      this.value = this.lazy ? undefined : this.get();
    }
    /**
     * Evaluate the getter, and re-collect dependencies.
     */


    get() {
      pushTarget(this);
      let value;
      const vm = this.vm;

      try {
        value = this.getter.call(vm, vm);
      } catch (e) {
        if (this.user) {
          handleError(e, vm, `getter for watcher "${this.expression}"`);
        } else {
          throw e;
        }
      } finally {
        // "touch" every property so they are all tracked as
        // dependencies for deep watching
        if (this.deep) {
          traverse(value);
        }

        popTarget();
        this.cleanupDeps();
      }

      return value;
    }
    /**
     * Add a dependency to this directive.
     */


    addDep(dep) {
      const id = dep.id;

      if (!this.newDepIds.has(id)) {
        this.newDepIds.add(id);
        this.newDeps.push(dep);

        if (!this.depIds.has(id)) {
          dep.addSub(this);
        }
      }
    }
    /**
     * Clean up for dependency collection.
     */


    cleanupDeps() {
      let i = this.deps.length;

      while (i--) {
        const dep = this.deps[i];

        if (!this.newDepIds.has(dep.id)) {
          dep.removeSub(this);
        }
      }

      let tmp = this.depIds;
      this.depIds = this.newDepIds;
      this.newDepIds = tmp;
      this.newDepIds.clear();
      tmp = this.deps;
      this.deps = this.newDeps;
      this.newDeps = tmp;
      this.newDeps.length = 0;
    }
    /**
     * Subscriber interface.
     * Will be called when a dependency changes.
     */


    update() {
      /* istanbul ignore else */
      if (this.lazy) {
        this.dirty = true;
      } else if (this.sync) {
        this.run();
      } else {
        queueWatcher(this);
      }
    }
    /**
     * Scheduler job interface.
     * Will be called by the scheduler.
     */


    run() {
      if (this.active) {
        const value = this.get();

        if (value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even
        // when the value is the same, because the value may
        // have mutated.
        isObject(value) || this.deep) {
          // set new value
          const oldValue = this.value;
          this.value = value;

          if (this.user) {
            try {
              this.cb.call(this.vm, value, oldValue);
            } catch (e) {
              handleError(e, this.vm, `callback for watcher "${this.expression}"`);
            }
          } else {
            this.cb.call(this.vm, value, oldValue);
          }
        }
      }
    }
    /**
     * Evaluate the value of the watcher.
     * This only gets called for lazy watchers.
     */


    evaluate() {
      this.value = this.get();
      this.dirty = false;
    }
    /**
     * Depend on all deps collected by this watcher.
     */


    depend() {
      let i = this.deps.length;

      while (i--) {
        this.deps[i].depend();
      }
    }
    /**
     * Remove self from all dependencies' subscriber list.
     */


    teardown() {
      if (this.active) {
        // remove self from vm's watcher list
        // this is a somewhat expensive operation so we skip it
        // if the vm is being destroyed.
        if (!this.vm._isBeingDestroyed) {
          remove(this.vm._watchers, this);
        }

        let i = this.deps.length;

        while (i--) {
          this.deps[i].removeSub(this);
        }

        this.active = false;
      }
    }

  }
  /*  */


  const sharedPropertyDefinition = {
    enumerable: true,
    configurable: true,
    get: noop,
    set: noop
  };

  function proxy(target, sourceKey, key) {
    sharedPropertyDefinition.get = function proxyGetter() {
      return this[sourceKey][key];
    };

    sharedPropertyDefinition.set = function proxySetter(val) {
      this[sourceKey][key] = val;
    };

    Object.defineProperty(target, key, sharedPropertyDefinition);
  }

  function initState(vm) {
    vm._watchers = [];
    const opts = vm.$options;
    if (opts.props) initProps(vm, opts.props);
    if (opts.methods) initMethods(vm, opts.methods);

    if (opts.data) {
      initData(vm);
    } else {
      observe(vm._data = {}, true
      /* asRootData */
      );
    }

    if (opts.computed) initComputed(vm, opts.computed);

    if (opts.watch && opts.watch !== nativeWatch) {
      initWatch(vm, opts.watch);
    }
  }

  function initProps(vm, propsOptions) {
    const propsData = vm.$options.propsData || {};
    const props = vm._props = {}; // cache prop keys so that future props updates can iterate using Array
    // instead of dynamic object key enumeration.

    const keys = vm.$options._propKeys = [];
    const isRoot = !vm.$parent; // root instance props should be converted

    observerState.shouldConvert = isRoot;

    for (const key in propsOptions) {
      keys.push(key);
      const value = validateProp(key, propsOptions, propsData, vm);
      /* istanbul ignore else */

      {
        const hyphenatedKey = hyphenate(key);

        if (isReservedAttribute(hyphenatedKey) || config.isReservedAttr(hyphenatedKey)) {
          warn(`"${hyphenatedKey}" is a reserved attribute and cannot be used as component prop.`, vm);
        }

        defineReactive(props, key, value, () => {
          if (vm.$parent && !isUpdatingChildComponent) {
            warn(`Avoid mutating a prop directly since the value will be ` + `overwritten whenever the parent component re-renders. ` + `Instead, use a data or computed property based on the prop's ` + `value. Prop being mutated: "${key}"`, vm);
          }
        });
      } // static props are already proxied on the component's prototype
      // during Vue.extend(). We only need to proxy props defined at
      // instantiation here.

      if (!(key in vm)) {
        proxy(vm, `_props`, key);
      }
    }

    observerState.shouldConvert = true;
  }

  function initData(vm) {
    let data = vm.$options.data;
    data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};

    if (!isPlainObject(data)) {
      data = {};
      warn('data functions should return an object:\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);
    } // proxy data on instance


    const keys = Object.keys(data);
    const props = vm.$options.props;
    const methods = vm.$options.methods;
    let i = keys.length;

    while (i--) {
      const key = keys[i];
      {
        if (methods && hasOwn(methods, key)) {
          warn(`Method "${key}" has already been defined as a data property.`, vm);
        }
      }

      if (props && hasOwn(props, key)) {
        warn(`The data property "${key}" is already declared as a prop. ` + `Use prop default value instead.`, vm);
      } else if (!isReserved(key)) {
        proxy(vm, `_data`, key);
      }
    } // observe data


    observe(data, true
    /* asRootData */
    );
  }

  function getData(data, vm) {
    try {
      return data.call(vm, vm);
    } catch (e) {
      handleError(e, vm, `data()`);
      return {};
    }
  }

  const computedWatcherOptions = {
    lazy: true
  };

  function initComputed(vm, computed) {
    const watchers = vm._computedWatchers = Object.create(null); // computed properties are just getters during SSR

    const isSSR = isServerRendering();

    for (const key in computed) {
      const userDef = computed[key];
      const getter = typeof userDef === 'function' ? userDef : userDef.get;

      if (getter == null) {
        warn(`Getter is missing for computed property "${key}".`, vm);
      }

      if (!isSSR) {
        // create internal watcher for the computed property.
        watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);
      } // component-defined computed properties are already defined on the
      // component prototype. We only need to define computed properties defined
      // at instantiation here.


      if (!(key in vm)) {
        defineComputed(vm, key, userDef);
      } else {
        if (key in vm.$data) {
          warn(`The computed property "${key}" is already defined in data.`, vm);
        } else if (vm.$options.props && key in vm.$options.props) {
          warn(`The computed property "${key}" is already defined as a prop.`, vm);
        }
      }
    }
  }

  function defineComputed(target, key, userDef) {
    const shouldCache = !isServerRendering();

    if (typeof userDef === 'function') {
      sharedPropertyDefinition.get = shouldCache ? createComputedGetter(key) : userDef;
      sharedPropertyDefinition.set = noop;
    } else {
      sharedPropertyDefinition.get = userDef.get ? shouldCache && userDef.cache !== false ? createComputedGetter(key) : userDef.get : noop;
      sharedPropertyDefinition.set = userDef.set ? userDef.set : noop;
    }

    if (sharedPropertyDefinition.set === noop) {
      sharedPropertyDefinition.set = function () {
        warn(`Computed property "${key}" was assigned to but it has no setter.`, this);
      };
    }

    Object.defineProperty(target, key, sharedPropertyDefinition);
  }

  function createComputedGetter(key) {
    return function computedGetter() {
      const watcher = this._computedWatchers && this._computedWatchers[key];

      if (watcher) {
        if (watcher.dirty) {
          watcher.evaluate();
        }

        if (Dep.target) {
          watcher.depend();
        }

        return watcher.value;
      }
    };
  }

  function initMethods(vm, methods) {
    const props = vm.$options.props;

    for (const key in methods) {
      {
        if (methods[key] == null) {
          warn(`Method "${key}" has an undefined value in the component definition. ` + `Did you reference the function correctly?`, vm);
        }

        if (props && hasOwn(props, key)) {
          warn(`Method "${key}" has already been defined as a prop.`, vm);
        }

        if (key in vm && isReserved(key)) {
          warn(`Method "${key}" conflicts with an existing Vue instance method. ` + `Avoid defining component methods that start with _ or $.`);
        }
      }
      vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
    }
  }

  function initWatch(vm, watch) {
    for (const key in watch) {
      const handler = watch[key];

      if (Array.isArray(handler)) {
        for (let i = 0; i < handler.length; i++) {
          createWatcher(vm, key, handler[i]);
        }
      } else {
        createWatcher(vm, key, handler);
      }
    }
  }

  function createWatcher(vm, keyOrFn, handler, options) {
    if (isPlainObject(handler)) {
      options = handler;
      handler = handler.handler;
    }

    if (typeof handler === 'string') {
      handler = vm[handler];
    }

    return vm.$watch(keyOrFn, handler, options);
  }

  function stateMixin(Vue) {
    // flow somehow has problems with directly declared definition object
    // when using Object.defineProperty, so we have to procedurally build up
    // the object here.
    const dataDef = {};

    dataDef.get = function () {
      return this._data;
    };

    const propsDef = {};

    propsDef.get = function () {
      return this._props;
    };

    {
      dataDef.set = function (newData) {
        warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);
      };

      propsDef.set = function () {
        warn(`$props is readonly.`, this);
      };
    }
    Object.defineProperty(Vue.prototype, '$data', dataDef);
    Object.defineProperty(Vue.prototype, '$props', propsDef);
    Vue.prototype.$set = set$1;
    Vue.prototype.$delete = del;

    Vue.prototype.$watch = function (expOrFn, cb, options) {
      const vm = this;

      if (isPlainObject(cb)) {
        return createWatcher(vm, expOrFn, cb, options);
      }

      options = options || {};
      options.user = true;
      const watcher = new Watcher(vm, expOrFn, cb, options);

      if (options.immediate) {
        cb.call(vm, watcher.value);
      }

      return function unwatchFn() {
        watcher.teardown();
      };
    };
  }
  /*  */


  function initProvide(vm) {
    const provide = vm.$options.provide;

    if (provide) {
      vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;
    }
  }

  function initInjections(vm) {
    const result = resolveInject(vm.$options.inject, vm);

    if (result) {
      observerState.shouldConvert = false;
      Object.keys(result).forEach(key => {
        /* istanbul ignore else */
        {
          defineReactive(vm, key, result[key], () => {
            warn(`Avoid mutating an injected value directly since the changes will be ` + `overwritten whenever the provided component re-renders. ` + `injection being mutated: "${key}"`, vm);
          });
        }
      });
      observerState.shouldConvert = true;
    }
  }

  function resolveInject(inject, vm) {
    if (inject) {
      // inject is :any because flow is not smart enough to figure out cached
      const result = Object.create(null);
      const keys = hasSymbol ? Reflect.ownKeys(inject).filter(key => {
        /* istanbul ignore next */
        return Object.getOwnPropertyDescriptor(inject, key).enumerable;
      }) : Object.keys(inject);

      for (let i = 0; i < keys.length; i++) {
        const key = keys[i];
        const provideKey = inject[key].from;
        let source = vm;

        while (source) {
          if (source._provided && provideKey in source._provided) {
            result[key] = source._provided[provideKey];
            break;
          }

          source = source.$parent;
        }

        if (!source) {
          if ('default' in inject[key]) {
            const provideDefault = inject[key].default;
            result[key] = typeof provideDefault === 'function' ? provideDefault.call(vm) : provideDefault;
          } else {
            warn(`Injection "${key}" not found`, vm);
          }
        }
      }

      return result;
    }
  }
  /*  */

  /**
   * Runtime helper for rendering v-for lists.
   */


  function renderList(val, render) {
    let ret, i, l, keys, key;

    if (Array.isArray(val) || typeof val === 'string') {
      ret = new Array(val.length);

      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = render(val[i], i);
      }
    } else if (typeof val === 'number') {
      ret = new Array(val);

      for (i = 0; i < val; i++) {
        ret[i] = render(i + 1, i);
      }
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = new Array(keys.length);

      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }

    if (isDef(ret)) {
      ret._isVList = true;
    }

    return ret;
  }
  /*  */

  /**
   * Runtime helper for rendering <slot>
   */


  function renderSlot(name, fallback, props, bindObject) {
    const scopedSlotFn = this.$scopedSlots[name];
    let nodes;

    if (scopedSlotFn) {
      // scoped slot
      props = props || {};

      if (bindObject) {
        if (!isObject(bindObject)) {
          warn('slot v-bind without argument expects an Object', this);
        }

        props = extend(extend({}, bindObject), props);
      }

      nodes = scopedSlotFn(props) || fallback;
    } else {
      const slotNodes = this.$slots[name]; // warn duplicate slot usage

      if (slotNodes) {
        if (slotNodes._rendered) {
          warn(`Duplicate presence of slot "${name}" found in the same render tree ` + `- this will likely cause render errors.`, this);
        }

        slotNodes._rendered = true;
      }

      nodes = slotNodes || fallback;
    }

    const target = props && props.slot;

    if (target) {
      return this.$createElement('template', {
        slot: target
      }, nodes);
    } else {
      return nodes;
    }
  }
  /*  */

  /**
   * Runtime helper for resolving filters
   */


  function resolveFilter(id) {
    return resolveAsset(this.$options, 'filters', id, true) || identity;
  }
  /*  */

  /**
   * Runtime helper for checking keyCodes from config.
   * exposed as Vue.prototype._k
   * passing in eventKeyName as last argument separately for backwards compat
   */


  function checkKeyCodes(eventKeyCode, key, builtInAlias, eventKeyName) {
    const keyCodes = config.keyCodes[key] || builtInAlias;

    if (keyCodes) {
      if (Array.isArray(keyCodes)) {
        return keyCodes.indexOf(eventKeyCode) === -1;
      } else {
        return keyCodes !== eventKeyCode;
      }
    } else if (eventKeyName) {
      return hyphenate(eventKeyName) !== key;
    }
  }
  /*  */

  /**
   * Runtime helper for merging v-bind="object" into a VNode's data.
   */


  function bindObjectProps(data, tag, value, asProp, isSync) {
    if (value) {
      if (!isObject(value)) {
        warn('v-bind without argument expects an Object or Array value', this);
      } else {
        if (Array.isArray(value)) {
          value = toObject(value);
        }

        let hash;

        for (const key in value) {
          if (key === 'class' || key === 'style' || isReservedAttribute(key)) {
            hash = data;
          } else {
            const type = data.attrs && data.attrs.type;
            hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});
          }

          if (!(key in hash)) {
            hash[key] = value[key];

            if (isSync) {
              const on = data.on || (data.on = {});

              on[`update:${key}`] = function ($event) {
                value[key] = $event;
              };
            }
          }
        }
      }
    }

    return data;
  }
  /*  */

  /**
   * Runtime helper for rendering static trees.
   */


  function renderStatic(index, isInFor, isOnce) {
    // render fns generated by compiler < 2.5.4 does not provide v-once
    // information to runtime so be conservative
    const isOldVersion = arguments.length < 3; // if a static tree is generated by v-once, it is cached on the instance;
    // otherwise it is purely static and can be cached on the shared options
    // across all instances.

    const renderFns = this.$options.staticRenderFns;
    const cached = isOldVersion || isOnce ? this._staticTrees || (this._staticTrees = []) : renderFns.cached || (renderFns.cached = []);
    let tree = cached[index]; // if has already-rendered static tree and not inside v-for,
    // we can reuse the same tree by doing a shallow clone.

    if (tree && !isInFor) {
      return Array.isArray(tree) ? cloneVNodes(tree) : cloneVNode(tree);
    } // otherwise, render a fresh tree.


    tree = cached[index] = renderFns[index].call(this._renderProxy, null, this);
    markStatic(tree, `__static__${index}`, false);
    return tree;
  }
  /**
   * Runtime helper for v-once.
   * Effectively it means marking the node as static with a unique key.
   */


  function markOnce(tree, index, key) {
    markStatic(tree, `__once__${index}${key ? `_${key}` : ``}`, true);
    return tree;
  }

  function markStatic(tree, key, isOnce) {
    if (Array.isArray(tree)) {
      for (let i = 0; i < tree.length; i++) {
        if (tree[i] && typeof tree[i] !== 'string') {
          markStaticNode(tree[i], `${key}_${i}`, isOnce);
        }
      }
    } else {
      markStaticNode(tree, key, isOnce);
    }
  }

  function markStaticNode(node, key, isOnce) {
    node.isStatic = true;
    node.key = key;
    node.isOnce = isOnce;
  }
  /*  */


  function bindObjectListeners(data, value) {
    if (value) {
      if (!isPlainObject(value)) {
        warn('v-on without argument expects an Object value', this);
      } else {
        const on = data.on = data.on ? extend({}, data.on) : {};

        for (const key in value) {
          const existing = on[key];
          const ours = value[key];
          on[key] = existing ? [].concat(existing, ours) : ours;
        }
      }
    }

    return data;
  }
  /*  */


  function installRenderHelpers(target) {
    target._o = markOnce;
    target._n = toNumber;
    target._s = toString$1;
    target._l = renderList;
    target._t = renderSlot;
    target._q = looseEqual;
    target._i = looseIndexOf;
    target._m = renderStatic;
    target._f = resolveFilter;
    target._k = checkKeyCodes;
    target._b = bindObjectProps;
    target._v = createTextVNode;
    target._e = createEmptyVNode;
    target._u = resolveScopedSlots;
    target._g = bindObjectListeners;
  }
  /*  */


  function FunctionalRenderContext(data, props, children, parent, Ctor) {
    const options = Ctor.options;
    this.data = data;
    this.props = props;
    this.children = children;
    this.parent = parent;
    this.listeners = data.on || emptyObject;
    this.injections = resolveInject(options.inject, parent);

    this.slots = () => resolveSlots(children, parent); // ensure the createElement function in functional components
    // gets a unique context - this is necessary for correct named slot check


    const contextVm = Object.create(parent);
    const isCompiled = isTrue(options._compiled);
    const needNormalization = !isCompiled; // support for compiled functional template

    if (isCompiled) {
      // exposing $options for renderStatic()
      this.$options = options; // pre-resolve slots for renderSlot()

      this.$slots = this.slots();
      this.$scopedSlots = data.scopedSlots || emptyObject;
    }

    if (options._scopeId) {
      this._c = (a, b, c, d) => {
        const vnode = createElement(contextVm, a, b, c, d, needNormalization);

        if (vnode) {
          vnode.functionalScopeId = options._scopeId;
          vnode.functionalContext = parent;
        }

        return vnode;
      };
    } else {
      this._c = (a, b, c, d) => createElement(contextVm, a, b, c, d, needNormalization);
    }
  }

  installRenderHelpers(FunctionalRenderContext.prototype);

  function createFunctionalComponent(Ctor, propsData, data, contextVm, children) {
    const options = Ctor.options;
    const props = {};
    const propOptions = options.props;

    if (isDef(propOptions)) {
      for (const key in propOptions) {
        props[key] = validateProp(key, propOptions, propsData || emptyObject);
      }
    } else {
      if (isDef(data.attrs)) mergeProps(props, data.attrs);
      if (isDef(data.props)) mergeProps(props, data.props);
    }

    const renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);
    const vnode = options.render.call(null, renderContext._c, renderContext);

    if (vnode instanceof VNode) {
      vnode.functionalContext = contextVm;
      vnode.functionalOptions = options;

      if (data.slot) {
        (vnode.data || (vnode.data = {})).slot = data.slot;
      }
    }

    return vnode;
  }

  function mergeProps(to, from) {
    for (const key in from) {
      to[camelize(key)] = from[key];
    }
  }
  /*  */
  // hooks to be invoked on component VNodes during patch


  const componentVNodeHooks = {
    init(vnode, hydrating, parentElm, refElm) {
      if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
        const child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance, parentElm, refElm);
        child.$mount(hydrating ? vnode.elm : undefined, hydrating);
      } else if (vnode.data.keepAlive) {
        // kept-alive components, treat as a patch
        const mountedNode = vnode; // work around flow

        componentVNodeHooks.prepatch(mountedNode, mountedNode);
      }
    },

    prepatch(oldVnode, vnode) {
      const options = vnode.componentOptions;
      const child = vnode.componentInstance = oldVnode.componentInstance;
      updateChildComponent(child, options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
      );
    },

    insert(vnode) {
      const {
        context,
        componentInstance
      } = vnode;

      if (!componentInstance._isMounted) {
        componentInstance._isMounted = true;
        callHook(componentInstance, 'mounted');
      }

      if (vnode.data.keepAlive) {
        if (context._isMounted) {
          // vue-router#1212
          // During updates, a kept-alive component's child components may
          // change, so directly walking the tree here may call activated hooks
          // on incorrect children. Instead we push them into a queue which will
          // be processed after the whole patch process ended.
          queueActivatedComponent(componentInstance);
        } else {
          activateChildComponent(componentInstance, true
          /* direct */
          );
        }
      }
    },

    destroy(vnode) {
      const {
        componentInstance
      } = vnode;

      if (!componentInstance._isDestroyed) {
        if (!vnode.data.keepAlive) {
          componentInstance.$destroy();
        } else {
          deactivateChildComponent(componentInstance, true
          /* direct */
          );
        }
      }
    }

  };
  const hooksToMerge = Object.keys(componentVNodeHooks);

  function createComponent(Ctor, data, context, children, tag) {
    if (isUndef(Ctor)) {
      return;
    }

    const baseCtor = context.$options._base; // plain options object: turn it into a constructor

    if (isObject(Ctor)) {
      Ctor = baseCtor.extend(Ctor);
    } // if at this stage it's not a constructor or an async component factory,
    // reject.


    if (typeof Ctor !== 'function') {
      {
        warn(`Invalid Component definition: ${String(Ctor)}`, context);
      }
      return;
    } // async component


    let asyncFactory;

    if (isUndef(Ctor.cid)) {
      asyncFactory = Ctor;
      Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);

      if (Ctor === undefined) {
        // return a placeholder node for async component, which is rendered
        // as a comment node but preserves all the raw information for the node.
        // the information will be used for async server-rendering and hydration.
        return createAsyncPlaceholder(asyncFactory, data, context, children, tag);
      }
    }

    data = data || {}; // resolve constructor options in case global mixins are applied after
    // component constructor creation

    resolveConstructorOptions(Ctor); // transform component v-model data into props & events

    if (isDef(data.model)) {
      transformModel(Ctor.options, data);
    } // extract props


    const propsData = extractPropsFromVNodeData(data, Ctor, tag); // functional component

    if (isTrue(Ctor.options.functional)) {
      return createFunctionalComponent(Ctor, propsData, data, context, children);
    } // extract listeners, since these needs to be treated as
    // child component listeners instead of DOM listeners


    const listeners = data.on; // replace with listeners with .native modifier
    // so it gets processed during parent component patch.

    data.on = data.nativeOn;

    if (isTrue(Ctor.options.abstract)) {
      // abstract components do not keep anything
      // other than props & listeners & slot
      // work around flow
      const slot = data.slot;
      data = {};

      if (slot) {
        data.slot = slot;
      }
    } // merge component management hooks onto the placeholder node


    mergeHooks(data); // return a placeholder vnode

    const name = Ctor.options.name || tag;
    const vnode = new VNode(`vue-component-${Ctor.cid}${name ? `-${name}` : ''}`, data, undefined, undefined, undefined, context, {
      Ctor,
      propsData,
      listeners,
      tag,
      children
    }, asyncFactory);
    return vnode;
  }

  function createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm, refElm) {
    const vnodeComponentOptions = vnode.componentOptions;
    const options = {
      _isComponent: true,
      parent,
      propsData: vnodeComponentOptions.propsData,
      _componentTag: vnodeComponentOptions.tag,
      _parentVnode: vnode,
      _parentListeners: vnodeComponentOptions.listeners,
      _renderChildren: vnodeComponentOptions.children,
      _parentElm: parentElm || null,
      _refElm: refElm || null
    }; // check inline-template render functions

    const inlineTemplate = vnode.data.inlineTemplate;

    if (isDef(inlineTemplate)) {
      options.render = inlineTemplate.render;
      options.staticRenderFns = inlineTemplate.staticRenderFns;
    }

    return new vnodeComponentOptions.Ctor(options);
  }

  function mergeHooks(data) {
    if (!data.hook) {
      data.hook = {};
    }

    for (let i = 0; i < hooksToMerge.length; i++) {
      const key = hooksToMerge[i];
      const fromParent = data.hook[key];
      const ours = componentVNodeHooks[key];
      data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
    }
  }

  function mergeHook$1(one, two) {
    return function (a, b, c, d) {
      one(a, b, c, d);
      two(a, b, c, d);
    };
  } // transform component v-model info (value and callback) into
  // prop and event handler respectively.


  function transformModel(options, data) {
    const prop = options.model && options.model.prop || 'value';
    const event = options.model && options.model.event || 'input';
    (data.props || (data.props = {}))[prop] = data.model.value;
    const on = data.on || (data.on = {});

    if (isDef(on[event])) {
      on[event] = [data.model.callback].concat(on[event]);
    } else {
      on[event] = data.model.callback;
    }
  }
  /*  */


  const SIMPLE_NORMALIZE = 1;
  const ALWAYS_NORMALIZE = 2; // wrapper function for providing a more flexible interface
  // without getting yelled at by flow

  function createElement(context, tag, data, children, normalizationType, alwaysNormalize) {
    if (Array.isArray(data) || isPrimitive(data)) {
      normalizationType = children;
      children = data;
      data = undefined;
    }

    if (isTrue(alwaysNormalize)) {
      normalizationType = ALWAYS_NORMALIZE;
    }

    return _createElement(context, tag, data, children, normalizationType);
  }

  function _createElement(context, tag, data, children, normalizationType) {
    if (isDef(data) && isDef(data.__ob__)) {
      warn(`Avoid using observed data object as vnode data: ${JSON.stringify(data)}\n` + 'Always create fresh vnode data objects in each render!', context);
      return createEmptyVNode();
    } // object syntax in v-bind


    if (isDef(data) && isDef(data.is)) {
      tag = data.is;
    }

    if (!tag) {
      // in case of component :is set to falsy value
      return createEmptyVNode();
    } // warn against non-primitive key


    if (isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {
      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);
    } // support single function children as default scoped slot


    if (Array.isArray(children) && typeof children[0] === 'function') {
      data = data || {};
      data.scopedSlots = {
        default: children[0]
      };
      children.length = 0;
    }

    if (normalizationType === ALWAYS_NORMALIZE) {
      children = normalizeChildren(children);
    } else if (normalizationType === SIMPLE_NORMALIZE) {
      children = simpleNormalizeChildren(children);
    }

    let vnode, ns;

    if (typeof tag === 'string') {
      let Ctor;
      ns = context.$vnode && context.$vnode.ns || config.getTagNamespace(tag);

      if (config.isReservedTag(tag)) {
        // platform built-in elements
        vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
      } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
        // component
        vnode = createComponent(Ctor, data, context, children, tag);
      } else {
        // unknown or unlisted namespaced elements
        // check at runtime because it may get assigned a namespace when its
        // parent normalizes children
        vnode = new VNode(tag, data, children, undefined, undefined, context);
      }
    } else {
      // direct component options / constructor
      vnode = createComponent(tag, data, context, children);
    }

    if (isDef(vnode)) {
      if (ns) applyNS(vnode, ns);
      return vnode;
    } else {
      return createEmptyVNode();
    }
  }

  function applyNS(vnode, ns, force) {
    vnode.ns = ns;

    if (vnode.tag === 'foreignObject') {
      // use default namespace inside foreignObject
      ns = undefined;
      force = true;
    }

    if (isDef(vnode.children)) {
      for (let i = 0, l = vnode.children.length; i < l; i++) {
        const child = vnode.children[i];

        if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force))) {
          applyNS(child, ns, force);
        }
      }
    }
  }
  /*  */


  function initRender(vm) {
    vm._vnode = null; // the root of the child tree

    vm._staticTrees = null; // v-once cached trees

    const options = vm.$options;
    const parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree

    const renderContext = parentVnode && parentVnode.context;
    vm.$slots = resolveSlots(options._renderChildren, renderContext);
    vm.$scopedSlots = emptyObject; // bind the createElement fn to this instance
    // so that we get proper render context inside it.
    // args order: tag, data, children, normalizationType, alwaysNormalize
    // internal version is used by render functions compiled from templates

    vm._c = (a, b, c, d) => createElement(vm, a, b, c, d, false); // normalization is always applied for the public version, used in
    // user-written render functions.


    vm.$createElement = (a, b, c, d) => createElement(vm, a, b, c, d, true); // $attrs & $listeners are exposed for easier HOC creation.
    // they need to be reactive so that HOCs using them are always updated


    const parentData = parentVnode && parentVnode.data;
    /* istanbul ignore else */

    {
      defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, () => {
        !isUpdatingChildComponent && warn(`$attrs is readonly.`, vm);
      }, true);
      defineReactive(vm, '$listeners', options._parentListeners || emptyObject, () => {
        !isUpdatingChildComponent && warn(`$listeners is readonly.`, vm);
      }, true);
    }
  }

  function renderMixin(Vue) {
    // install runtime convenience helpers
    installRenderHelpers(Vue.prototype);

    Vue.prototype.$nextTick = function (fn) {
      return nextTick(fn, this);
    };

    Vue.prototype._render = function () {
      const vm = this;
      const {
        render,
        _parentVnode
      } = vm.$options;

      if (vm._isMounted) {
        // if the parent didn't update, the slot nodes will be the ones from
        // last render. They need to be cloned to ensure "freshness" for this render.
        for (const key in vm.$slots) {
          const slot = vm.$slots[key]; // _rendered is a flag added by renderSlot, but may not be present
          // if the slot is passed from manually written render functions

          if (slot._rendered || slot[0] && slot[0].elm) {
            vm.$slots[key] = cloneVNodes(slot, true
            /* deep */
            );
          }
        }
      }

      vm.$scopedSlots = _parentVnode && _parentVnode.data.scopedSlots || emptyObject; // set parent vnode. this allows render functions to have access
      // to the data on the placeholder node.

      vm.$vnode = _parentVnode; // render self

      let vnode;

      try {
        vnode = render.call(vm._renderProxy, vm.$createElement);
      } catch (e) {
        handleError(e, vm, `render`); // return error render result,
        // or previous vnode to prevent render error causing blank component

        /* istanbul ignore else */

        {
          if (vm.$options.renderError) {
            try {
              vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
            } catch (e) {
              handleError(e, vm, `renderError`);
              vnode = vm._vnode;
            }
          } else {
            vnode = vm._vnode;
          }
        }
      } // return empty vnode in case the render function errored out


      if (!(vnode instanceof VNode)) {
        if (Array.isArray(vnode)) {
          warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);
        }

        vnode = createEmptyVNode();
      } // set parent


      vnode.parent = _parentVnode;
      return vnode;
    };
  }
  /*  */


  let uid$1 = 0;

  function initMixin(Vue) {
    Vue.prototype._init = function (options) {
      const vm = this; // a uid

      vm._uid = uid$1++;
      let startTag, endTag;
      /* istanbul ignore if */

      if (config.performance && mark) {
        startTag = `vue-perf-start:${vm._uid}`;
        endTag = `vue-perf-end:${vm._uid}`;
        mark(startTag);
      } // a flag to avoid this being observed


      vm._isVue = true; // merge options

      if (options && options._isComponent) {
        // optimize internal component instantiation
        // since dynamic options merging is pretty slow, and none of the
        // internal component options needs special treatment.
        initInternalComponent(vm, options);
      } else {
        vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
      }
      /* istanbul ignore else */


      {
        initProxy(vm);
      } // expose real self

      vm._self = vm;
      initLifecycle(vm);
      initEvents(vm);
      initRender(vm);
      callHook(vm, 'beforeCreate');
      initInjections(vm); // resolve injections before data/props

      initState(vm);
      initProvide(vm); // resolve provide after data/props

      callHook(vm, 'created');
      /* istanbul ignore if */

      if (config.performance && mark) {
        vm._name = formatComponentName(vm, false);
        mark(endTag);
        measure(`vue ${vm._name} init`, startTag, endTag);
      }

      if (vm.$options.el) {
        vm.$mount(vm.$options.el);
      }
    };
  }

  function initInternalComponent(vm, options) {
    const opts = vm.$options = Object.create(vm.constructor.options); // doing this because it's faster than dynamic enumeration.

    opts.parent = options.parent;
    opts.propsData = options.propsData;
    opts._parentVnode = options._parentVnode;
    opts._parentListeners = options._parentListeners;
    opts._renderChildren = options._renderChildren;
    opts._componentTag = options._componentTag;
    opts._parentElm = options._parentElm;
    opts._refElm = options._refElm;

    if (options.render) {
      opts.render = options.render;
      opts.staticRenderFns = options.staticRenderFns;
    }
  }

  function resolveConstructorOptions(Ctor) {
    let options = Ctor.options;

    if (Ctor.super) {
      const superOptions = resolveConstructorOptions(Ctor.super);
      const cachedSuperOptions = Ctor.superOptions;

      if (superOptions !== cachedSuperOptions) {
        // super option changed,
        // need to resolve new options.
        Ctor.superOptions = superOptions; // check if there are any late-modified/attached options (#4976)

        const modifiedOptions = resolveModifiedOptions(Ctor); // update base extend options

        if (modifiedOptions) {
          extend(Ctor.extendOptions, modifiedOptions);
        }

        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);

        if (options.name) {
          options.components[options.name] = Ctor;
        }
      }
    }

    return options;
  }

  function resolveModifiedOptions(Ctor) {
    let modified;
    const latest = Ctor.options;
    const extended = Ctor.extendOptions;
    const sealed = Ctor.sealedOptions;

    for (const key in latest) {
      if (latest[key] !== sealed[key]) {
        if (!modified) modified = {};
        modified[key] = dedupe(latest[key], extended[key], sealed[key]);
      }
    }

    return modified;
  }

  function dedupe(latest, extended, sealed) {
    // compare latest and sealed to ensure lifecycle hooks won't be duplicated
    // between merges
    if (Array.isArray(latest)) {
      const res = [];
      sealed = Array.isArray(sealed) ? sealed : [sealed];
      extended = Array.isArray(extended) ? extended : [extended];

      for (let i = 0; i < latest.length; i++) {
        // push original options and not sealed options to exclude duplicated options
        if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
          res.push(latest[i]);
        }
      }

      return res;
    } else {
      return latest;
    }
  }

  function Vue$3(options) {
    if (!(this instanceof Vue$3)) {
      warn('Vue is a constructor and should be called with the `new` keyword');
    }

    this._init(options);
  }

  initMixin(Vue$3);
  stateMixin(Vue$3);
  eventsMixin(Vue$3);
  lifecycleMixin(Vue$3);
  renderMixin(Vue$3);
  /*  */

  function initUse(Vue) {
    Vue.use = function (plugin) {
      const installedPlugins = this._installedPlugins || (this._installedPlugins = []);

      if (installedPlugins.indexOf(plugin) > -1) {
        return this;
      } // additional parameters


      const args = toArray(arguments, 1);
      args.unshift(this);

      if (typeof plugin.install === 'function') {
        plugin.install.apply(plugin, args);
      } else if (typeof plugin === 'function') {
        plugin.apply(null, args);
      }

      installedPlugins.push(plugin);
      return this;
    };
  }
  /*  */


  function initMixin$1(Vue) {
    Vue.mixin = function (mixin) {
      this.options = mergeOptions(this.options, mixin);
      return this;
    };
  }
  /*  */


  function initExtend(Vue) {
    /**
     * Each instance constructor, including Vue, has a unique
     * cid. This enables us to create wrapped "child
     * constructors" for prototypal inheritance and cache them.
     */
    Vue.cid = 0;
    let cid = 1;
    /**
     * Class inheritance
     */

    Vue.extend = function (extendOptions) {
      extendOptions = extendOptions || {};
      const Super = this;
      const SuperId = Super.cid;
      const cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});

      if (cachedCtors[SuperId]) {
        return cachedCtors[SuperId];
      }

      const name = extendOptions.name || Super.options.name;
      {
        if (!/^[a-zA-Z][\w-]*$/.test(name)) {
          warn('Invalid component name: "' + name + '". Component names ' + 'can only contain alphanumeric characters and the hyphen, ' + 'and must start with a letter.');
        }
      }

      const Sub = function VueComponent(options) {
        this._init(options);
      };

      Sub.prototype = Object.create(Super.prototype);
      Sub.prototype.constructor = Sub;
      Sub.cid = cid++;
      Sub.options = mergeOptions(Super.options, extendOptions);
      Sub['super'] = Super; // For props and computed properties, we define the proxy getters on
      // the Vue instances at extension time, on the extended prototype. This
      // avoids Object.defineProperty calls for each instance created.

      if (Sub.options.props) {
        initProps$1(Sub);
      }

      if (Sub.options.computed) {
        initComputed$1(Sub);
      } // allow further extension/mixin/plugin usage


      Sub.extend = Super.extend;
      Sub.mixin = Super.mixin;
      Sub.use = Super.use; // create asset registers, so extended classes
      // can have their private assets too.

      ASSET_TYPES.forEach(function (type) {
        Sub[type] = Super[type];
      }); // enable recursive self-lookup

      if (name) {
        Sub.options.components[name] = Sub;
      } // keep a reference to the super options at extension time.
      // later at instantiation we can check if Super's options have
      // been updated.


      Sub.superOptions = Super.options;
      Sub.extendOptions = extendOptions;
      Sub.sealedOptions = extend({}, Sub.options); // cache constructor

      cachedCtors[SuperId] = Sub;
      return Sub;
    };
  }

  function initProps$1(Comp) {
    const props = Comp.options.props;

    for (const key in props) {
      proxy(Comp.prototype, `_props`, key);
    }
  }

  function initComputed$1(Comp) {
    const computed = Comp.options.computed;

    for (const key in computed) {
      defineComputed(Comp.prototype, key, computed[key]);
    }
  }
  /*  */


  function initAssetRegisters(Vue) {
    /**
     * Create asset registration methods.
     */
    ASSET_TYPES.forEach(type => {
      Vue[type] = function (id, definition) {
        if (!definition) {
          return this.options[type + 's'][id];
        } else {
          /* istanbul ignore if */
          {
            if (type === 'component' && config.isReservedTag(id)) {
              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);
            }
          }

          if (type === 'component' && isPlainObject(definition)) {
            definition.name = definition.name || id;
            definition = this.options._base.extend(definition);
          }

          if (type === 'directive' && typeof definition === 'function') {
            definition = {
              bind: definition,
              update: definition
            };
          }

          this.options[type + 's'][id] = definition;
          return definition;
        }
      };
    });
  }
  /*  */


  function getComponentName(opts) {
    return opts && (opts.Ctor.options.name || opts.tag);
  }

  function matches(pattern, name) {
    if (Array.isArray(pattern)) {
      return pattern.indexOf(name) > -1;
    } else if (typeof pattern === 'string') {
      return pattern.split(',').indexOf(name) > -1;
    } else if (isRegExp(pattern)) {
      return pattern.test(name);
    }
    /* istanbul ignore next */


    return false;
  }

  function pruneCache(keepAliveInstance, filter) {
    const {
      cache,
      keys,
      _vnode
    } = keepAliveInstance;

    for (const key in cache) {
      const cachedNode = cache[key];

      if (cachedNode) {
        const name = getComponentName(cachedNode.componentOptions);

        if (name && !filter(name)) {
          pruneCacheEntry(cache, key, keys, _vnode);
        }
      }
    }
  }

  function pruneCacheEntry(cache, key, keys, current) {
    const cached$$1 = cache[key];

    if (cached$$1 && cached$$1 !== current) {
      cached$$1.componentInstance.$destroy();
    }

    cache[key] = null;
    remove(keys, key);
  }

  const patternTypes = [String, RegExp, Array];
  var KeepAlive = {
    name: 'keep-alive',
    abstract: true,
    props: {
      include: patternTypes,
      exclude: patternTypes,
      max: [String, Number]
    },

    created() {
      this.cache = Object.create(null);
      this.keys = [];
    },

    destroyed() {
      for (const key in this.cache) {
        pruneCacheEntry(this.cache, key, this.keys);
      }
    },

    watch: {
      include(val) {
        pruneCache(this, name => matches(val, name));
      },

      exclude(val) {
        pruneCache(this, name => !matches(val, name));
      }

    },

    render() {
      const slot = this.$slots.default;
      const vnode = getFirstComponentChild(slot);
      const componentOptions = vnode && vnode.componentOptions;

      if (componentOptions) {
        // check pattern
        const name = getComponentName(componentOptions);
        const {
          include,
          exclude
        } = this;

        if ( // not included
        include && (!name || !matches(include, name)) || // excluded
        exclude && name && matches(exclude, name)) {
          return vnode;
        }

        const {
          cache,
          keys
        } = this;
        const key = vnode.key == null // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? `::${componentOptions.tag}` : '') : vnode.key;

        if (cache[key]) {
          vnode.componentInstance = cache[key].componentInstance; // make current key freshest

          remove(keys, key);
          keys.push(key);
        } else {
          cache[key] = vnode;
          keys.push(key); // prune oldest entry

          if (this.max && keys.length > parseInt(this.max)) {
            pruneCacheEntry(cache, keys[0], keys, this._vnode);
          }
        }

        vnode.data.keepAlive = true;
      }

      return vnode || slot && slot[0];
    }

  };
  var builtInComponents = {
    KeepAlive
  };
  /*  */

  function initGlobalAPI(Vue) {
    // config
    const configDef = {};

    configDef.get = () => config;

    {
      configDef.set = () => {
        warn('Do not replace the Vue.config object, set individual fields instead.');
      };
    }
    Object.defineProperty(Vue, 'config', configDef); // exposed util methods.
    // NOTE: these are not considered part of the public API - avoid relying on
    // them unless you are aware of the risk.

    Vue.util = {
      warn,
      extend,
      mergeOptions,
      defineReactive
    };
    Vue.set = set$1;
    Vue.delete = del;
    Vue.nextTick = nextTick;
    Vue.options = Object.create(null);
    ASSET_TYPES.forEach(type => {
      Vue.options[type + 's'] = Object.create(null);
    }); // this is used to identify the "base" constructor to extend all plain-object
    // components with in Weex's multi-instance scenarios.

    Vue.options._base = Vue;
    extend(Vue.options.components, builtInComponents);
    initUse(Vue);
    initMixin$1(Vue);
    initExtend(Vue);
    initAssetRegisters(Vue);
  }

  initGlobalAPI(Vue$3);
  Object.defineProperty(Vue$3.prototype, '$isServer', {
    get: isServerRendering
  });
  Object.defineProperty(Vue$3.prototype, '$ssrContext', {
    get() {
      /* istanbul ignore next */
      return this.$vnode && this.$vnode.ssrContext;
    }

  });
  Vue$3.version = '2.5.8';
  /*  */
  // these are reserved for web because they are directly compiled away
  // during template compilation

  const isReservedAttr = makeMap('style,class'); // attributes that should be using props for binding

  const acceptValue = makeMap('input,textarea,option,select,progress');

  const mustUseProp = (tag, type, attr) => {
    return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
  };

  const isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');
  const isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');
  const xlinkNS = 'http://www.w3.org/1999/xlink';

  const isXlink = name => {
    return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
  };

  const getXlinkProp = name => {
    return isXlink(name) ? name.slice(6, name.length) : '';
  };

  const isFalsyAttrValue = val => {
    return val == null || val === false;
  };
  /*  */


  function genClassForVnode(vnode) {
    let data = vnode.data;
    let parentNode = vnode;
    let childNode = vnode;

    while (isDef(childNode.componentInstance)) {
      childNode = childNode.componentInstance._vnode;

      if (childNode.data) {
        data = mergeClassData(childNode.data, data);
      }
    }

    while (isDef(parentNode = parentNode.parent)) {
      if (parentNode.data) {
        data = mergeClassData(data, parentNode.data);
      }
    }

    return renderClass(data.staticClass, data.class);
  }

  function mergeClassData(child, parent) {
    return {
      staticClass: concat(child.staticClass, parent.staticClass),
      class: isDef(child.class) ? [child.class, parent.class] : parent.class
    };
  }

  function renderClass(staticClass, dynamicClass) {
    if (isDef(staticClass) || isDef(dynamicClass)) {
      return concat(staticClass, stringifyClass(dynamicClass));
    }
    /* istanbul ignore next */


    return '';
  }

  function concat(a, b) {
    return a ? b ? a + ' ' + b : a : b || '';
  }

  function stringifyClass(value) {
    if (Array.isArray(value)) {
      return stringifyArray(value);
    }

    if (isObject(value)) {
      return stringifyObject(value);
    }

    if (typeof value === 'string') {
      return value;
    }
    /* istanbul ignore next */


    return '';
  }

  function stringifyArray(value) {
    let res = '';
    let stringified;

    for (let i = 0, l = value.length; i < l; i++) {
      if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
        if (res) res += ' ';
        res += stringified;
      }
    }

    return res;
  }

  function stringifyObject(value) {
    let res = '';

    for (const key in value) {
      if (value[key]) {
        if (res) res += ' ';
        res += key;
      }
    }

    return res;
  }
  /*  */


  const namespaceMap = {
    svg: 'http://www.w3.org/2000/svg',
    math: 'http://www.w3.org/1998/Math/MathML'
  };
  const isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot'); // this map is intentionally selective, only covering SVG elements that may
  // contain child elements.

  const isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);

  const isPreTag = tag => tag === 'pre';

  const isReservedTag = tag => {
    return isHTMLTag(tag) || isSVG(tag);
  };

  function getTagNamespace(tag) {
    if (isSVG(tag)) {
      return 'svg';
    } // basic support for MathML
    // note it doesn't support other MathML elements being component roots


    if (tag === 'math') {
      return 'math';
    }
  }

  const unknownElementCache = Object.create(null);

  function isUnknownElement(tag) {
    /* istanbul ignore if */
    if (!inBrowser) {
      return true;
    }

    if (isReservedTag(tag)) {
      return false;
    }

    tag = tag.toLowerCase();
    /* istanbul ignore if */

    if (unknownElementCache[tag] != null) {
      return unknownElementCache[tag];
    }

    const el = document.createElement(tag);

    if (tag.indexOf('-') > -1) {
      // http://stackoverflow.com/a/28210364/1070244
      return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
    } else {
      return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());
    }
  }

  const isTextInputType = makeMap('text,number,password,search,email,tel,url');
  /*  */

  /**
   * Query an element selector if it's not an element already.
   */

  function query(el) {
    if (typeof el === 'string') {
      const selected = document.querySelector(el);

      if (!selected) {
        warn('Cannot find element: ' + el);
        return document.createElement('div');
      }

      return selected;
    } else {
      return el;
    }
  }
  /*  */


  function createElement$1(tagName, vnode) {
    const elm = document.createElement(tagName);

    if (tagName !== 'select') {
      return elm;
    } // false or null will remove the attribute but undefined will not


    if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
      elm.setAttribute('multiple', 'multiple');
    }

    return elm;
  }

  function createElementNS(namespace, tagName) {
    return document.createElementNS(namespaceMap[namespace], tagName);
  }

  function createTextNode(text) {
    return document.createTextNode(text);
  }

  function createComment(text) {
    return document.createComment(text);
  }

  function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
  }

  function removeChild(node, child) {
    node.removeChild(child);
  }

  function appendChild(node, child) {
    node.appendChild(child);
  }

  function parentNode(node) {
    return node.parentNode;
  }

  function nextSibling(node) {
    return node.nextSibling;
  }

  function tagName(node) {
    return node.tagName;
  }

  function setTextContent(node, text) {
    node.textContent = text;
  }

  function setAttribute(node, key, val) {
    node.setAttribute(key, val);
  }

  var nodeOps = Object.freeze({
    createElement: createElement$1,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    setAttribute: setAttribute
  });
  /*  */

  var ref = {
    create(_, vnode) {
      registerRef(vnode);
    },

    update(oldVnode, vnode) {
      if (oldVnode.data.ref !== vnode.data.ref) {
        registerRef(oldVnode, true);
        registerRef(vnode);
      }
    },

    destroy(vnode) {
      registerRef(vnode, true);
    }

  };

  function registerRef(vnode, isRemoval) {
    const key = vnode.data.ref;
    if (!key) return;
    const vm = vnode.context;
    const ref = vnode.componentInstance || vnode.elm;
    const refs = vm.$refs;

    if (isRemoval) {
      if (Array.isArray(refs[key])) {
        remove(refs[key], ref);
      } else if (refs[key] === ref) {
        refs[key] = undefined;
      }
    } else {
      if (vnode.data.refInFor) {
        if (!Array.isArray(refs[key])) {
          refs[key] = [ref];
        } else if (refs[key].indexOf(ref) < 0) {
          // $flow-disable-line
          refs[key].push(ref);
        }
      } else {
        refs[key] = ref;
      }
    }
  }
  /**
   * Virtual DOM patching algorithm based on Snabbdom by
   * Simon Friis Vindum (@paldepind)
   * Licensed under the MIT License
   * https://github.com/paldepind/snabbdom/blob/master/LICENSE
   *
   * modified by Evan You (@yyx990803)
   *
   * Not type-checking this because this file is perf-critical and the cost
   * of making flow understand it is not worth it.
   */


  const emptyNode = new VNode('', {}, []);
  const hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

  function sameVnode(a, b) {
    return a.key === b.key && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && a.asyncFactory === b.asyncFactory && isUndef(b.asyncFactory.error));
  }

  function sameInputType(a, b) {
    if (a.tag !== 'input') return true;
    let i;
    const typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
    const typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
    return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB);
  }

  function createKeyToOldIdx(children, beginIdx, endIdx) {
    let i, key;
    const map = {};

    for (i = beginIdx; i <= endIdx; ++i) {
      key = children[i].key;
      if (isDef(key)) map[key] = i;
    }

    return map;
  }

  function createPatchFunction(backend) {
    let i, j;
    const cbs = {};
    const {
      modules,
      nodeOps
    } = backend;

    for (i = 0; i < hooks.length; ++i) {
      cbs[hooks[i]] = [];

      for (j = 0; j < modules.length; ++j) {
        if (isDef(modules[j][hooks[i]])) {
          cbs[hooks[i]].push(modules[j][hooks[i]]);
        }
      }
    }

    function emptyNodeAt(elm) {
      return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
    }

    function createRmCb(childElm, listeners) {
      function remove() {
        if (--remove.listeners === 0) {
          removeNode(childElm);
        }
      }

      remove.listeners = listeners;
      return remove;
    }

    function removeNode(el) {
      const parent = nodeOps.parentNode(el); // element may have already been removed due to v-html / v-text

      if (isDef(parent)) {
        nodeOps.removeChild(parent, el);
      }
    }

    function isUnknownElement$$1(vnode, inVPre) {
      return !inVPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.some(ignore => {
        return isRegExp(ignore) ? ignore.test(vnode.tag) : ignore === vnode.tag;
      })) && config.isUnknownElement(vnode.tag);
    }

    let creatingElmInVPre = 0;

    function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested) {
      vnode.isRootInsert = !nested; // for transition enter check

      if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
        return;
      }

      const data = vnode.data;
      const children = vnode.children;
      const tag = vnode.tag;

      if (isDef(tag)) {
        {
          if (data && data.pre) {
            creatingElmInVPre++;
          }

          if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.', vnode.context);
          }
        }
        vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);
        setScope(vnode);
        /* istanbul ignore if */

        {
          createChildren(vnode, children, insertedVnodeQueue);

          if (isDef(data)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
          }

          insert(parentElm, vnode.elm, refElm);
        }

        if (data && data.pre) {
          creatingElmInVPre--;
        }
      } else if (isTrue(vnode.isComment)) {
        vnode.elm = nodeOps.createComment(vnode.text);
        insert(parentElm, vnode.elm, refElm);
      } else {
        vnode.elm = nodeOps.createTextNode(vnode.text);
        insert(parentElm, vnode.elm, refElm);
      }
    }

    function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
      let i = vnode.data;

      if (isDef(i)) {
        const isReactivated = isDef(vnode.componentInstance) && i.keepAlive;

        if (isDef(i = i.hook) && isDef(i = i.init)) {
          i(vnode, false
          /* hydrating */
          , parentElm, refElm);
        } // after calling the init hook, if the vnode is a child component
        // it should've created a child instance and mounted it. the child
        // component also has set the placeholder vnode's elm.
        // in that case we can just return the element and be done.


        if (isDef(vnode.componentInstance)) {
          initComponent(vnode, insertedVnodeQueue);

          if (isTrue(isReactivated)) {
            reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
          }

          return true;
        }
      }
    }

    function initComponent(vnode, insertedVnodeQueue) {
      if (isDef(vnode.data.pendingInsert)) {
        insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
        vnode.data.pendingInsert = null;
      }

      vnode.elm = vnode.componentInstance.$el;

      if (isPatchable(vnode)) {
        invokeCreateHooks(vnode, insertedVnodeQueue);
        setScope(vnode);
      } else {
        // empty component root.
        // skip all element-related modules except for ref (#3455)
        registerRef(vnode); // make sure to invoke the insert hook

        insertedVnodeQueue.push(vnode);
      }
    }

    function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
      let i; // hack for #4339: a reactivated component with inner transition
      // does not trigger because the inner node's created hooks are not called
      // again. It's not ideal to involve module-specific logic in here but
      // there doesn't seem to be a better way to do it.

      let innerNode = vnode;

      while (innerNode.componentInstance) {
        innerNode = innerNode.componentInstance._vnode;

        if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
          for (i = 0; i < cbs.activate.length; ++i) {
            cbs.activate[i](emptyNode, innerNode);
          }

          insertedVnodeQueue.push(innerNode);
          break;
        }
      } // unlike a newly created component,
      // a reactivated keep-alive component doesn't insert itself


      insert(parentElm, vnode.elm, refElm);
    }

    function insert(parent, elm, ref$$1) {
      if (isDef(parent)) {
        if (isDef(ref$$1)) {
          if (ref$$1.parentNode === parent) {
            nodeOps.insertBefore(parent, elm, ref$$1);
          }
        } else {
          nodeOps.appendChild(parent, elm);
        }
      }
    }

    function createChildren(vnode, children, insertedVnodeQueue) {
      if (Array.isArray(children)) {
        for (let i = 0; i < children.length; ++i) {
          createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
        }
      } else if (isPrimitive(vnode.text)) {
        nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
      }
    }

    function isPatchable(vnode) {
      while (vnode.componentInstance) {
        vnode = vnode.componentInstance._vnode;
      }

      return isDef(vnode.tag);
    }

    function invokeCreateHooks(vnode, insertedVnodeQueue) {
      for (let i = 0; i < cbs.create.length; ++i) {
        cbs.create[i](emptyNode, vnode);
      }

      i = vnode.data.hook; // Reuse variable

      if (isDef(i)) {
        if (isDef(i.create)) i.create(emptyNode, vnode);
        if (isDef(i.insert)) insertedVnodeQueue.push(vnode);
      }
    } // set scope id attribute for scoped CSS.
    // this is implemented as a special case to avoid the overhead
    // of going through the normal attribute patching process.


    function setScope(vnode) {
      let i;

      if (isDef(i = vnode.functionalScopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      } else {
        let ancestor = vnode;

        while (ancestor) {
          if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
            nodeOps.setAttribute(vnode.elm, i, '');
          }

          ancestor = ancestor.parent;
        }
      } // for slot content they should also get the scopeId from the host instance.


      if (isDef(i = activeInstance) && i !== vnode.context && i !== vnode.functionalContext && isDef(i = i.$options._scopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      }
    }

    function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
      for (; startIdx <= endIdx; ++startIdx) {
        createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
      }
    }

    function invokeDestroyHook(vnode) {
      let i, j;
      const data = vnode.data;

      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode);

        for (i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode);
      }

      if (isDef(i = vnode.children)) {
        for (j = 0; j < vnode.children.length; ++j) {
          invokeDestroyHook(vnode.children[j]);
        }
      }
    }

    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
      for (; startIdx <= endIdx; ++startIdx) {
        const ch = vnodes[startIdx];

        if (isDef(ch)) {
          if (isDef(ch.tag)) {
            removeAndInvokeRemoveHook(ch);
            invokeDestroyHook(ch);
          } else {
            // Text node
            removeNode(ch.elm);
          }
        }
      }
    }

    function removeAndInvokeRemoveHook(vnode, rm) {
      if (isDef(rm) || isDef(vnode.data)) {
        let i;
        const listeners = cbs.remove.length + 1;

        if (isDef(rm)) {
          // we have a recursively passed down rm callback
          // increase the listeners count
          rm.listeners += listeners;
        } else {
          // directly removing
          rm = createRmCb(vnode.elm, listeners);
        } // recursively invoke hooks on child component root node


        if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
          removeAndInvokeRemoveHook(i, rm);
        }

        for (i = 0; i < cbs.remove.length; ++i) {
          cbs.remove[i](vnode, rm);
        }

        if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
          i(vnode, rm);
        } else {
          rm();
        }
      } else {
        removeNode(vnode.elm);
      }
    }

    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
      let oldStartIdx = 0;
      let newStartIdx = 0;
      let oldEndIdx = oldCh.length - 1;
      let oldStartVnode = oldCh[0];
      let oldEndVnode = oldCh[oldEndIdx];
      let newEndIdx = newCh.length - 1;
      let newStartVnode = newCh[0];
      let newEndVnode = newCh[newEndIdx];
      let oldKeyToIdx, idxInOld, vnodeToMove, refElm; // removeOnly is a special flag used only by <transition-group>
      // to ensure removed elements stay in correct relative positions
      // during leaving transitions

      const canMove = !removeOnly;

      while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
        if (isUndef(oldStartVnode)) {
          oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
        } else if (isUndef(oldEndVnode)) {
          oldEndVnode = oldCh[--oldEndIdx];
        } else if (sameVnode(oldStartVnode, newStartVnode)) {
          patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
          oldStartVnode = oldCh[++oldStartIdx];
          newStartVnode = newCh[++newStartIdx];
        } else if (sameVnode(oldEndVnode, newEndVnode)) {
          patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
          oldEndVnode = oldCh[--oldEndIdx];
          newEndVnode = newCh[--newEndIdx];
        } else if (sameVnode(oldStartVnode, newEndVnode)) {
          // Vnode moved right
          patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
          canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
          oldStartVnode = oldCh[++oldStartIdx];
          newEndVnode = newCh[--newEndIdx];
        } else if (sameVnode(oldEndVnode, newStartVnode)) {
          // Vnode moved left
          patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
          canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
          oldEndVnode = oldCh[--oldEndIdx];
          newStartVnode = newCh[++newStartIdx];
        } else {
          if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
          idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);

          if (isUndef(idxInOld)) {
            // New element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
          } else {
            vnodeToMove = oldCh[idxInOld];
            /* istanbul ignore if */

            if (!vnodeToMove) {
              warn('It seems there are duplicate keys that is causing an update error. ' + 'Make sure each v-for item has a unique key.');
            }

            if (sameVnode(vnodeToMove, newStartVnode)) {
              patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
              oldCh[idxInOld] = undefined;
              canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
            } else {
              // same key but different element. treat as new element
              createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
            }
          }

          newStartVnode = newCh[++newStartIdx];
        }
      }

      if (oldStartIdx > oldEndIdx) {
        refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
        addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
      } else if (newStartIdx > newEndIdx) {
        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
      }
    }

    function findIdxInOld(node, oldCh, start, end) {
      for (let i = start; i < end; i++) {
        const c = oldCh[i];
        if (isDef(c) && sameVnode(node, c)) return i;
      }
    }

    function patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly) {
      if (oldVnode === vnode) {
        return;
      }

      const elm = vnode.elm = oldVnode.elm;

      if (isTrue(oldVnode.isAsyncPlaceholder)) {
        if (isDef(vnode.asyncFactory.resolved)) {
          hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
        } else {
          vnode.isAsyncPlaceholder = true;
        }

        return;
      } // reuse element for static trees.
      // note we only do this if the vnode is cloned -
      // if the new node is not cloned it means the render functions have been
      // reset by the hot-reload-api and we need to do a proper re-render.


      if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
        vnode.componentInstance = oldVnode.componentInstance;
        return;
      }

      let i;
      const data = vnode.data;

      if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
        i(oldVnode, vnode);
      }

      const oldCh = oldVnode.children;
      const ch = vnode.children;

      if (isDef(data) && isPatchable(vnode)) {
        for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);

        if (isDef(i = data.hook) && isDef(i = i.update)) i(oldVnode, vnode);
      }

      if (isUndef(vnode.text)) {
        if (isDef(oldCh) && isDef(ch)) {
          if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
        } else if (isDef(ch)) {
          if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, '');
          addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
        } else if (isDef(oldCh)) {
          removeVnodes(elm, oldCh, 0, oldCh.length - 1);
        } else if (isDef(oldVnode.text)) {
          nodeOps.setTextContent(elm, '');
        }
      } else if (oldVnode.text !== vnode.text) {
        nodeOps.setTextContent(elm, vnode.text);
      }

      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.postpatch)) i(oldVnode, vnode);
      }
    }

    function invokeInsertHook(vnode, queue, initial) {
      // delay insert hooks for component root nodes, invoke them after the
      // element is really inserted
      if (isTrue(initial) && isDef(vnode.parent)) {
        vnode.parent.data.pendingInsert = queue;
      } else {
        for (let i = 0; i < queue.length; ++i) {
          queue[i].data.hook.insert(queue[i]);
        }
      }
    }

    let hydrationBailed = false; // list of modules that can skip create hook during hydration because they
    // are already rendered on the client or has no need for initialization
    // Note: style is excluded because it relies on initial clone for future
    // deep updates (#7063).

    const isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key'); // Note: this is a browser-only function so we can assume elms are DOM nodes.

    function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
      let i;
      const {
        tag,
        data,
        children
      } = vnode;
      inVPre = inVPre || data && data.pre;
      vnode.elm = elm;

      if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
        vnode.isAsyncPlaceholder = true;
        return true;
      } // assert node match


      {
        if (!assertNodeMatch(elm, vnode, inVPre)) {
          return false;
        }
      }

      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode, true
        /* hydrating */
        );

        if (isDef(i = vnode.componentInstance)) {
          // child component. it should have hydrated its own tree.
          initComponent(vnode, insertedVnodeQueue);
          return true;
        }
      }

      if (isDef(tag)) {
        if (isDef(children)) {
          // empty element, allow client to pick up and populate children
          if (!elm.hasChildNodes()) {
            createChildren(vnode, children, insertedVnodeQueue);
          } else {
            // v-html and domProps: innerHTML
            if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
              if (i !== elm.innerHTML) {
                /* istanbul ignore if */
                if (typeof console !== 'undefined' && !hydrationBailed) {
                  hydrationBailed = true;
                  console.warn('Parent: ', elm);
                  console.warn('server innerHTML: ', i);
                  console.warn('client innerHTML: ', elm.innerHTML);
                }

                return false;
              }
            } else {
              // iterate and compare children lists
              let childrenMatch = true;
              let childNode = elm.firstChild;

              for (let i = 0; i < children.length; i++) {
                if (!childNode || !hydrate(childNode, children[i], insertedVnodeQueue, inVPre)) {
                  childrenMatch = false;
                  break;
                }

                childNode = childNode.nextSibling;
              } // if childNode is not null, it means the actual childNodes list is
              // longer than the virtual children list.


              if (!childrenMatch || childNode) {
                /* istanbul ignore if */
                if (typeof console !== 'undefined' && !hydrationBailed) {
                  hydrationBailed = true;
                  console.warn('Parent: ', elm);
                  console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
                }

                return false;
              }
            }
          }
        }

        if (isDef(data)) {
          let fullInvoke = false;

          for (const key in data) {
            if (!isRenderedModule(key)) {
              fullInvoke = true;
              invokeCreateHooks(vnode, insertedVnodeQueue);
              break;
            }
          }

          if (!fullInvoke && data['class']) {
            // ensure collecting deps for deep class bindings for future updates
            traverse(data['class']);
          }
        }
      } else if (elm.data !== vnode.text) {
        elm.data = vnode.text;
      }

      return true;
    }

    function assertNodeMatch(node, vnode, inVPre) {
      if (isDef(vnode.tag)) {
        return vnode.tag.indexOf('vue-component') === 0 || !isUnknownElement$$1(vnode, inVPre) && vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());
      } else {
        return node.nodeType === (vnode.isComment ? 8 : 3);
      }
    }

    return function patch(oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
      if (isUndef(vnode)) {
        if (isDef(oldVnode)) invokeDestroyHook(oldVnode);
        return;
      }

      let isInitialPatch = false;
      const insertedVnodeQueue = [];

      if (isUndef(oldVnode)) {
        // empty mount (likely as component), create new root element
        isInitialPatch = true;
        createElm(vnode, insertedVnodeQueue, parentElm, refElm);
      } else {
        const isRealElement = isDef(oldVnode.nodeType);

        if (!isRealElement && sameVnode(oldVnode, vnode)) {
          // patch existing root node
          patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
        } else {
          if (isRealElement) {
            // mounting to a real element
            // check if this is server-rendered content and if we can perform
            // a successful hydration.
            if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
              oldVnode.removeAttribute(SSR_ATTR);
              hydrating = true;
            }

            if (isTrue(hydrating)) {
              if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                invokeInsertHook(vnode, insertedVnodeQueue, true);
                return oldVnode;
              } else {
                warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');
              }
            } // either not server-rendered, or hydration failed.
            // create an empty node and replace it


            oldVnode = emptyNodeAt(oldVnode);
          } // replacing existing element


          const oldElm = oldVnode.elm;
          const parentElm = nodeOps.parentNode(oldElm); // create new node

          createElm(vnode, insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm, nodeOps.nextSibling(oldElm)); // update parent placeholder node element, recursively

          if (isDef(vnode.parent)) {
            let ancestor = vnode.parent;
            const patchable = isPatchable(vnode);

            while (ancestor) {
              for (let i = 0; i < cbs.destroy.length; ++i) {
                cbs.destroy[i](ancestor);
              }

              ancestor.elm = vnode.elm;

              if (patchable) {
                for (let i = 0; i < cbs.create.length; ++i) {
                  cbs.create[i](emptyNode, ancestor);
                } // #6513
                // invoke insert hooks that may have been merged by create hooks.
                // e.g. for directives that uses the "inserted" hook.


                const insert = ancestor.data.hook.insert;

                if (insert.merged) {
                  // start at index 1 to avoid re-invoking component mounted hook
                  for (let i = 1; i < insert.fns.length; i++) {
                    insert.fns[i]();
                  }
                }
              } else {
                registerRef(ancestor);
              }

              ancestor = ancestor.parent;
            }
          } // destroy old node


          if (isDef(parentElm)) {
            removeVnodes(parentElm, [oldVnode], 0, 0);
          } else if (isDef(oldVnode.tag)) {
            invokeDestroyHook(oldVnode);
          }
        }
      }

      invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
      return vnode.elm;
    };
  }
  /*  */


  var directives = {
    create: updateDirectives,
    update: updateDirectives,
    destroy: function unbindDirectives(vnode) {
      updateDirectives(vnode, emptyNode);
    }
  };

  function updateDirectives(oldVnode, vnode) {
    if (oldVnode.data.directives || vnode.data.directives) {
      _update(oldVnode, vnode);
    }
  }

  function _update(oldVnode, vnode) {
    const isCreate = oldVnode === emptyNode;
    const isDestroy = vnode === emptyNode;
    const oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
    const newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);
    const dirsWithInsert = [];
    const dirsWithPostpatch = [];
    let key, oldDir, dir;

    for (key in newDirs) {
      oldDir = oldDirs[key];
      dir = newDirs[key];

      if (!oldDir) {
        // new directive, bind
        callHook$1(dir, 'bind', vnode, oldVnode);

        if (dir.def && dir.def.inserted) {
          dirsWithInsert.push(dir);
        }
      } else {
        // existing directive, update
        dir.oldValue = oldDir.value;
        callHook$1(dir, 'update', vnode, oldVnode);

        if (dir.def && dir.def.componentUpdated) {
          dirsWithPostpatch.push(dir);
        }
      }
    }

    if (dirsWithInsert.length) {
      const callInsert = () => {
        for (let i = 0; i < dirsWithInsert.length; i++) {
          callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
        }
      };

      if (isCreate) {
        mergeVNodeHook(vnode, 'insert', callInsert);
      } else {
        callInsert();
      }
    }

    if (dirsWithPostpatch.length) {
      mergeVNodeHook(vnode, 'postpatch', () => {
        for (let i = 0; i < dirsWithPostpatch.length; i++) {
          callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
        }
      });
    }

    if (!isCreate) {
      for (key in oldDirs) {
        if (!newDirs[key]) {
          // no longer present, unbind
          callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
        }
      }
    }
  }

  const emptyModifiers = Object.create(null);

  function normalizeDirectives$1(dirs, vm) {
    const res = Object.create(null);

    if (!dirs) {
      return res;
    }

    let i, dir;

    for (i = 0; i < dirs.length; i++) {
      dir = dirs[i];

      if (!dir.modifiers) {
        dir.modifiers = emptyModifiers;
      }

      res[getRawDirName(dir)] = dir;
      dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
    }

    return res;
  }

  function getRawDirName(dir) {
    return dir.rawName || `${dir.name}.${Object.keys(dir.modifiers || {}).join('.')}`;
  }

  function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
    const fn = dir.def && dir.def[hook];

    if (fn) {
      try {
        fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
      } catch (e) {
        handleError(e, vnode.context, `directive ${dir.name} ${hook} hook`);
      }
    }
  }

  var baseModules = [ref, directives];
  /*  */

  function updateAttrs(oldVnode, vnode) {
    const opts = vnode.componentOptions;

    if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
      return;
    }

    if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
      return;
    }

    let key, cur, old;
    const elm = vnode.elm;
    const oldAttrs = oldVnode.data.attrs || {};
    let attrs = vnode.data.attrs || {}; // clone observed objects, as the user probably wants to mutate it

    if (isDef(attrs.__ob__)) {
      attrs = vnode.data.attrs = extend({}, attrs);
    }

    for (key in attrs) {
      cur = attrs[key];
      old = oldAttrs[key];

      if (old !== cur) {
        setAttr(elm, key, cur);
      }
    } // #4391: in IE9, setting type can reset value for input[type=radio]
    // #6666: IE/Edge forces progress value down to 1 before setting a max

    /* istanbul ignore if */


    if ((isIE9 || isEdge) && attrs.value !== oldAttrs.value) {
      setAttr(elm, 'value', attrs.value);
    }

    for (key in oldAttrs) {
      if (isUndef(attrs[key])) {
        if (isXlink(key)) {
          elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
        } else if (!isEnumeratedAttr(key)) {
          elm.removeAttribute(key);
        }
      }
    }
  }

  function setAttr(el, key, value) {
    if (isBooleanAttr(key)) {
      // set attribute for blank value
      // e.g. <option disabled>Select one</option>
      if (isFalsyAttrValue(value)) {
        el.removeAttribute(key);
      } else {
        // technically allowfullscreen is a boolean attribute for <iframe>,
        // but Flash expects a value of "true" when used on <embed> tag
        value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;
        el.setAttribute(key, value);
      }
    } else if (isEnumeratedAttr(key)) {
      el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
    } else if (isXlink(key)) {
      if (isFalsyAttrValue(value)) {
        el.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else {
        el.setAttributeNS(xlinkNS, key, value);
      }
    } else {
      if (isFalsyAttrValue(value)) {
        el.removeAttribute(key);
      } else {
        el.setAttribute(key, value);
      }
    }
  }

  var attrs = {
    create: updateAttrs,
    update: updateAttrs
  };
  /*  */

  function updateClass(oldVnode, vnode) {
    const el = vnode.elm;
    const data = vnode.data;
    const oldData = oldVnode.data;

    if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {
      return;
    }

    let cls = genClassForVnode(vnode); // handle transition classes

    const transitionClass = el._transitionClasses;

    if (isDef(transitionClass)) {
      cls = concat(cls, stringifyClass(transitionClass));
    } // set the class


    if (cls !== el._prevClass) {
      el.setAttribute('class', cls);
      el._prevClass = cls;
    }
  }

  var klass = {
    create: updateClass,
    update: updateClass
  };
  /*  */

  const validDivisionCharRE = /[\w).+\-_$\]]/;

  function parseFilters(exp) {
    let inSingle = false;
    let inDouble = false;
    let inTemplateString = false;
    let inRegex = false;
    let curly = 0;
    let square = 0;
    let paren = 0;
    let lastFilterIndex = 0;
    let c, prev, i, expression, filters;

    for (i = 0; i < exp.length; i++) {
      prev = c;
      c = exp.charCodeAt(i);

      if (inSingle) {
        if (c === 0x27 && prev !== 0x5C) inSingle = false;
      } else if (inDouble) {
        if (c === 0x22 && prev !== 0x5C) inDouble = false;
      } else if (inTemplateString) {
        if (c === 0x60 && prev !== 0x5C) inTemplateString = false;
      } else if (inRegex) {
        if (c === 0x2f && prev !== 0x5C) inRegex = false;
      } else if (c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C && exp.charCodeAt(i - 1) !== 0x7C && !curly && !square && !paren) {
        if (expression === undefined) {
          // first filter, end of expression
          lastFilterIndex = i + 1;
          expression = exp.slice(0, i).trim();
        } else {
          pushFilter();
        }
      } else {
        switch (c) {
          case 0x22:
            inDouble = true;
            break;
          // "

          case 0x27:
            inSingle = true;
            break;
          // '

          case 0x60:
            inTemplateString = true;
            break;
          // `

          case 0x28:
            paren++;
            break;
          // (

          case 0x29:
            paren--;
            break;
          // )

          case 0x5B:
            square++;
            break;
          // [

          case 0x5D:
            square--;
            break;
          // ]

          case 0x7B:
            curly++;
            break;
          // {

          case 0x7D:
            curly--;
            break;
          // }
        }

        if (c === 0x2f) {
          // /
          let j = i - 1;
          let p; // find first non-whitespace prev char

          for (; j >= 0; j--) {
            p = exp.charAt(j);
            if (p !== ' ') break;
          }

          if (!p || !validDivisionCharRE.test(p)) {
            inRegex = true;
          }
        }
      }
    }

    if (expression === undefined) {
      expression = exp.slice(0, i).trim();
    } else if (lastFilterIndex !== 0) {
      pushFilter();
    }

    function pushFilter() {
      (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
      lastFilterIndex = i + 1;
    }

    if (filters) {
      for (i = 0; i < filters.length; i++) {
        expression = wrapFilter(expression, filters[i]);
      }
    }

    return expression;
  }

  function wrapFilter(exp, filter) {
    const i = filter.indexOf('(');

    if (i < 0) {
      // _f: resolveFilter
      return `_f("${filter}")(${exp})`;
    } else {
      const name = filter.slice(0, i);
      const args = filter.slice(i + 1);
      return `_f("${name}")(${exp},${args}`;
    }
  }
  /*  */


  function baseWarn(msg) {
    console.error(`[Vue compiler]: ${msg}`);
  }

  function pluckModuleFunction(modules, key) {
    return modules ? modules.map(m => m[key]).filter(_ => _) : [];
  }

  function addProp(el, name, value) {
    (el.props || (el.props = [])).push({
      name,
      value
    });
  }

  function addAttr(el, name, value) {
    (el.attrs || (el.attrs = [])).push({
      name,
      value
    });
  }

  function addDirective(el, name, rawName, value, arg, modifiers) {
    (el.directives || (el.directives = [])).push({
      name,
      rawName,
      value,
      arg,
      modifiers
    });
  }

  function addHandler(el, name, value, modifiers, important, warn) {
    modifiers = modifiers || emptyObject; // warn prevent and passive modifier

    /* istanbul ignore if */

    if (warn && modifiers.prevent && modifiers.passive) {
      warn('passive and prevent can\'t be used together. ' + 'Passive handler can\'t prevent default event.');
    } // check capture modifier


    if (modifiers.capture) {
      delete modifiers.capture;
      name = '!' + name; // mark the event as captured
    }

    if (modifiers.once) {
      delete modifiers.once;
      name = '~' + name; // mark the event as once
    }
    /* istanbul ignore if */


    if (modifiers.passive) {
      delete modifiers.passive;
      name = '&' + name; // mark the event as passive
    } // normalize click.right and click.middle since they don't actually fire
    // this is technically browser-specific, but at least for now browsers are
    // the only target envs that have right/middle clicks.


    if (name === 'click') {
      if (modifiers.right) {
        name = 'contextmenu';
        delete modifiers.right;
      } else if (modifiers.middle) {
        name = 'mouseup';
      }
    }

    let events;

    if (modifiers.native) {
      delete modifiers.native;
      events = el.nativeEvents || (el.nativeEvents = {});
    } else {
      events = el.events || (el.events = {});
    }

    const newHandler = {
      value
    };

    if (modifiers !== emptyObject) {
      newHandler.modifiers = modifiers;
    }

    const handlers = events[name];
    /* istanbul ignore if */

    if (Array.isArray(handlers)) {
      important ? handlers.unshift(newHandler) : handlers.push(newHandler);
    } else if (handlers) {
      events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
    } else {
      events[name] = newHandler;
    }
  }

  function getBindingAttr(el, name, getStatic) {
    const dynamicValue = getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);

    if (dynamicValue != null) {
      return parseFilters(dynamicValue);
    } else if (getStatic !== false) {
      const staticValue = getAndRemoveAttr(el, name);

      if (staticValue != null) {
        return JSON.stringify(staticValue);
      }
    }
  } // note: this only removes the attr from the Array (attrsList) so that it
  // doesn't get processed by processAttrs.
  // By default it does NOT remove it from the map (attrsMap) because the map is
  // needed during codegen.


  function getAndRemoveAttr(el, name, removeFromMap) {
    let val;

    if ((val = el.attrsMap[name]) != null) {
      const list = el.attrsList;

      for (let i = 0, l = list.length; i < l; i++) {
        if (list[i].name === name) {
          list.splice(i, 1);
          break;
        }
      }
    }

    if (removeFromMap) {
      delete el.attrsMap[name];
    }

    return val;
  }
  /*  */

  /**
   * Cross-platform code generation for component v-model
   */


  function genComponentModel(el, value, modifiers) {
    const {
      number,
      trim
    } = modifiers || {};
    const baseValueExpression = '$$v';
    let valueExpression = baseValueExpression;

    if (trim) {
      valueExpression = `(typeof ${baseValueExpression} === 'string'` + `? ${baseValueExpression}.trim()` + `: ${baseValueExpression})`;
    }

    if (number) {
      valueExpression = `_n(${valueExpression})`;
    }

    const assignment = genAssignmentCode(value, valueExpression);
    el.model = {
      value: `(${value})`,
      expression: `"${value}"`,
      callback: `function (${baseValueExpression}) {${assignment}}`
    };
  }
  /**
   * Cross-platform codegen helper for generating v-model value assignment code.
   */


  function genAssignmentCode(value, assignment) {
    const res = parseModel(value);

    if (res.key === null) {
      return `${value}=${assignment}`;
    } else {
      return `$set(${res.exp}, ${res.key}, ${assignment})`;
    }
  }
  /**
   * Parse a v-model expression into a base path and a final key segment.
   * Handles both dot-path and possible square brackets.
   *
   * Possible cases:
   *
   * - test
   * - test[key]
   * - test[test1[key]]
   * - test["a"][key]
   * - xxx.test[a[a].test1[key]]
   * - test.xxx.a["asa"][test1[key]]
   *
   */


  let len;
  let str;
  let chr;
  let index$1;
  let expressionPos;
  let expressionEndPos;

  function parseModel(val) {
    len = val.length;

    if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
      index$1 = val.lastIndexOf('.');

      if (index$1 > -1) {
        return {
          exp: val.slice(0, index$1),
          key: '"' + val.slice(index$1 + 1) + '"'
        };
      } else {
        return {
          exp: val,
          key: null
        };
      }
    }

    str = val;
    index$1 = expressionPos = expressionEndPos = 0;

    while (!eof()) {
      chr = next();
      /* istanbul ignore if */

      if (isStringStart(chr)) {
        parseString(chr);
      } else if (chr === 0x5B) {
        parseBracket(chr);
      }
    }

    return {
      exp: val.slice(0, expressionPos),
      key: val.slice(expressionPos + 1, expressionEndPos)
    };
  }

  function next() {
    return str.charCodeAt(++index$1);
  }

  function eof() {
    return index$1 >= len;
  }

  function isStringStart(chr) {
    return chr === 0x22 || chr === 0x27;
  }

  function parseBracket(chr) {
    let inBracket = 1;
    expressionPos = index$1;

    while (!eof()) {
      chr = next();

      if (isStringStart(chr)) {
        parseString(chr);
        continue;
      }

      if (chr === 0x5B) inBracket++;
      if (chr === 0x5D) inBracket--;

      if (inBracket === 0) {
        expressionEndPos = index$1;
        break;
      }
    }
  }

  function parseString(chr) {
    const stringQuote = chr;

    while (!eof()) {
      chr = next();

      if (chr === stringQuote) {
        break;
      }
    }
  }
  /*  */


  let warn$1; // in some cases, the event used has to be determined at runtime
  // so we used some reserved tokens during compile.

  const RANGE_TOKEN = '__r';
  const CHECKBOX_RADIO_TOKEN = '__c';

  function model(el, dir, _warn) {
    warn$1 = _warn;
    const value = dir.value;
    const modifiers = dir.modifiers;
    const tag = el.tag;
    const type = el.attrsMap.type;
    {
      // inputs with type="file" are read only and setting the input's
      // value will throw an error.
      if (tag === 'input' && type === 'file') {
        warn$1(`<${el.tag} v-model="${value}" type="file">:\n` + `File inputs are read only. Use a v-on:change listener instead.`);
      }
    }

    if (el.component) {
      genComponentModel(el, value, modifiers); // component v-model doesn't need extra runtime

      return false;
    } else if (tag === 'select') {
      genSelect(el, value, modifiers);
    } else if (tag === 'input' && type === 'checkbox') {
      genCheckboxModel(el, value, modifiers);
    } else if (tag === 'input' && type === 'radio') {
      genRadioModel(el, value, modifiers);
    } else if (tag === 'input' || tag === 'textarea') {
      genDefaultModel(el, value, modifiers);
    } else if (!config.isReservedTag(tag)) {
      genComponentModel(el, value, modifiers); // component v-model doesn't need extra runtime

      return false;
    } else {
      warn$1(`<${el.tag} v-model="${value}">: ` + `v-model is not supported on this element type. ` + 'If you are working with contenteditable, it\'s recommended to ' + 'wrap a library dedicated for that purpose inside a custom component.');
    } // ensure runtime directive metadata


    return true;
  }

  function genCheckboxModel(el, value, modifiers) {
    const number = modifiers && modifiers.number;
    const valueBinding = getBindingAttr(el, 'value') || 'null';
    const trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
    const falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
    addProp(el, 'checked', `Array.isArray(${value})` + `?_i(${value},${valueBinding})>-1` + (trueValueBinding === 'true' ? `:(${value})` : `:_q(${value},${trueValueBinding})`));
    addHandler(el, 'change', `var $$a=${value},` + '$$el=$event.target,' + `$$c=$$el.checked?(${trueValueBinding}):(${falseValueBinding});` + 'if(Array.isArray($$a)){' + `var $$v=${number ? '_n(' + valueBinding + ')' : valueBinding},` + '$$i=_i($$a,$$v);' + `if($$el.checked){$$i<0&&(${value}=$$a.concat([$$v]))}` + `else{$$i>-1&&(${value}=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}` + `}else{${genAssignmentCode(value, '$$c')}}`, null, true);
  }

  function genRadioModel(el, value, modifiers) {
    const number = modifiers && modifiers.number;
    let valueBinding = getBindingAttr(el, 'value') || 'null';
    valueBinding = number ? `_n(${valueBinding})` : valueBinding;
    addProp(el, 'checked', `_q(${value},${valueBinding})`);
    addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
  }

  function genSelect(el, value, modifiers) {
    const number = modifiers && modifiers.number;
    const selectedVal = `Array.prototype.filter` + `.call($event.target.options,function(o){return o.selected})` + `.map(function(o){var val = "_value" in o ? o._value : o.value;` + `return ${number ? '_n(val)' : 'val'}})`;
    const assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
    let code = `var $$selectedVal = ${selectedVal};`;
    code = `${code} ${genAssignmentCode(value, assignment)}`;
    addHandler(el, 'change', code, null, true);
  }

  function genDefaultModel(el, value, modifiers) {
    const type = el.attrsMap.type; // warn if v-bind:value conflicts with v-model

    {
      const value = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];

      if (value) {
        const binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
        warn$1(`${binding}="${value}" conflicts with v-model on the same element ` + 'because the latter already expands to a value binding internally');
      }
    }
    const {
      lazy,
      number,
      trim
    } = modifiers || {};
    const needCompositionGuard = !lazy && type !== 'range';
    const event = lazy ? 'change' : type === 'range' ? RANGE_TOKEN : 'input';
    let valueExpression = '$event.target.value';

    if (trim) {
      valueExpression = `$event.target.value.trim()`;
    }

    if (number) {
      valueExpression = `_n(${valueExpression})`;
    }

    let code = genAssignmentCode(value, valueExpression);

    if (needCompositionGuard) {
      code = `if($event.target.composing)return;${code}`;
    }

    addProp(el, 'value', `(${value})`);
    addHandler(el, event, code, null, true);

    if (trim || number) {
      addHandler(el, 'blur', '$forceUpdate()');
    }
  }
  /*  */
  // normalize v-model event tokens that can only be determined at runtime.
  // it's important to place the event as the first in the array because
  // the whole point is ensuring the v-model callback gets called before
  // user-attached handlers.


  function normalizeEvents(on) {
    /* istanbul ignore if */
    if (isDef(on[RANGE_TOKEN])) {
      // IE input[type=range] only supports `change` event
      const event = isIE ? 'change' : 'input';
      on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
      delete on[RANGE_TOKEN];
    } // This was originally intended to fix #4521 but no longer necessary
    // after 2.5. Keeping it for backwards compat with generated code from < 2.4

    /* istanbul ignore if */


    if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
      on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
      delete on[CHECKBOX_RADIO_TOKEN];
    }
  }

  let target$1;

  function createOnceHandler(handler, event, capture) {
    const _target = target$1; // save current target element in closure

    return function onceHandler() {
      const res = handler.apply(null, arguments);

      if (res !== null) {
        remove$2(event, onceHandler, capture, _target);
      }
    };
  }

  function add$1(event, handler, once$$1, capture, passive) {
    handler = withMacroTask(handler);
    if (once$$1) handler = createOnceHandler(handler, event, capture);
    target$1.addEventListener(event, handler, supportsPassive ? {
      capture,
      passive
    } : capture);
  }

  function remove$2(event, handler, capture, _target) {
    (_target || target$1).removeEventListener(event, handler._withTask || handler, capture);
  }

  function updateDOMListeners(oldVnode, vnode) {
    if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
      return;
    }

    const on = vnode.data.on || {};
    const oldOn = oldVnode.data.on || {};
    target$1 = vnode.elm;
    normalizeEvents(on);
    updateListeners(on, oldOn, add$1, remove$2, vnode.context);
    target$1 = undefined;
  }

  var events = {
    create: updateDOMListeners,
    update: updateDOMListeners
  };
  /*  */

  function updateDOMProps(oldVnode, vnode) {
    if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
      return;
    }

    let key, cur;
    const elm = vnode.elm;
    const oldProps = oldVnode.data.domProps || {};
    let props = vnode.data.domProps || {}; // clone observed objects, as the user probably wants to mutate it

    if (isDef(props.__ob__)) {
      props = vnode.data.domProps = extend({}, props);
    }

    for (key in oldProps) {
      if (isUndef(props[key])) {
        elm[key] = '';
      }
    }

    for (key in props) {
      cur = props[key]; // ignore children if the node has textContent or innerHTML,
      // as these will throw away existing DOM nodes and cause removal errors
      // on subsequent patches (#3360)

      if (key === 'textContent' || key === 'innerHTML') {
        if (vnode.children) vnode.children.length = 0;
        if (cur === oldProps[key]) continue; // #6601 work around Chrome version <= 55 bug where single textNode
        // replaced by innerHTML/textContent retains its parentNode property

        if (elm.childNodes.length === 1) {
          elm.removeChild(elm.childNodes[0]);
        }
      }

      if (key === 'value') {
        // store value as _value as well since
        // non-string values will be stringified
        elm._value = cur; // avoid resetting cursor position when value is the same

        const strCur = isUndef(cur) ? '' : String(cur);

        if (shouldUpdateValue(elm, strCur)) {
          elm.value = strCur;
        }
      } else {
        elm[key] = cur;
      }
    }
  } // check platforms/web/util/attrs.js acceptValue


  function shouldUpdateValue(elm, checkVal) {
    return !elm.composing && (elm.tagName === 'OPTION' || isDirty(elm, checkVal) || isInputChanged(elm, checkVal));
  }

  function isDirty(elm, checkVal) {
    // return true when textbox (.number and .trim) loses focus and its value is
    // not equal to the updated value
    let notInFocus = true; // #6157
    // work around IE bug when accessing document.activeElement in an iframe

    try {
      notInFocus = document.activeElement !== elm;
    } catch (e) {}

    return notInFocus && elm.value !== checkVal;
  }

  function isInputChanged(elm, newVal) {
    const value = elm.value;
    const modifiers = elm._vModifiers; // injected by v-model runtime

    if (isDef(modifiers) && modifiers.number) {
      return toNumber(value) !== toNumber(newVal);
    }

    if (isDef(modifiers) && modifiers.trim) {
      return value.trim() !== newVal.trim();
    }

    return value !== newVal;
  }

  var domProps = {
    create: updateDOMProps,
    update: updateDOMProps
  };
  /*  */

  const parseStyleText = cached(function (cssText) {
    const res = {};
    const listDelimiter = /;(?![^(]*\))/g;
    const propertyDelimiter = /:(.+)/;
    cssText.split(listDelimiter).forEach(function (item) {
      if (item) {
        var tmp = item.split(propertyDelimiter);
        tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
      }
    });
    return res;
  }); // merge static and dynamic style data on the same vnode

  function normalizeStyleData(data) {
    const style = normalizeStyleBinding(data.style); // static style is pre-processed into an object during compilation
    // and is always a fresh object, so it's safe to merge into it

    return data.staticStyle ? extend(data.staticStyle, style) : style;
  } // normalize possible array / string values into Object


  function normalizeStyleBinding(bindingStyle) {
    if (Array.isArray(bindingStyle)) {
      return toObject(bindingStyle);
    }

    if (typeof bindingStyle === 'string') {
      return parseStyleText(bindingStyle);
    }

    return bindingStyle;
  }
  /**
   * parent component style should be after child's
   * so that parent component's style could override it
   */


  function getStyle(vnode, checkChild) {
    const res = {};
    let styleData;

    if (checkChild) {
      let childNode = vnode;

      while (childNode.componentInstance) {
        childNode = childNode.componentInstance._vnode;

        if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
          extend(res, styleData);
        }
      }
    }

    if (styleData = normalizeStyleData(vnode.data)) {
      extend(res, styleData);
    }

    let parentNode = vnode;

    while (parentNode = parentNode.parent) {
      if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
        extend(res, styleData);
      }
    }

    return res;
  }
  /*  */


  const cssVarRE = /^--/;
  const importantRE = /\s*!important$/;

  const setProp = (el, name, val) => {
    /* istanbul ignore if */
    if (cssVarRE.test(name)) {
      el.style.setProperty(name, val);
    } else if (importantRE.test(val)) {
      el.style.setProperty(name, val.replace(importantRE, ''), 'important');
    } else {
      const normalizedName = normalize(name);

      if (Array.isArray(val)) {
        // Support values array created by autoprefixer, e.g.
        // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
        // Set them one by one, and the browser will only set those it can recognize
        for (let i = 0, len = val.length; i < len; i++) {
          el.style[normalizedName] = val[i];
        }
      } else {
        el.style[normalizedName] = val;
      }
    }
  };

  const vendorNames = ['Webkit', 'Moz', 'ms'];
  let emptyStyle;
  const normalize = cached(function (prop) {
    emptyStyle = emptyStyle || document.createElement('div').style;
    prop = camelize(prop);

    if (prop !== 'filter' && prop in emptyStyle) {
      return prop;
    }

    const capName = prop.charAt(0).toUpperCase() + prop.slice(1);

    for (let i = 0; i < vendorNames.length; i++) {
      const name = vendorNames[i] + capName;

      if (name in emptyStyle) {
        return name;
      }
    }
  });

  function updateStyle(oldVnode, vnode) {
    const data = vnode.data;
    const oldData = oldVnode.data;

    if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
      return;
    }

    let cur, name;
    const el = vnode.elm;
    const oldStaticStyle = oldData.staticStyle;
    const oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // if static style exists, stylebinding already merged into it when doing normalizeStyleData

    const oldStyle = oldStaticStyle || oldStyleBinding;
    const style = normalizeStyleBinding(vnode.data.style) || {}; // store normalized style under a different key for next diff
    // make sure to clone it if it's reactive, since the user likely wants
    // to mutate it.

    vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;
    const newStyle = getStyle(vnode, true);

    for (name in oldStyle) {
      if (isUndef(newStyle[name])) {
        setProp(el, name, '');
      }
    }

    for (name in newStyle) {
      cur = newStyle[name];

      if (cur !== oldStyle[name]) {
        // ie9 setting to null has no effect, must use empty string
        setProp(el, name, cur == null ? '' : cur);
      }
    }
  }

  var style = {
    create: updateStyle,
    update: updateStyle
  };
  /*  */

  /**
   * Add class with compatibility for SVG since classList is not supported on
   * SVG elements in IE
   */

  function addClass(el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
      return;
    }
    /* istanbul ignore else */


    if (el.classList) {
      if (cls.indexOf(' ') > -1) {
        cls.split(/\s+/).forEach(c => el.classList.add(c));
      } else {
        el.classList.add(cls);
      }
    } else {
      const cur = ` ${el.getAttribute('class') || ''} `;

      if (cur.indexOf(' ' + cls + ' ') < 0) {
        el.setAttribute('class', (cur + cls).trim());
      }
    }
  }
  /**
   * Remove class with compatibility for SVG since classList is not supported on
   * SVG elements in IE
   */


  function removeClass(el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
      return;
    }
    /* istanbul ignore else */


    if (el.classList) {
      if (cls.indexOf(' ') > -1) {
        cls.split(/\s+/).forEach(c => el.classList.remove(c));
      } else {
        el.classList.remove(cls);
      }

      if (!el.classList.length) {
        el.removeAttribute('class');
      }
    } else {
      let cur = ` ${el.getAttribute('class') || ''} `;
      const tar = ' ' + cls + ' ';

      while (cur.indexOf(tar) >= 0) {
        cur = cur.replace(tar, ' ');
      }

      cur = cur.trim();

      if (cur) {
        el.setAttribute('class', cur);
      } else {
        el.removeAttribute('class');
      }
    }
  }
  /*  */


  function resolveTransition(def) {
    if (!def) {
      return;
    }
    /* istanbul ignore else */


    if (typeof def === 'object') {
      const res = {};

      if (def.css !== false) {
        extend(res, autoCssTransition(def.name || 'v'));
      }

      extend(res, def);
      return res;
    } else if (typeof def === 'string') {
      return autoCssTransition(def);
    }
  }

  const autoCssTransition = cached(name => {
    return {
      enterClass: `${name}-enter`,
      enterToClass: `${name}-enter-to`,
      enterActiveClass: `${name}-enter-active`,
      leaveClass: `${name}-leave`,
      leaveToClass: `${name}-leave-to`,
      leaveActiveClass: `${name}-leave-active`
    };
  });
  const hasTransition = inBrowser && !isIE9;
  const TRANSITION = 'transition';
  const ANIMATION = 'animation'; // Transition property/event sniffing

  let transitionProp = 'transition';
  let transitionEndEvent = 'transitionend';
  let animationProp = 'animation';
  let animationEndEvent = 'animationend';

  if (hasTransition) {
    /* istanbul ignore if */
    if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
      transitionProp = 'WebkitTransition';
      transitionEndEvent = 'webkitTransitionEnd';
    }

    if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
      animationProp = 'WebkitAnimation';
      animationEndEvent = 'webkitAnimationEnd';
    }
  } // binding to window is necessary to make hot reload work in IE in strict mode


  const raf = inBrowser ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout :
  /* istanbul ignore next */
  fn => fn();

  function nextFrame(fn) {
    raf(() => {
      raf(fn);
    });
  }

  function addTransitionClass(el, cls) {
    const transitionClasses = el._transitionClasses || (el._transitionClasses = []);

    if (transitionClasses.indexOf(cls) < 0) {
      transitionClasses.push(cls);
      addClass(el, cls);
    }
  }

  function removeTransitionClass(el, cls) {
    if (el._transitionClasses) {
      remove(el._transitionClasses, cls);
    }

    removeClass(el, cls);
  }

  function whenTransitionEnds(el, expectedType, cb) {
    const {
      type,
      timeout,
      propCount
    } = getTransitionInfo(el, expectedType);
    if (!type) return cb();
    const event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
    let ended = 0;

    const end = () => {
      el.removeEventListener(event, onEnd);
      cb();
    };

    const onEnd = e => {
      if (e.target === el) {
        if (++ended >= propCount) {
          end();
        }
      }
    };

    setTimeout(() => {
      if (ended < propCount) {
        end();
      }
    }, timeout + 1);
    el.addEventListener(event, onEnd);
  }

  const transformRE = /\b(transform|all)(,|$)/;

  function getTransitionInfo(el, expectedType) {
    const styles = window.getComputedStyle(el);
    const transitionDelays = styles[transitionProp + 'Delay'].split(', ');
    const transitionDurations = styles[transitionProp + 'Duration'].split(', ');
    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);
    const animationDelays = styles[animationProp + 'Delay'].split(', ');
    const animationDurations = styles[animationProp + 'Duration'].split(', ');
    const animationTimeout = getTimeout(animationDelays, animationDurations);
    let type;
    let timeout = 0;
    let propCount = 0;
    /* istanbul ignore if */

    if (expectedType === TRANSITION) {
      if (transitionTimeout > 0) {
        type = TRANSITION;
        timeout = transitionTimeout;
        propCount = transitionDurations.length;
      }
    } else if (expectedType === ANIMATION) {
      if (animationTimeout > 0) {
        type = ANIMATION;
        timeout = animationTimeout;
        propCount = animationDurations.length;
      }
    } else {
      timeout = Math.max(transitionTimeout, animationTimeout);
      type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
      propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
    }

    const hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
    return {
      type,
      timeout,
      propCount,
      hasTransform
    };
  }

  function getTimeout(delays, durations) {
    /* istanbul ignore next */
    while (delays.length < durations.length) {
      delays = delays.concat(delays);
    }

    return Math.max.apply(null, durations.map((d, i) => {
      return toMs(d) + toMs(delays[i]);
    }));
  }

  function toMs(s) {
    return Number(s.slice(0, -1)) * 1000;
  }
  /*  */


  function enter(vnode, toggleDisplay) {
    const el = vnode.elm; // call leave callback now

    if (isDef(el._leaveCb)) {
      el._leaveCb.cancelled = true;

      el._leaveCb();
    }

    const data = resolveTransition(vnode.data.transition);

    if (isUndef(data)) {
      return;
    }
    /* istanbul ignore if */


    if (isDef(el._enterCb) || el.nodeType !== 1) {
      return;
    }

    const {
      css,
      type,
      enterClass,
      enterToClass,
      enterActiveClass,
      appearClass,
      appearToClass,
      appearActiveClass,
      beforeEnter,
      enter,
      afterEnter,
      enterCancelled,
      beforeAppear,
      appear,
      afterAppear,
      appearCancelled,
      duration
    } = data; // activeInstance will always be the <transition> component managing this
    // transition. One edge case to check is when the <transition> is placed
    // as the root node of a child component. In that case we need to check
    // <transition>'s parent for appear check.

    let context = activeInstance;
    let transitionNode = activeInstance.$vnode;

    while (transitionNode && transitionNode.parent) {
      transitionNode = transitionNode.parent;
      context = transitionNode.context;
    }

    const isAppear = !context._isMounted || !vnode.isRootInsert;

    if (isAppear && !appear && appear !== '') {
      return;
    }

    const startClass = isAppear && appearClass ? appearClass : enterClass;
    const activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
    const toClass = isAppear && appearToClass ? appearToClass : enterToClass;
    const beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
    const enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;
    const afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
    const enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;
    const explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);

    if (explicitEnterDuration != null) {
      checkDuration(explicitEnterDuration, 'enter', vnode);
    }

    const expectsCSS = css !== false && !isIE9;
    const userWantsControl = getHookArgumentsLength(enterHook);
    const cb = el._enterCb = once(() => {
      if (expectsCSS) {
        removeTransitionClass(el, toClass);
        removeTransitionClass(el, activeClass);
      }

      if (cb.cancelled) {
        if (expectsCSS) {
          removeTransitionClass(el, startClass);
        }

        enterCancelledHook && enterCancelledHook(el);
      } else {
        afterEnterHook && afterEnterHook(el);
      }

      el._enterCb = null;
    });

    if (!vnode.data.show) {
      // remove pending leave element on enter by injecting an insert hook
      mergeVNodeHook(vnode, 'insert', () => {
        const parent = el.parentNode;
        const pendingNode = parent && parent._pending && parent._pending[vnode.key];

        if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {
          pendingNode.elm._leaveCb();
        }

        enterHook && enterHook(el, cb);
      });
    } // start enter transition


    beforeEnterHook && beforeEnterHook(el);

    if (expectsCSS) {
      addTransitionClass(el, startClass);
      addTransitionClass(el, activeClass);
      nextFrame(() => {
        addTransitionClass(el, toClass);
        removeTransitionClass(el, startClass);

        if (!cb.cancelled && !userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      });
    }

    if (vnode.data.show) {
      toggleDisplay && toggleDisplay();
      enterHook && enterHook(el, cb);
    }

    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }

  function leave(vnode, rm) {
    const el = vnode.elm; // call enter callback now

    if (isDef(el._enterCb)) {
      el._enterCb.cancelled = true;

      el._enterCb();
    }

    const data = resolveTransition(vnode.data.transition);

    if (isUndef(data) || el.nodeType !== 1) {
      return rm();
    }
    /* istanbul ignore if */


    if (isDef(el._leaveCb)) {
      return;
    }

    const {
      css,
      type,
      leaveClass,
      leaveToClass,
      leaveActiveClass,
      beforeLeave,
      leave,
      afterLeave,
      leaveCancelled,
      delayLeave,
      duration
    } = data;
    const expectsCSS = css !== false && !isIE9;
    const userWantsControl = getHookArgumentsLength(leave);
    const explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);

    if (isDef(explicitLeaveDuration)) {
      checkDuration(explicitLeaveDuration, 'leave', vnode);
    }

    const cb = el._leaveCb = once(() => {
      if (el.parentNode && el.parentNode._pending) {
        el.parentNode._pending[vnode.key] = null;
      }

      if (expectsCSS) {
        removeTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveActiveClass);
      }

      if (cb.cancelled) {
        if (expectsCSS) {
          removeTransitionClass(el, leaveClass);
        }

        leaveCancelled && leaveCancelled(el);
      } else {
        rm();
        afterLeave && afterLeave(el);
      }

      el._leaveCb = null;
    });

    if (delayLeave) {
      delayLeave(performLeave);
    } else {
      performLeave();
    }

    function performLeave() {
      // the delayed leave may have already been cancelled
      if (cb.cancelled) {
        return;
      } // record leaving element


      if (!vnode.data.show) {
        (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
      }

      beforeLeave && beforeLeave(el);

      if (expectsCSS) {
        addTransitionClass(el, leaveClass);
        addTransitionClass(el, leaveActiveClass);
        nextFrame(() => {
          addTransitionClass(el, leaveToClass);
          removeTransitionClass(el, leaveClass);

          if (!cb.cancelled && !userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        });
      }

      leave && leave(el, cb);

      if (!expectsCSS && !userWantsControl) {
        cb();
      }
    }
  } // only used in dev mode


  function checkDuration(val, name, vnode) {
    if (typeof val !== 'number') {
      warn(`<transition> explicit ${name} duration is not a valid number - ` + `got ${JSON.stringify(val)}.`, vnode.context);
    } else if (isNaN(val)) {
      warn(`<transition> explicit ${name} duration is NaN - ` + 'the duration expression might be incorrect.', vnode.context);
    }
  }

  function isValidDuration(val) {
    return typeof val === 'number' && !isNaN(val);
  }
  /**
   * Normalize a transition hook's argument length. The hook may be:
   * - a merged hook (invoker) with the original in .fns
   * - a wrapped component method (check ._length)
   * - a plain function (.length)
   */


  function getHookArgumentsLength(fn) {
    if (isUndef(fn)) {
      return false;
    }

    const invokerFns = fn.fns;

    if (isDef(invokerFns)) {
      // invoker
      return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
    } else {
      return (fn._length || fn.length) > 1;
    }
  }

  function _enter(_, vnode) {
    if (vnode.data.show !== true) {
      enter(vnode);
    }
  }

  var transition = inBrowser ? {
    create: _enter,
    activate: _enter,

    remove(vnode, rm) {
      /* istanbul ignore else */
      if (vnode.data.show !== true) {
        leave(vnode, rm);
      } else {
        rm();
      }
    }

  } : {};
  var platformModules = [attrs, klass, events, domProps, style, transition];
  /*  */
  // the directive module should be applied last, after all
  // built-in modules have been applied.

  const modules = platformModules.concat(baseModules);
  const patch = createPatchFunction({
    nodeOps,
    modules
  });
  /**
   * Not type checking this file because flow doesn't like attaching
   * properties to Elements.
   */

  /* istanbul ignore if */

  if (isIE9) {
    // http://www.matts411.com/post/internet-explorer-9-oninput/
    document.addEventListener('selectionchange', () => {
      const el = document.activeElement;

      if (el && el.vmodel) {
        trigger(el, 'input');
      }
    });
  }

  const directive = {
    inserted(el, binding, vnode, oldVnode) {
      if (vnode.tag === 'select') {
        // #6903
        if (oldVnode.elm && !oldVnode.elm._vOptions) {
          mergeVNodeHook(vnode, 'postpatch', () => {
            directive.componentUpdated(el, binding, vnode);
          });
        } else {
          setSelected(el, binding, vnode.context);
        }

        el._vOptions = [].map.call(el.options, getValue);
      } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
        el._vModifiers = binding.modifiers;

        if (!binding.modifiers.lazy) {
          // Safari < 10.2 & UIWebView doesn't fire compositionend when
          // switching focus before confirming composition choice
          // this also fixes the issue where some browsers e.g. iOS Chrome
          // fires "change" instead of "input" on autocomplete.
          el.addEventListener('change', onCompositionEnd);

          if (!isAndroid) {
            el.addEventListener('compositionstart', onCompositionStart);
            el.addEventListener('compositionend', onCompositionEnd);
          }
          /* istanbul ignore if */


          if (isIE9) {
            el.vmodel = true;
          }
        }
      }
    },

    componentUpdated(el, binding, vnode) {
      if (vnode.tag === 'select') {
        setSelected(el, binding, vnode.context); // in case the options rendered by v-for have changed,
        // it's possible that the value is out-of-sync with the rendered options.
        // detect such cases and filter out values that no longer has a matching
        // option in the DOM.

        const prevOptions = el._vOptions;
        const curOptions = el._vOptions = [].map.call(el.options, getValue);

        if (curOptions.some((o, i) => !looseEqual(o, prevOptions[i]))) {
          // trigger change event if
          // no matching option found for at least one value
          const needReset = el.multiple ? binding.value.some(v => hasNoMatchingOption(v, curOptions)) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);

          if (needReset) {
            trigger(el, 'change');
          }
        }
      }
    }

  };

  function setSelected(el, binding, vm) {
    actuallySetSelected(el, binding, vm);
    /* istanbul ignore if */

    if (isIE || isEdge) {
      setTimeout(() => {
        actuallySetSelected(el, binding, vm);
      }, 0);
    }
  }

  function actuallySetSelected(el, binding, vm) {
    const value = binding.value;
    const isMultiple = el.multiple;

    if (isMultiple && !Array.isArray(value)) {
      warn(`<select multiple v-model="${binding.expression}"> ` + `expects an Array value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}`, vm);
      return;
    }

    let selected, option;

    for (let i = 0, l = el.options.length; i < l; i++) {
      option = el.options[i];

      if (isMultiple) {
        selected = looseIndexOf(value, getValue(option)) > -1;

        if (option.selected !== selected) {
          option.selected = selected;
        }
      } else {
        if (looseEqual(getValue(option), value)) {
          if (el.selectedIndex !== i) {
            el.selectedIndex = i;
          }

          return;
        }
      }
    }

    if (!isMultiple) {
      el.selectedIndex = -1;
    }
  }

  function hasNoMatchingOption(value, options) {
    return options.every(o => !looseEqual(o, value));
  }

  function getValue(option) {
    return '_value' in option ? option._value : option.value;
  }

  function onCompositionStart(e) {
    e.target.composing = true;
  }

  function onCompositionEnd(e) {
    // prevent triggering an input event for no reason
    if (!e.target.composing) return;
    e.target.composing = false;
    trigger(e.target, 'input');
  }

  function trigger(el, type) {
    const e = document.createEvent('HTMLEvents');
    e.initEvent(type, true, true);
    el.dispatchEvent(e);
  }
  /*  */
  // recursively search for possible transition defined inside the component root


  function locateNode(vnode) {
    return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;
  }

  var show = {
    bind(el, {
      value
    }, vnode) {
      vnode = locateNode(vnode);
      const transition$$1 = vnode.data && vnode.data.transition;
      const originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;

      if (value && transition$$1) {
        vnode.data.show = true;
        enter(vnode, () => {
          el.style.display = originalDisplay;
        });
      } else {
        el.style.display = value ? originalDisplay : 'none';
      }
    },

    update(el, {
      value,
      oldValue
    }, vnode) {
      /* istanbul ignore if */
      if (value === oldValue) return;
      vnode = locateNode(vnode);
      const transition$$1 = vnode.data && vnode.data.transition;

      if (transition$$1) {
        vnode.data.show = true;

        if (value) {
          enter(vnode, () => {
            el.style.display = el.__vOriginalDisplay;
          });
        } else {
          leave(vnode, () => {
            el.style.display = 'none';
          });
        }
      } else {
        el.style.display = value ? el.__vOriginalDisplay : 'none';
      }
    },

    unbind(el, binding, vnode, oldVnode, isDestroy) {
      if (!isDestroy) {
        el.style.display = el.__vOriginalDisplay;
      }
    }

  };
  var platformDirectives = {
    model: directive,
    show
  };
  /*  */
  // Provides transition support for a single element/component.
  // supports transition mode (out-in / in-out)

  const transitionProps = {
    name: String,
    appear: Boolean,
    css: Boolean,
    mode: String,
    type: String,
    enterClass: String,
    leaveClass: String,
    enterToClass: String,
    leaveToClass: String,
    enterActiveClass: String,
    leaveActiveClass: String,
    appearClass: String,
    appearActiveClass: String,
    appearToClass: String,
    duration: [Number, String, Object]
  }; // in case the child is also an abstract component, e.g. <keep-alive>
  // we want to recursively retrieve the real component to be rendered

  function getRealChild(vnode) {
    const compOptions = vnode && vnode.componentOptions;

    if (compOptions && compOptions.Ctor.options.abstract) {
      return getRealChild(getFirstComponentChild(compOptions.children));
    } else {
      return vnode;
    }
  }

  function extractTransitionData(comp) {
    const data = {};
    const options = comp.$options; // props

    for (const key in options.propsData) {
      data[key] = comp[key];
    } // events.
    // extract listeners and pass them directly to the transition methods


    const listeners = options._parentListeners;

    for (const key in listeners) {
      data[camelize(key)] = listeners[key];
    }

    return data;
  }

  function placeholder(h, rawChild) {
    if (/\d-keep-alive$/.test(rawChild.tag)) {
      return h('keep-alive', {
        props: rawChild.componentOptions.propsData
      });
    }
  }

  function hasParentTransition(vnode) {
    while (vnode = vnode.parent) {
      if (vnode.data.transition) {
        return true;
      }
    }
  }

  function isSameChild(child, oldChild) {
    return oldChild.key === child.key && oldChild.tag === child.tag;
  }

  var Transition = {
    name: 'transition',
    props: transitionProps,
    abstract: true,

    render(h) {
      let children = this.$slots.default;

      if (!children) {
        return;
      } // filter out text nodes (possible whitespaces)


      children = children.filter(c => c.tag || isAsyncPlaceholder(c));
      /* istanbul ignore if */

      if (!children.length) {
        return;
      } // warn multiple elements


      if (children.length > 1) {
        warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);
      }

      const mode = this.mode; // warn invalid mode

      if (mode && mode !== 'in-out' && mode !== 'out-in') {
        warn('invalid <transition> mode: ' + mode, this.$parent);
      }

      const rawChild = children[0]; // if this is a component root node and the component's
      // parent container node also has transition, skip.

      if (hasParentTransition(this.$vnode)) {
        return rawChild;
      } // apply transition data to child
      // use getRealChild() to ignore abstract components e.g. keep-alive


      const child = getRealChild(rawChild);
      /* istanbul ignore if */

      if (!child) {
        return rawChild;
      }

      if (this._leaving) {
        return placeholder(h, rawChild);
      } // ensure a key that is unique to the vnode type and to this transition
      // component instance. This key will be used to remove pending leaving nodes
      // during entering.


      const id = `__transition-${this._uid}-`;
      child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;
      const data = (child.data || (child.data = {})).transition = extractTransitionData(this);
      const oldRawChild = this._vnode;
      const oldChild = getRealChild(oldRawChild); // mark v-show
      // so that the transition module can hand over the control to the directive

      if (child.data.directives && child.data.directives.some(d => d.name === 'show')) {
        child.data.show = true;
      }

      if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)) {
        // replace old child transition data with fresh one
        // important for dynamic transitions!
        const oldData = oldChild.data.transition = extend({}, data); // handle transition mode

        if (mode === 'out-in') {
          // return placeholder node and queue update when leave finishes
          this._leaving = true;
          mergeVNodeHook(oldData, 'afterLeave', () => {
            this._leaving = false;
            this.$forceUpdate();
          });
          return placeholder(h, rawChild);
        } else if (mode === 'in-out') {
          if (isAsyncPlaceholder(child)) {
            return oldRawChild;
          }

          let delayedLeave;

          const performLeave = () => {
            delayedLeave();
          };

          mergeVNodeHook(data, 'afterEnter', performLeave);
          mergeVNodeHook(data, 'enterCancelled', performLeave);
          mergeVNodeHook(oldData, 'delayLeave', leave => {
            delayedLeave = leave;
          });
        }
      }

      return rawChild;
    }

  };
  /*  */
  // Provides transition support for list items.
  // supports move transitions using the FLIP technique.
  // Because the vdom's children update algorithm is "unstable" - i.e.
  // it doesn't guarantee the relative positioning of removed elements,
  // we force transition-group to update its children into two passes:
  // in the first pass, we remove all nodes that need to be removed,
  // triggering their leaving transition; in the second pass, we insert/move
  // into the final desired state. This way in the second pass removed
  // nodes will remain where they should be.

  const props = extend({
    tag: String,
    moveClass: String
  }, transitionProps);
  delete props.mode;
  var TransitionGroup = {
    props,

    render(h) {
      const tag = this.tag || this.$vnode.data.tag || 'span';
      const map = Object.create(null);
      const prevChildren = this.prevChildren = this.children;
      const rawChildren = this.$slots.default || [];
      const children = this.children = [];
      const transitionData = extractTransitionData(this);

      for (let i = 0; i < rawChildren.length; i++) {
        const c = rawChildren[i];

        if (c.tag) {
          if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
            children.push(c);
            map[c.key] = c;
            (c.data || (c.data = {})).transition = transitionData;
          } else {
            const opts = c.componentOptions;
            const name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;
            warn(`<transition-group> children must be keyed: <${name}>`);
          }
        }
      }

      if (prevChildren) {
        const kept = [];
        const removed = [];

        for (let i = 0; i < prevChildren.length; i++) {
          const c = prevChildren[i];
          c.data.transition = transitionData;
          c.data.pos = c.elm.getBoundingClientRect();

          if (map[c.key]) {
            kept.push(c);
          } else {
            removed.push(c);
          }
        }

        this.kept = h(tag, null, kept);
        this.removed = removed;
      }

      return h(tag, null, children);
    },

    beforeUpdate() {
      // force removing pass
      this.__patch__(this._vnode, this.kept, false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
      );

      this._vnode = this.kept;
    },

    updated() {
      const children = this.prevChildren;
      const moveClass = this.moveClass || (this.name || 'v') + '-move';

      if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
        return;
      } // we divide the work into three loops to avoid mixing DOM reads and writes
      // in each iteration - which helps prevent layout thrashing.


      children.forEach(callPendingCbs);
      children.forEach(recordPosition);
      children.forEach(applyTranslation); // force reflow to put everything in position
      // assign to this to avoid being removed in tree-shaking
      // $flow-disable-line

      this._reflow = document.body.offsetHeight;
      children.forEach(c => {
        if (c.data.moved) {
          var el = c.elm;
          var s = el.style;
          addTransitionClass(el, moveClass);
          s.transform = s.WebkitTransform = s.transitionDuration = '';
          el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
            if (!e || /transform$/.test(e.propertyName)) {
              el.removeEventListener(transitionEndEvent, cb);
              el._moveCb = null;
              removeTransitionClass(el, moveClass);
            }
          });
        }
      });
    },

    methods: {
      hasMove(el, moveClass) {
        /* istanbul ignore if */
        if (!hasTransition) {
          return false;
        }
        /* istanbul ignore if */


        if (this._hasMove) {
          return this._hasMove;
        } // Detect whether an element with the move class applied has
        // CSS transitions. Since the element may be inside an entering
        // transition at this very moment, we make a clone of it and remove
        // all other transition classes applied to ensure only the move class
        // is applied.


        const clone = el.cloneNode();

        if (el._transitionClasses) {
          el._transitionClasses.forEach(cls => {
            removeClass(clone, cls);
          });
        }

        addClass(clone, moveClass);
        clone.style.display = 'none';
        this.$el.appendChild(clone);
        const info = getTransitionInfo(clone);
        this.$el.removeChild(clone);
        return this._hasMove = info.hasTransform;
      }

    }
  };

  function callPendingCbs(c) {
    /* istanbul ignore if */
    if (c.elm._moveCb) {
      c.elm._moveCb();
    }
    /* istanbul ignore if */


    if (c.elm._enterCb) {
      c.elm._enterCb();
    }
  }

  function recordPosition(c) {
    c.data.newPos = c.elm.getBoundingClientRect();
  }

  function applyTranslation(c) {
    const oldPos = c.data.pos;
    const newPos = c.data.newPos;
    const dx = oldPos.left - newPos.left;
    const dy = oldPos.top - newPos.top;

    if (dx || dy) {
      c.data.moved = true;
      const s = c.elm.style;
      s.transform = s.WebkitTransform = `translate(${dx}px,${dy}px)`;
      s.transitionDuration = '0s';
    }
  }

  var platformComponents = {
    Transition,
    TransitionGroup
  };
  /*  */
  // install platform specific utils

  Vue$3.config.mustUseProp = mustUseProp;
  Vue$3.config.isReservedTag = isReservedTag;
  Vue$3.config.isReservedAttr = isReservedAttr;
  Vue$3.config.getTagNamespace = getTagNamespace;
  Vue$3.config.isUnknownElement = isUnknownElement; // install platform runtime directives & components

  extend(Vue$3.options.directives, platformDirectives);
  extend(Vue$3.options.components, platformComponents); // install platform patch function

  Vue$3.prototype.__patch__ = inBrowser ? patch : noop; // public mount method

  Vue$3.prototype.$mount = function (el, hydrating) {
    el = el && inBrowser ? query(el) : undefined;
    return mountComponent(this, el, hydrating);
  }; // devtools global hook

  /* istanbul ignore next */


  Vue$3.nextTick(() => {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue$3);
      } else if (isChrome) {
        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
      }
    }

    if (config.productionTip !== false && inBrowser && typeof console !== 'undefined') {
      console[console.info ? 'info' : 'log'](`You are running Vue in development mode.\n` + `Make sure to turn on production mode when deploying for production.\n` + `See more tips at https://vuejs.org/guide/deployment.html`);
    }
  }, 0);
  /*  */

  const defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
  const regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;
  const buildRegex = cached(delimiters => {
    const open = delimiters[0].replace(regexEscapeRE, '\\$&');
    const close = delimiters[1].replace(regexEscapeRE, '\\$&');
    return new RegExp(open + '((?:.|\\n)+?)' + close, 'g');
  });

  function parseText(text, delimiters) {
    const tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;

    if (!tagRE.test(text)) {
      return;
    }

    const tokens = [];
    let lastIndex = tagRE.lastIndex = 0;
    let match, index;

    while (match = tagRE.exec(text)) {
      index = match.index; // push text token

      if (index > lastIndex) {
        tokens.push(JSON.stringify(text.slice(lastIndex, index)));
      } // tag token


      const exp = parseFilters(match[1].trim());
      tokens.push(`_s(${exp})`);
      lastIndex = index + match[0].length;
    }

    if (lastIndex < text.length) {
      tokens.push(JSON.stringify(text.slice(lastIndex)));
    }

    return tokens.join('+');
  }
  /*  */


  function transformNode(el, options) {
    const warn = options.warn || baseWarn;
    const staticClass = getAndRemoveAttr(el, 'class');

    if (staticClass) {
      const expression = parseText(staticClass, options.delimiters);

      if (expression) {
        warn(`class="${staticClass}": ` + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div class="{{ val }}">, use <div :class="val">.');
      }
    }

    if (staticClass) {
      el.staticClass = JSON.stringify(staticClass);
    }

    const classBinding = getBindingAttr(el, 'class', false
    /* getStatic */
    );

    if (classBinding) {
      el.classBinding = classBinding;
    }
  }

  function genData(el) {
    let data = '';

    if (el.staticClass) {
      data += `staticClass:${el.staticClass},`;
    }

    if (el.classBinding) {
      data += `class:${el.classBinding},`;
    }

    return data;
  }

  var klass$1 = {
    staticKeys: ['staticClass'],
    transformNode,
    genData
  };
  /*  */

  function transformNode$1(el, options) {
    const warn = options.warn || baseWarn;
    const staticStyle = getAndRemoveAttr(el, 'style');

    if (staticStyle) {
      /* istanbul ignore if */
      {
        const expression = parseText(staticStyle, options.delimiters);

        if (expression) {
          warn(`style="${staticStyle}": ` + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div style="{{ val }}">, use <div :style="val">.');
        }
      }
      el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
    }

    const styleBinding = getBindingAttr(el, 'style', false
    /* getStatic */
    );

    if (styleBinding) {
      el.styleBinding = styleBinding;
    }
  }

  function genData$1(el) {
    let data = '';

    if (el.staticStyle) {
      data += `staticStyle:${el.staticStyle},`;
    }

    if (el.styleBinding) {
      data += `style:(${el.styleBinding}),`;
    }

    return data;
  }

  var style$1 = {
    staticKeys: ['staticStyle'],
    transformNode: transformNode$1,
    genData: genData$1
  };
  /*  */

  let decoder;
  var he = {
    decode(html) {
      decoder = decoder || document.createElement('div');
      decoder.innerHTML = html;
      return decoder.textContent;
    }

  };
  /*  */

  const isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr'); // Elements that you can, intentionally, leave open
  // (and which close themselves)

  const canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'); // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
  // Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content

  const isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track');
  /**
   * Not type-checking this file because it's mostly vendor code.
   */

  /*!
   * HTML Parser By John Resig (ejohn.org)
   * Modified by Juriy "kangax" Zaytsev
   * Original code by Erik Arvidsson, Mozilla Public License
   * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
   */
  // Regular Expressions for parsing tags and attributes

  const attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/; // could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
  // but for Vue templates we can enforce a simple charset

  const ncname = '[a-zA-Z_][\\w\\-\\.]*';
  const qnameCapture = `((?:${ncname}\\:)?${ncname})`;
  const startTagOpen = new RegExp(`^<${qnameCapture}`);
  const startTagClose = /^\s*(\/?)>/;
  const endTag = new RegExp(`^<\\/${qnameCapture}[^>]*>`);
  const doctype = /^<!DOCTYPE [^>]+>/i;
  const comment = /^<!--/;
  const conditionalComment = /^<!\[/;
  let IS_REGEX_CAPTURING_BROKEN = false;
  'x'.replace(/x(.)?/g, function (m, g) {
    IS_REGEX_CAPTURING_BROKEN = g === '';
  }); // Special Elements (can contain anything)

  const isPlainTextElement = makeMap('script,style,textarea', true);
  const reCache = {};
  const decodingMap = {
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&amp;': '&',
    '&#10;': '\n',
    '&#9;': '\t'
  };
  const encodedAttr = /&(?:lt|gt|quot|amp);/g;
  const encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g; // #5992

  const isIgnoreNewlineTag = makeMap('pre,textarea', true);

  const shouldIgnoreFirstNewline = (tag, html) => tag && isIgnoreNewlineTag(tag) && html[0] === '\n';

  function decodeAttr(value, shouldDecodeNewlines) {
    const re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
    return value.replace(re, match => decodingMap[match]);
  }

  function parseHTML(html, options) {
    const stack = [];
    const expectHTML = options.expectHTML;
    const isUnaryTag$$1 = options.isUnaryTag || no;
    const canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
    let index = 0;
    let last, lastTag;

    while (html) {
      last = html; // Make sure we're not in a plaintext content element like script/style

      if (!lastTag || !isPlainTextElement(lastTag)) {
        let textEnd = html.indexOf('<');

        if (textEnd === 0) {
          // Comment:
          if (comment.test(html)) {
            const commentEnd = html.indexOf('-->');

            if (commentEnd >= 0) {
              if (options.shouldKeepComment) {
                options.comment(html.substring(4, commentEnd));
              }

              advance(commentEnd + 3);
              continue;
            }
          } // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment


          if (conditionalComment.test(html)) {
            const conditionalEnd = html.indexOf(']>');

            if (conditionalEnd >= 0) {
              advance(conditionalEnd + 2);
              continue;
            }
          } // Doctype:


          const doctypeMatch = html.match(doctype);

          if (doctypeMatch) {
            advance(doctypeMatch[0].length);
            continue;
          } // End tag:


          const endTagMatch = html.match(endTag);

          if (endTagMatch) {
            const curIndex = index;
            advance(endTagMatch[0].length);
            parseEndTag(endTagMatch[1], curIndex, index);
            continue;
          } // Start tag:


          const startTagMatch = parseStartTag();

          if (startTagMatch) {
            handleStartTag(startTagMatch);

            if (shouldIgnoreFirstNewline(lastTag, html)) {
              advance(1);
            }

            continue;
          }
        }

        let text, rest, next;

        if (textEnd >= 0) {
          rest = html.slice(textEnd);

          while (!endTag.test(rest) && !startTagOpen.test(rest) && !comment.test(rest) && !conditionalComment.test(rest)) {
            // < in plain text, be forgiving and treat it as text
            next = rest.indexOf('<', 1);
            if (next < 0) break;
            textEnd += next;
            rest = html.slice(textEnd);
          }

          text = html.substring(0, textEnd);
          advance(textEnd);
        }

        if (textEnd < 0) {
          text = html;
          html = '';
        }

        if (options.chars && text) {
          options.chars(text);
        }
      } else {
        let endTagLength = 0;
        const stackedTag = lastTag.toLowerCase();
        const reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
        const rest = html.replace(reStackedTag, function (all, text, endTag) {
          endTagLength = endTag.length;

          if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
            text = text.replace(/<!--([\s\S]*?)-->/g, '$1').replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
          }

          if (shouldIgnoreFirstNewline(stackedTag, text)) {
            text = text.slice(1);
          }

          if (options.chars) {
            options.chars(text);
          }

          return '';
        });
        index += html.length - rest.length;
        html = rest;
        parseEndTag(stackedTag, index - endTagLength, index);
      }

      if (html === last) {
        options.chars && options.chars(html);

        if (!stack.length && options.warn) {
          options.warn(`Mal-formatted tag at end of template: "${html}"`);
        }

        break;
      }
    } // Clean up any remaining tags


    parseEndTag();

    function advance(n) {
      index += n;
      html = html.substring(n);
    }

    function parseStartTag() {
      const start = html.match(startTagOpen);

      if (start) {
        const match = {
          tagName: start[1],
          attrs: [],
          start: index
        };
        advance(start[0].length);
        let end, attr;

        while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
          advance(attr[0].length);
          match.attrs.push(attr);
        }

        if (end) {
          match.unarySlash = end[1];
          advance(end[0].length);
          match.end = index;
          return match;
        }
      }
    }

    function handleStartTag(match) {
      const tagName = match.tagName;
      const unarySlash = match.unarySlash;

      if (expectHTML) {
        if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
          parseEndTag(lastTag);
        }

        if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
          parseEndTag(tagName);
        }
      }

      const unary = isUnaryTag$$1(tagName) || !!unarySlash;
      const l = match.attrs.length;
      const attrs = new Array(l);

      for (let i = 0; i < l; i++) {
        const args = match.attrs[i]; // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778

        if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
          if (args[3] === '') {
            delete args[3];
          }

          if (args[4] === '') {
            delete args[4];
          }

          if (args[5] === '') {
            delete args[5];
          }
        }

        const value = args[3] || args[4] || args[5] || '';
        const shouldDecodeNewlines = tagName === 'a' && args[1] === 'href' ? options.shouldDecodeNewlinesForHref : options.shouldDecodeNewlines;
        attrs[i] = {
          name: args[1],
          value: decodeAttr(value, shouldDecodeNewlines)
        };
      }

      if (!unary) {
        stack.push({
          tag: tagName,
          lowerCasedTag: tagName.toLowerCase(),
          attrs: attrs
        });
        lastTag = tagName;
      }

      if (options.start) {
        options.start(tagName, attrs, unary, match.start, match.end);
      }
    }

    function parseEndTag(tagName, start, end) {
      let pos, lowerCasedTagName;
      if (start == null) start = index;
      if (end == null) end = index;

      if (tagName) {
        lowerCasedTagName = tagName.toLowerCase();
      } // Find the closest opened tag of the same type


      if (tagName) {
        for (pos = stack.length - 1; pos >= 0; pos--) {
          if (stack[pos].lowerCasedTag === lowerCasedTagName) {
            break;
          }
        }
      } else {
        // If no tag name is provided, clean shop
        pos = 0;
      }

      if (pos >= 0) {
        // Close all the open elements, up the stack
        for (let i = stack.length - 1; i >= pos; i--) {
          if (i > pos || !tagName && options.warn) {
            options.warn(`tag <${stack[i].tag}> has no matching end tag.`);
          }

          if (options.end) {
            options.end(stack[i].tag, start, end);
          }
        } // Remove the open elements from the stack


        stack.length = pos;
        lastTag = pos && stack[pos - 1].tag;
      } else if (lowerCasedTagName === 'br') {
        if (options.start) {
          options.start(tagName, [], true, start, end);
        }
      } else if (lowerCasedTagName === 'p') {
        if (options.start) {
          options.start(tagName, [], false, start, end);
        }

        if (options.end) {
          options.end(tagName, start, end);
        }
      }
    }
  }
  /*  */


  const onRE = /^@|^v-on:/;
  const dirRE = /^v-|^@|^:/;
  const forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
  const forIteratorRE = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;
  const argRE = /:(.*)$/;
  const bindRE = /^:|^v-bind:/;
  const modifierRE = /\.[^.]+/g;
  const decodeHTMLCached = cached(he.decode); // configurable state

  let warn$2;
  let delimiters;
  let transforms;
  let preTransforms;
  let postTransforms;
  let platformIsPreTag;
  let platformMustUseProp;
  let platformGetTagNamespace;

  function createASTElement(tag, attrs, parent) {
    return {
      type: 1,
      tag,
      attrsList: attrs,
      attrsMap: makeAttrsMap(attrs),
      parent,
      children: []
    };
  }
  /**
   * Convert HTML string to AST.
   */


  function parse(template, options) {
    warn$2 = options.warn || baseWarn;
    platformIsPreTag = options.isPreTag || no;
    platformMustUseProp = options.mustUseProp || no;
    platformGetTagNamespace = options.getTagNamespace || no;
    transforms = pluckModuleFunction(options.modules, 'transformNode');
    preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
    postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');
    delimiters = options.delimiters;
    const stack = [];
    const preserveWhitespace = options.preserveWhitespace !== false;
    let root;
    let currentParent;
    let inVPre = false;
    let inPre = false;
    let warned = false;

    function warnOnce(msg) {
      if (!warned) {
        warned = true;
        warn$2(msg);
      }
    }

    function endPre(element) {
      // check pre state
      if (element.pre) {
        inVPre = false;
      }

      if (platformIsPreTag(element.tag)) {
        inPre = false;
      }
    }

    parseHTML(template, {
      warn: warn$2,
      expectHTML: options.expectHTML,
      isUnaryTag: options.isUnaryTag,
      canBeLeftOpenTag: options.canBeLeftOpenTag,
      shouldDecodeNewlines: options.shouldDecodeNewlines,
      shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
      shouldKeepComment: options.comments,

      start(tag, attrs, unary) {
        // check namespace.
        // inherit parent ns if there is one
        const ns = currentParent && currentParent.ns || platformGetTagNamespace(tag); // handle IE svg bug

        /* istanbul ignore if */

        if (isIE && ns === 'svg') {
          attrs = guardIESVGBug(attrs);
        }

        let element = createASTElement(tag, attrs, currentParent);

        if (ns) {
          element.ns = ns;
        }

        if (isForbiddenTag(element) && !isServerRendering()) {
          element.forbidden = true;
          warn$2('Templates should only be responsible for mapping the state to the ' + 'UI. Avoid placing tags with side-effects in your templates, such as ' + `<${tag}>` + ', as they will not be parsed.');
        } // apply pre-transforms


        for (let i = 0; i < preTransforms.length; i++) {
          element = preTransforms[i](element, options) || element;
        }

        if (!inVPre) {
          processPre(element);

          if (element.pre) {
            inVPre = true;
          }
        }

        if (platformIsPreTag(element.tag)) {
          inPre = true;
        }

        if (inVPre) {
          processRawAttrs(element);
        } else if (!element.processed) {
          // structural directives
          processFor(element);
          processIf(element);
          processOnce(element); // element-scope stuff

          processElement(element, options);
        }

        function checkRootConstraints(el) {
          {
            if (el.tag === 'slot' || el.tag === 'template') {
              warnOnce(`Cannot use <${el.tag}> as component root element because it may ` + 'contain multiple nodes.');
            }

            if (el.attrsMap.hasOwnProperty('v-for')) {
              warnOnce('Cannot use v-for on stateful component root element because ' + 'it renders multiple elements.');
            }
          }
        } // tree management


        if (!root) {
          root = element;
          checkRootConstraints(root);
        } else if (!stack.length) {
          // allow root elements with v-if, v-else-if and v-else
          if (root.if && (element.elseif || element.else)) {
            checkRootConstraints(element);
            addIfCondition(root, {
              exp: element.elseif,
              block: element
            });
          } else {
            warnOnce(`Component template should contain exactly one root element. ` + `If you are using v-if on multiple elements, ` + `use v-else-if to chain them instead.`);
          }
        }

        if (currentParent && !element.forbidden) {
          if (element.elseif || element.else) {
            processIfConditions(element, currentParent);
          } else if (element.slotScope) {
            // scoped slot
            currentParent.plain = false;
            const name = element.slotTarget || '"default"';
            (currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
          } else {
            currentParent.children.push(element);
            element.parent = currentParent;
          }
        }

        if (!unary) {
          currentParent = element;
          stack.push(element);
        } else {
          endPre(element);
        } // apply post-transforms


        for (let i = 0; i < postTransforms.length; i++) {
          postTransforms[i](element, options);
        }
      },

      end() {
        // remove trailing whitespace
        const element = stack[stack.length - 1];
        const lastNode = element.children[element.children.length - 1];

        if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
          element.children.pop();
        } // pop stack


        stack.length -= 1;
        currentParent = stack[stack.length - 1];
        endPre(element);
      },

      chars(text) {
        if (!currentParent) {
          {
            if (text === template) {
              warnOnce('Component template requires a root element, rather than just text.');
            } else if (text = text.trim()) {
              warnOnce(`text "${text}" outside root element will be ignored.`);
            }
          }
          return;
        } // IE textarea placeholder bug

        /* istanbul ignore if */


        if (isIE && currentParent.tag === 'textarea' && currentParent.attrsMap.placeholder === text) {
          return;
        }

        const children = currentParent.children;
        text = inPre || text.trim() ? isTextTag(currentParent) ? text : decodeHTMLCached(text) // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';

        if (text) {
          let expression;

          if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {
            children.push({
              type: 2,
              expression,
              text
            });
          } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
            children.push({
              type: 3,
              text
            });
          }
        }
      },

      comment(text) {
        currentParent.children.push({
          type: 3,
          text,
          isComment: true
        });
      }

    });
    return root;
  }

  function processPre(el) {
    if (getAndRemoveAttr(el, 'v-pre') != null) {
      el.pre = true;
    }
  }

  function processRawAttrs(el) {
    const l = el.attrsList.length;

    if (l) {
      const attrs = el.attrs = new Array(l);

      for (let i = 0; i < l; i++) {
        attrs[i] = {
          name: el.attrsList[i].name,
          value: JSON.stringify(el.attrsList[i].value)
        };
      }
    } else if (!el.pre) {
      // non root node in pre blocks with no attributes
      el.plain = true;
    }
  }

  function processElement(element, options) {
    processKey(element); // determine whether this is a plain element after
    // removing structural attributes

    element.plain = !element.key && !element.attrsList.length;
    processRef(element);
    processSlot(element);
    processComponent(element);

    for (let i = 0; i < transforms.length; i++) {
      element = transforms[i](element, options) || element;
    }

    processAttrs(element);
  }

  function processKey(el) {
    const exp = getBindingAttr(el, 'key');

    if (exp) {
      if (el.tag === 'template') {
        warn$2(`<template> cannot be keyed. Place the key on real elements instead.`);
      }

      el.key = exp;
    }
  }

  function processRef(el) {
    const ref = getBindingAttr(el, 'ref');

    if (ref) {
      el.ref = ref;
      el.refInFor = checkInFor(el);
    }
  }

  function processFor(el) {
    let exp;

    if (exp = getAndRemoveAttr(el, 'v-for')) {
      const inMatch = exp.match(forAliasRE);

      if (!inMatch) {
        warn$2(`Invalid v-for expression: ${exp}`);
        return;
      }

      el.for = inMatch[2].trim();
      const alias = inMatch[1].trim();
      const iteratorMatch = alias.match(forIteratorRE);

      if (iteratorMatch) {
        el.alias = iteratorMatch[1].trim();
        el.iterator1 = iteratorMatch[2].trim();

        if (iteratorMatch[3]) {
          el.iterator2 = iteratorMatch[3].trim();
        }
      } else {
        el.alias = alias;
      }
    }
  }

  function processIf(el) {
    const exp = getAndRemoveAttr(el, 'v-if');

    if (exp) {
      el.if = exp;
      addIfCondition(el, {
        exp: exp,
        block: el
      });
    } else {
      if (getAndRemoveAttr(el, 'v-else') != null) {
        el.else = true;
      }

      const elseif = getAndRemoveAttr(el, 'v-else-if');

      if (elseif) {
        el.elseif = elseif;
      }
    }
  }

  function processIfConditions(el, parent) {
    const prev = findPrevElement(parent.children);

    if (prev && prev.if) {
      addIfCondition(prev, {
        exp: el.elseif,
        block: el
      });
    } else {
      warn$2(`v-${el.elseif ? 'else-if="' + el.elseif + '"' : 'else'} ` + `used on element <${el.tag}> without corresponding v-if.`);
    }
  }

  function findPrevElement(children) {
    let i = children.length;

    while (i--) {
      if (children[i].type === 1) {
        return children[i];
      } else {
        if (children[i].text !== ' ') {
          warn$2(`text "${children[i].text.trim()}" between v-if and v-else(-if) ` + `will be ignored.`);
        }

        children.pop();
      }
    }
  }

  function addIfCondition(el, condition) {
    if (!el.ifConditions) {
      el.ifConditions = [];
    }

    el.ifConditions.push(condition);
  }

  function processOnce(el) {
    const once$$1 = getAndRemoveAttr(el, 'v-once');

    if (once$$1 != null) {
      el.once = true;
    }
  }

  function processSlot(el) {
    if (el.tag === 'slot') {
      el.slotName = getBindingAttr(el, 'name');

      if (el.key) {
        warn$2(`\`key\` does not work on <slot> because slots are abstract outlets ` + `and can possibly expand into multiple elements. ` + `Use the key on a wrapping element instead.`);
      }
    } else {
      let slotScope;

      if (el.tag === 'template') {
        slotScope = getAndRemoveAttr(el, 'scope');
        /* istanbul ignore if */

        if (slotScope) {
          warn$2(`the "scope" attribute for scoped slots have been deprecated and ` + `replaced by "slot-scope" since 2.5. The new "slot-scope" attribute ` + `can also be used on plain elements in addition to <template> to ` + `denote scoped slots.`, true);
        }

        el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
      } else if (slotScope = getAndRemoveAttr(el, 'slot-scope')) {
        /* istanbul ignore if */
        if (el.attrsMap['v-for']) {
          warn$2(`Ambiguous combined usage of slot-scope and v-for on <${el.tag}> ` + `(v-for takes higher priority). Use a wrapper <template> for the ` + `scoped slot to make it clearer.`, true);
        }

        el.slotScope = slotScope;
      }

      const slotTarget = getBindingAttr(el, 'slot');

      if (slotTarget) {
        el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget; // preserve slot as an attribute for native shadow DOM compat
        // only for non-scoped slots.

        if (el.tag !== 'template' && !el.slotScope) {
          addAttr(el, 'slot', slotTarget);
        }
      }
    }
  }

  function processComponent(el) {
    let binding;

    if (binding = getBindingAttr(el, 'is')) {
      el.component = binding;
    }

    if (getAndRemoveAttr(el, 'inline-template') != null) {
      el.inlineTemplate = true;
    }
  }

  function processAttrs(el) {
    const list = el.attrsList;
    let i, l, name, rawName, value, modifiers, isProp;

    for (i = 0, l = list.length; i < l; i++) {
      name = rawName = list[i].name;
      value = list[i].value;

      if (dirRE.test(name)) {
        // mark element as dynamic
        el.hasBindings = true; // modifiers

        modifiers = parseModifiers(name);

        if (modifiers) {
          name = name.replace(modifierRE, '');
        }

        if (bindRE.test(name)) {
          // v-bind
          name = name.replace(bindRE, '');
          value = parseFilters(value);
          isProp = false;

          if (modifiers) {
            if (modifiers.prop) {
              isProp = true;
              name = camelize(name);
              if (name === 'innerHtml') name = 'innerHTML';
            }

            if (modifiers.camel) {
              name = camelize(name);
            }

            if (modifiers.sync) {
              addHandler(el, `update:${camelize(name)}`, genAssignmentCode(value, `$event`));
            }
          }

          if (isProp || !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)) {
            addProp(el, name, value);
          } else {
            addAttr(el, name, value);
          }
        } else if (onRE.test(name)) {
          // v-on
          name = name.replace(onRE, '');
          addHandler(el, name, value, modifiers, false, warn$2);
        } else {
          // normal directives
          name = name.replace(dirRE, ''); // parse arg

          const argMatch = name.match(argRE);
          const arg = argMatch && argMatch[1];

          if (arg) {
            name = name.slice(0, -(arg.length + 1));
          }

          addDirective(el, name, rawName, value, arg, modifiers);

          if (name === 'model') {
            checkForAliasModel(el, value);
          }
        }
      } else {
        // literal attribute
        {
          const expression = parseText(value, delimiters);

          if (expression) {
            warn$2(`${name}="${value}": ` + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div id="{{ val }}">, use <div :id="val">.');
          }
        }
        addAttr(el, name, JSON.stringify(value)); // #6887 firefox doesn't update muted state if set via attribute
        // even immediately after element creation

        if (!el.component && name === 'muted' && platformMustUseProp(el.tag, el.attrsMap.type, name)) {
          addProp(el, name, 'true');
        }
      }
    }
  }

  function checkInFor(el) {
    let parent = el;

    while (parent) {
      if (parent.for !== undefined) {
        return true;
      }

      parent = parent.parent;
    }

    return false;
  }

  function parseModifiers(name) {
    const match = name.match(modifierRE);

    if (match) {
      const ret = {};
      match.forEach(m => {
        ret[m.slice(1)] = true;
      });
      return ret;
    }
  }

  function makeAttrsMap(attrs) {
    const map = {};

    for (let i = 0, l = attrs.length; i < l; i++) {
      if (map[attrs[i].name] && !isIE && !isEdge) {
        warn$2('duplicate attribute: ' + attrs[i].name);
      }

      map[attrs[i].name] = attrs[i].value;
    }

    return map;
  } // for script (e.g. type="x/template") or style, do not decode content


  function isTextTag(el) {
    return el.tag === 'script' || el.tag === 'style';
  }

  function isForbiddenTag(el) {
    return el.tag === 'style' || el.tag === 'script' && (!el.attrsMap.type || el.attrsMap.type === 'text/javascript');
  }

  const ieNSBug = /^xmlns:NS\d+/;
  const ieNSPrefix = /^NS\d+:/;
  /* istanbul ignore next */

  function guardIESVGBug(attrs) {
    const res = [];

    for (let i = 0; i < attrs.length; i++) {
      const attr = attrs[i];

      if (!ieNSBug.test(attr.name)) {
        attr.name = attr.name.replace(ieNSPrefix, '');
        res.push(attr);
      }
    }

    return res;
  }

  function checkForAliasModel(el, value) {
    let _el = el;

    while (_el) {
      if (_el.for && _el.alias === value) {
        warn$2(`<${el.tag} v-model="${value}">: ` + `You are binding v-model directly to a v-for iteration alias. ` + `This will not be able to modify the v-for source array because ` + `writing to the alias is like modifying a function local variable. ` + `Consider using an array of objects and use v-model on an object property instead.`);
      }

      _el = _el.parent;
    }
  }
  /*  */

  /**
   * Expand input[v-model] with dyanmic type bindings into v-if-else chains
   * Turn this:
   *   <input v-model="data[type]" :type="type">
   * into this:
   *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
   *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
   *   <input v-else :type="type" v-model="data[type]">
   */


  function preTransformNode(el, options) {
    if (el.tag === 'input') {
      const map = el.attrsMap;

      if (map['v-model'] && (map['v-bind:type'] || map[':type'])) {
        const typeBinding = getBindingAttr(el, 'type');
        const ifCondition = getAndRemoveAttr(el, 'v-if', true);
        const ifConditionExtra = ifCondition ? `&&(${ifCondition})` : ``;
        const hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
        const elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true); // 1. checkbox

        const branch0 = cloneASTElement(el); // process for on the main node

        processFor(branch0);
        addRawAttr(branch0, 'type', 'checkbox');
        processElement(branch0, options);
        branch0.processed = true; // prevent it from double-processed

        branch0.if = `(${typeBinding})==='checkbox'` + ifConditionExtra;
        addIfCondition(branch0, {
          exp: branch0.if,
          block: branch0
        }); // 2. add radio else-if condition

        const branch1 = cloneASTElement(el);
        getAndRemoveAttr(branch1, 'v-for', true);
        addRawAttr(branch1, 'type', 'radio');
        processElement(branch1, options);
        addIfCondition(branch0, {
          exp: `(${typeBinding})==='radio'` + ifConditionExtra,
          block: branch1
        }); // 3. other

        const branch2 = cloneASTElement(el);
        getAndRemoveAttr(branch2, 'v-for', true);
        addRawAttr(branch2, ':type', typeBinding);
        processElement(branch2, options);
        addIfCondition(branch0, {
          exp: ifCondition,
          block: branch2
        });

        if (hasElse) {
          branch0.else = true;
        } else if (elseIfCondition) {
          branch0.elseif = elseIfCondition;
        }

        return branch0;
      }
    }
  }

  function cloneASTElement(el) {
    return createASTElement(el.tag, el.attrsList.slice(), el.parent);
  }

  function addRawAttr(el, name, value) {
    el.attrsMap[name] = value;
    el.attrsList.push({
      name,
      value
    });
  }

  var model$2 = {
    preTransformNode
  };
  var modules$1 = [klass$1, style$1, model$2];
  /*  */

  function text(el, dir) {
    if (dir.value) {
      addProp(el, 'textContent', `_s(${dir.value})`);
    }
  }
  /*  */


  function html(el, dir) {
    if (dir.value) {
      addProp(el, 'innerHTML', `_s(${dir.value})`);
    }
  }

  var directives$1 = {
    model,
    text,
    html
  };
  /*  */

  const baseOptions = {
    expectHTML: true,
    modules: modules$1,
    directives: directives$1,
    isPreTag,
    isUnaryTag,
    mustUseProp,
    canBeLeftOpenTag,
    isReservedTag,
    getTagNamespace,
    staticKeys: genStaticKeys(modules$1)
  };
  /*  */

  let isStaticKey;
  let isPlatformReservedTag;
  const genStaticKeysCached = cached(genStaticKeys$1);
  /**
   * Goal of the optimizer: walk the generated template AST tree
   * and detect sub-trees that are purely static, i.e. parts of
   * the DOM that never needs to change.
   *
   * Once we detect these sub-trees, we can:
   *
   * 1. Hoist them into constants, so that we no longer need to
   *    create fresh nodes for them on each re-render;
   * 2. Completely skip them in the patching process.
   */

  function optimize(root, options) {
    if (!root) return;
    isStaticKey = genStaticKeysCached(options.staticKeys || '');
    isPlatformReservedTag = options.isReservedTag || no; // first pass: mark all non-static nodes.

    markStatic$1(root); // second pass: mark static roots.

    markStaticRoots(root, false);
  }

  function genStaticKeys$1(keys) {
    return makeMap('type,tag,attrsList,attrsMap,plain,parent,children,attrs' + (keys ? ',' + keys : ''));
  }

  function markStatic$1(node) {
    node.static = isStatic(node);

    if (node.type === 1) {
      // do not make component slot content static. this avoids
      // 1. components not able to mutate slot nodes
      // 2. static slot content fails for hot-reloading
      if (!isPlatformReservedTag(node.tag) && node.tag !== 'slot' && node.attrsMap['inline-template'] == null) {
        return;
      }

      for (let i = 0, l = node.children.length; i < l; i++) {
        const child = node.children[i];
        markStatic$1(child);

        if (!child.static) {
          node.static = false;
        }
      }

      if (node.ifConditions) {
        for (let i = 1, l = node.ifConditions.length; i < l; i++) {
          const block = node.ifConditions[i].block;
          markStatic$1(block);

          if (!block.static) {
            node.static = false;
          }
        }
      }
    }
  }

  function markStaticRoots(node, isInFor) {
    if (node.type === 1) {
      if (node.static || node.once) {
        node.staticInFor = isInFor;
      } // For a node to qualify as a static root, it should have children that
      // are not just static text. Otherwise the cost of hoisting out will
      // outweigh the benefits and it's better off to just always render it fresh.


      if (node.static && node.children.length && !(node.children.length === 1 && node.children[0].type === 3)) {
        node.staticRoot = true;
        return;
      } else {
        node.staticRoot = false;
      }

      if (node.children) {
        for (let i = 0, l = node.children.length; i < l; i++) {
          markStaticRoots(node.children[i], isInFor || !!node.for);
        }
      }

      if (node.ifConditions) {
        for (let i = 1, l = node.ifConditions.length; i < l; i++) {
          markStaticRoots(node.ifConditions[i].block, isInFor);
        }
      }
    }
  }

  function isStatic(node) {
    if (node.type === 2) {
      // expression
      return false;
    }

    if (node.type === 3) {
      // text
      return true;
    }

    return !!(node.pre || !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) && Object.keys(node).every(isStaticKey));
  }

  function isDirectChildOfTemplateFor(node) {
    while (node.parent) {
      node = node.parent;

      if (node.tag !== 'template') {
        return false;
      }

      if (node.for) {
        return true;
      }
    }

    return false;
  }
  /*  */


  const fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
  const simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/; // keyCode aliases

  const keyCodes = {
    esc: 27,
    tab: 9,
    enter: 13,
    space: 32,
    up: 38,
    left: 37,
    right: 39,
    down: 40,
    'delete': [8, 46]
  }; // #4868: modifiers that prevent the execution of the listener
  // need to explicitly return null so that we can determine whether to remove
  // the listener for .once

  const genGuard = condition => `if(${condition})return null;`;

  const modifierCode = {
    stop: '$event.stopPropagation();',
    prevent: '$event.preventDefault();',
    self: genGuard(`$event.target !== $event.currentTarget`),
    ctrl: genGuard(`!$event.ctrlKey`),
    shift: genGuard(`!$event.shiftKey`),
    alt: genGuard(`!$event.altKey`),
    meta: genGuard(`!$event.metaKey`),
    left: genGuard(`'button' in $event && $event.button !== 0`),
    middle: genGuard(`'button' in $event && $event.button !== 1`),
    right: genGuard(`'button' in $event && $event.button !== 2`)
  };

  function genHandlers(events, isNative, warn) {
    let res = isNative ? 'nativeOn:{' : 'on:{';

    for (const name in events) {
      res += `"${name}":${genHandler(name, events[name])},`;
    }

    return res.slice(0, -1) + '}';
  }

  function genHandler(name, handler) {
    if (!handler) {
      return 'function(){}';
    }

    if (Array.isArray(handler)) {
      return `[${handler.map(handler => genHandler(name, handler)).join(',')}]`;
    }

    const isMethodPath = simplePathRE.test(handler.value);
    const isFunctionExpression = fnExpRE.test(handler.value);

    if (!handler.modifiers) {
      return isMethodPath || isFunctionExpression ? handler.value : `function($event){${handler.value}}`; // inline statement
    } else {
      let code = '';
      let genModifierCode = '';
      const keys = [];

      for (const key in handler.modifiers) {
        if (modifierCode[key]) {
          genModifierCode += modifierCode[key]; // left/right

          if (keyCodes[key]) {
            keys.push(key);
          }
        } else if (key === 'exact') {
          const modifiers = handler.modifiers;
          genModifierCode += genGuard(['ctrl', 'shift', 'alt', 'meta'].filter(keyModifier => !modifiers[keyModifier]).map(keyModifier => `$event.${keyModifier}Key`).join('||'));
        } else {
          keys.push(key);
        }
      }

      if (keys.length) {
        code += genKeyFilter(keys);
      } // Make sure modifiers like prevent and stop get executed after key filtering


      if (genModifierCode) {
        code += genModifierCode;
      }

      const handlerCode = isMethodPath ? handler.value + '($event)' : isFunctionExpression ? `(${handler.value})($event)` : handler.value;
      return `function($event){${code}${handlerCode}}`;
    }
  }

  function genKeyFilter(keys) {
    return `if(!('button' in $event)&&${keys.map(genFilterCode).join('&&')})return null;`;
  }

  function genFilterCode(key) {
    const keyVal = parseInt(key, 10);

    if (keyVal) {
      return `$event.keyCode!==${keyVal}`;
    }

    const code = keyCodes[key];
    return `_k($event.keyCode,` + `${JSON.stringify(key)},` + `${JSON.stringify(code)},` + `$event.key)`;
  }
  /*  */


  function on(el, dir) {
    if (dir.modifiers) {
      warn(`v-on without argument does not support modifiers.`);
    }

    el.wrapListeners = code => `_g(${code},${dir.value})`;
  }
  /*  */


  function bind$1(el, dir) {
    el.wrapData = code => {
      return `_b(${code},'${el.tag}',${dir.value},${dir.modifiers && dir.modifiers.prop ? 'true' : 'false'}${dir.modifiers && dir.modifiers.sync ? ',true' : ''})`;
    };
  }
  /*  */


  var baseDirectives = {
    on,
    bind: bind$1,
    cloak: noop
  };
  /*  */

  class CodegenState {
    constructor(options) {
      this.options = options;
      this.warn = options.warn || baseWarn;
      this.transforms = pluckModuleFunction(options.modules, 'transformCode');
      this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
      this.directives = extend(extend({}, baseDirectives), options.directives);
      const isReservedTag = options.isReservedTag || no;

      this.maybeComponent = el => !isReservedTag(el.tag);

      this.onceId = 0;
      this.staticRenderFns = [];
    }

  }

  function generate(ast, options) {
    const state = new CodegenState(options);
    const code = ast ? genElement(ast, state) : '_c("div")';
    return {
      render: `with(this){return ${code}}`,
      staticRenderFns: state.staticRenderFns
    };
  }

  function genElement(el, state) {
    if (el.staticRoot && !el.staticProcessed) {
      return genStatic(el, state);
    } else if (el.once && !el.onceProcessed) {
      return genOnce(el, state);
    } else if (el.for && !el.forProcessed) {
      return genFor(el, state);
    } else if (el.if && !el.ifProcessed) {
      return genIf(el, state);
    } else if (el.tag === 'template' && !el.slotTarget) {
      return genChildren(el, state) || 'void 0';
    } else if (el.tag === 'slot') {
      return genSlot(el, state);
    } else {
      // component or element
      let code;

      if (el.component) {
        code = genComponent(el.component, el, state);
      } else {
        const data = el.plain ? undefined : genData$2(el, state);
        const children = el.inlineTemplate ? null : genChildren(el, state, true);
        code = `_c('${el.tag}'${data ? `,${data}` : '' // data
      }${children ? `,${children}` : '' // children
      })`;
      } // module transforms


      for (let i = 0; i < state.transforms.length; i++) {
        code = state.transforms[i](el, code);
      }

      return code;
    }
  } // hoist static sub-trees out


  function genStatic(el, state, once$$1) {
    el.staticProcessed = true;
    state.staticRenderFns.push(`with(this){return ${genElement(el, state)}}`);
    return `_m(${state.staticRenderFns.length - 1},${el.staticInFor ? 'true' : 'false'},${once$$1 ? 'true' : 'false'})`;
  } // v-once


  function genOnce(el, state) {
    el.onceProcessed = true;

    if (el.if && !el.ifProcessed) {
      return genIf(el, state);
    } else if (el.staticInFor) {
      let key = '';
      let parent = el.parent;

      while (parent) {
        if (parent.for) {
          key = parent.key;
          break;
        }

        parent = parent.parent;
      }

      if (!key) {
        state.warn(`v-once can only be used inside v-for that is keyed. `);
        return genElement(el, state);
      }

      return `_o(${genElement(el, state)},${state.onceId++},${key})`;
    } else {
      return genStatic(el, state, true);
    }
  }

  function genIf(el, state, altGen, altEmpty) {
    el.ifProcessed = true; // avoid recursion

    return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty);
  }

  function genIfConditions(conditions, state, altGen, altEmpty) {
    if (!conditions.length) {
      return altEmpty || '_e()';
    }

    const condition = conditions.shift();

    if (condition.exp) {
      return `(${condition.exp})?${genTernaryExp(condition.block)}:${genIfConditions(conditions, state, altGen, altEmpty)}`;
    } else {
      return `${genTernaryExp(condition.block)}`;
    } // v-if with v-once should generate code like (a)?_m(0):_m(1)


    function genTernaryExp(el) {
      return altGen ? altGen(el, state) : el.once ? genOnce(el, state) : genElement(el, state);
    }
  }

  function genFor(el, state, altGen, altHelper) {
    const exp = el.for;
    const alias = el.alias;
    const iterator1 = el.iterator1 ? `,${el.iterator1}` : '';
    const iterator2 = el.iterator2 ? `,${el.iterator2}` : '';

    if (state.maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key) {
      state.warn(`<${el.tag} v-for="${alias} in ${exp}">: component lists rendered with ` + `v-for should have explicit keys. ` + `See https://vuejs.org/guide/list.html#key for more info.`, true
      /* tip */
      );
    }

    el.forProcessed = true; // avoid recursion

    return `${altHelper || '_l'}((${exp}),` + `function(${alias}${iterator1}${iterator2}){` + `return ${(altGen || genElement)(el, state)}` + '})';
  }

  function genData$2(el, state) {
    let data = '{'; // directives first.
    // directives may mutate the el's other properties before they are generated.

    const dirs = genDirectives(el, state);
    if (dirs) data += dirs + ','; // key

    if (el.key) {
      data += `key:${el.key},`;
    } // ref


    if (el.ref) {
      data += `ref:${el.ref},`;
    }

    if (el.refInFor) {
      data += `refInFor:true,`;
    } // pre


    if (el.pre) {
      data += `pre:true,`;
    } // record original tag name for components using "is" attribute


    if (el.component) {
      data += `tag:"${el.tag}",`;
    } // module data generation functions


    for (let i = 0; i < state.dataGenFns.length; i++) {
      data += state.dataGenFns[i](el);
    } // attributes


    if (el.attrs) {
      data += `attrs:{${genProps(el.attrs)}},`;
    } // DOM props


    if (el.props) {
      data += `domProps:{${genProps(el.props)}},`;
    } // event handlers


    if (el.events) {
      data += `${genHandlers(el.events, false, state.warn)},`;
    }

    if (el.nativeEvents) {
      data += `${genHandlers(el.nativeEvents, true, state.warn)},`;
    } // slot target
    // only for non-scoped slots


    if (el.slotTarget && !el.slotScope) {
      data += `slot:${el.slotTarget},`;
    } // scoped slots


    if (el.scopedSlots) {
      data += `${genScopedSlots(el.scopedSlots, state)},`;
    } // component v-model


    if (el.model) {
      data += `model:{value:${el.model.value},callback:${el.model.callback},expression:${el.model.expression}},`;
    } // inline-template


    if (el.inlineTemplate) {
      const inlineTemplate = genInlineTemplate(el, state);

      if (inlineTemplate) {
        data += `${inlineTemplate},`;
      }
    }

    data = data.replace(/,$/, '') + '}'; // v-bind data wrap

    if (el.wrapData) {
      data = el.wrapData(data);
    } // v-on data wrap


    if (el.wrapListeners) {
      data = el.wrapListeners(data);
    }

    return data;
  }

  function genDirectives(el, state) {
    const dirs = el.directives;
    if (!dirs) return;
    let res = 'directives:[';
    let hasRuntime = false;
    let i, l, dir, needRuntime;

    for (i = 0, l = dirs.length; i < l; i++) {
      dir = dirs[i];
      needRuntime = true;
      const gen = state.directives[dir.name];

      if (gen) {
        // compile-time directive that manipulates AST.
        // returns true if it also needs a runtime counterpart.
        needRuntime = !!gen(el, dir, state.warn);
      }

      if (needRuntime) {
        hasRuntime = true;
        res += `{name:"${dir.name}",rawName:"${dir.rawName}"${dir.value ? `,value:(${dir.value}),expression:${JSON.stringify(dir.value)}` : ''}${dir.arg ? `,arg:"${dir.arg}"` : ''}${dir.modifiers ? `,modifiers:${JSON.stringify(dir.modifiers)}` : ''}},`;
      }
    }

    if (hasRuntime) {
      return res.slice(0, -1) + ']';
    }
  }

  function genInlineTemplate(el, state) {
    const ast = el.children[0];

    if (el.children.length !== 1 || ast.type !== 1) {
      state.warn('Inline-template components must have exactly one child element.');
    }

    if (ast.type === 1) {
      const inlineRenderFns = generate(ast, state.options);
      return `inlineTemplate:{render:function(){${inlineRenderFns.render}},staticRenderFns:[${inlineRenderFns.staticRenderFns.map(code => `function(){${code}}`).join(',')}]}`;
    }
  }

  function genScopedSlots(slots, state) {
    return `scopedSlots:_u([${Object.keys(slots).map(key => {
    return genScopedSlot(key, slots[key], state);
  }).join(',')}])`;
  }

  function genScopedSlot(key, el, state) {
    if (el.for && !el.forProcessed) {
      return genForScopedSlot(key, el, state);
    }

    const fn = `function(${String(el.slotScope)}){` + `return ${el.tag === 'template' ? el.if ? `${el.if}?${genChildren(el, state) || 'undefined'}:undefined` : genChildren(el, state) || 'undefined' : genElement(el, state)}}`;
    return `{key:${key},fn:${fn}}`;
  }

  function genForScopedSlot(key, el, state) {
    const exp = el.for;
    const alias = el.alias;
    const iterator1 = el.iterator1 ? `,${el.iterator1}` : '';
    const iterator2 = el.iterator2 ? `,${el.iterator2}` : '';
    el.forProcessed = true; // avoid recursion

    return `_l((${exp}),` + `function(${alias}${iterator1}${iterator2}){` + `return ${genScopedSlot(key, el, state)}` + '})';
  }

  function genChildren(el, state, checkSkip, altGenElement, altGenNode) {
    const children = el.children;

    if (children.length) {
      const el = children[0]; // optimize single v-for

      if (children.length === 1 && el.for && el.tag !== 'template' && el.tag !== 'slot') {
        return (altGenElement || genElement)(el, state);
      }

      const normalizationType = checkSkip ? getNormalizationType(children, state.maybeComponent) : 0;
      const gen = altGenNode || genNode;
      return `[${children.map(c => gen(c, state)).join(',')}]${normalizationType ? `,${normalizationType}` : ''}`;
    }
  } // determine the normalization needed for the children array.
  // 0: no normalization needed
  // 1: simple normalization needed (possible 1-level deep nested array)
  // 2: full normalization needed


  function getNormalizationType(children, maybeComponent) {
    let res = 0;

    for (let i = 0; i < children.length; i++) {
      const el = children[i];

      if (el.type !== 1) {
        continue;
      }

      if (needsNormalization(el) || el.ifConditions && el.ifConditions.some(c => needsNormalization(c.block))) {
        res = 2;
        break;
      }

      if (maybeComponent(el) || el.ifConditions && el.ifConditions.some(c => maybeComponent(c.block))) {
        res = 1;
      }
    }

    return res;
  }

  function needsNormalization(el) {
    return el.for !== undefined || el.tag === 'template' || el.tag === 'slot';
  }

  function genNode(node, state) {
    if (node.type === 1) {
      return genElement(node, state);
    }

    if (node.type === 3 && node.isComment) {
      return genComment(node);
    } else {
      return genText(node);
    }
  }

  function genText(text) {
    return `_v(${text.type === 2 ? text.expression // no need for () because already wrapped in _s()
  : transformSpecialNewlines(JSON.stringify(text.text))})`;
  }

  function genComment(comment) {
    return `_e(${JSON.stringify(comment.text)})`;
  }

  function genSlot(el, state) {
    const slotName = el.slotName || '"default"';
    const children = genChildren(el, state);
    let res = `_t(${slotName}${children ? `,${children}` : ''}`;
    const attrs = el.attrs && `{${el.attrs.map(a => `${camelize(a.name)}:${a.value}`).join(',')}}`;
    const bind$$1 = el.attrsMap['v-bind'];

    if ((attrs || bind$$1) && !children) {
      res += `,null`;
    }

    if (attrs) {
      res += `,${attrs}`;
    }

    if (bind$$1) {
      res += `${attrs ? '' : ',null'},${bind$$1}`;
    }

    return res + ')';
  } // componentName is el.component, take it as argument to shun flow's pessimistic refinement


  function genComponent(componentName, el, state) {
    const children = el.inlineTemplate ? null : genChildren(el, state, true);
    return `_c(${componentName},${genData$2(el, state)}${children ? `,${children}` : ''})`;
  }

  function genProps(props) {
    let res = '';

    for (let i = 0; i < props.length; i++) {
      const prop = props[i];
      res += `"${prop.name}":${transformSpecialNewlines(prop.value)},`;
    }

    return res.slice(0, -1);
  } // #3895, #4268


  function transformSpecialNewlines(text) {
    return text.replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029');
  }
  /*  */
  // these keywords should not appear inside expressions, but operators like
  // typeof, instanceof and in are allowed


  const prohibitedKeywordRE = new RegExp('\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments').split(',').join('\\b|\\b') + '\\b'); // these unary operators should not be used as property/method names

  const unaryOperatorsRE = new RegExp('\\b' + 'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)'); // strip strings in expressions

  const stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g; // detect problematic expressions in a template

  function detectErrors(ast) {
    const errors = [];

    if (ast) {
      checkNode(ast, errors);
    }

    return errors;
  }

  function checkNode(node, errors) {
    if (node.type === 1) {
      for (const name in node.attrsMap) {
        if (dirRE.test(name)) {
          const value = node.attrsMap[name];

          if (value) {
            if (name === 'v-for') {
              checkFor(node, `v-for="${value}"`, errors);
            } else if (onRE.test(name)) {
              checkEvent(value, `${name}="${value}"`, errors);
            } else {
              checkExpression(value, `${name}="${value}"`, errors);
            }
          }
        }
      }

      if (node.children) {
        for (let i = 0; i < node.children.length; i++) {
          checkNode(node.children[i], errors);
        }
      }
    } else if (node.type === 2) {
      checkExpression(node.expression, node.text, errors);
    }
  }

  function checkEvent(exp, text, errors) {
    const stipped = exp.replace(stripStringRE, '');
    const keywordMatch = stipped.match(unaryOperatorsRE);

    if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
      errors.push(`avoid using JavaScript unary operator as property name: ` + `"${keywordMatch[0]}" in expression ${text.trim()}`);
    }

    checkExpression(exp, text, errors);
  }

  function checkFor(node, text, errors) {
    checkExpression(node.for || '', text, errors);
    checkIdentifier(node.alias, 'v-for alias', text, errors);
    checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
    checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
  }

  function checkIdentifier(ident, type, text, errors) {
    if (typeof ident === 'string') {
      try {
        new Function(`var ${ident}=_`);
      } catch (e) {
        errors.push(`invalid ${type} "${ident}" in expression: ${text.trim()}`);
      }
    }
  }

  function checkExpression(exp, text, errors) {
    try {
      new Function(`return ${exp}`);
    } catch (e) {
      const keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);

      if (keywordMatch) {
        errors.push(`avoid using JavaScript keyword as property name: ` + `"${keywordMatch[0]}"\n  Raw expression: ${text.trim()}`);
      } else {
        errors.push(`invalid expression: ${e.message} in\n\n` + `    ${exp}\n\n` + `  Raw expression: ${text.trim()}\n`);
      }
    }
  }
  /*  */


  function createFunction(code, errors) {
    try {
      return new Function(code);
    } catch (err) {
      errors.push({
        err,
        code
      });
      return noop;
    }
  }

  function createCompileToFunctionFn(compile) {
    const cache = Object.create(null);
    return function compileToFunctions(template, options, vm) {
      options = extend({}, options);
      const warn$$1 = options.warn || warn;
      delete options.warn;
      /* istanbul ignore if */

      {
        // detect possible CSP restriction
        try {
          new Function('return 1');
        } catch (e) {
          if (e.toString().match(/unsafe-eval|CSP/)) {
            warn$$1('It seems you are using the standalone build of Vue.js in an ' + 'environment with Content Security Policy that prohibits unsafe-eval. ' + 'The template compiler cannot work in this environment. Consider ' + 'relaxing the policy to allow unsafe-eval or pre-compiling your ' + 'templates into render functions.');
          }
        }
      } // check cache

      const key = options.delimiters ? String(options.delimiters) + template : template;

      if (cache[key]) {
        return cache[key];
      } // compile


      const compiled = compile(template, options); // check compilation errors/tips

      {
        if (compiled.errors && compiled.errors.length) {
          warn$$1(`Error compiling template:\n\n${template}\n\n` + compiled.errors.map(e => `- ${e}`).join('\n') + '\n', vm);
        }

        if (compiled.tips && compiled.tips.length) {
          compiled.tips.forEach(msg => tip(msg, vm));
        }
      } // turn code into functions

      const res = {};
      const fnGenErrors = [];
      res.render = createFunction(compiled.render, fnGenErrors);
      res.staticRenderFns = compiled.staticRenderFns.map(code => {
        return createFunction(code, fnGenErrors);
      }); // check function generation errors.
      // this should only happen if there is a bug in the compiler itself.
      // mostly for codegen development use

      /* istanbul ignore if */

      {
        if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
          warn$$1(`Failed to generate render function:\n\n` + fnGenErrors.map(({
            err,
            code
          }) => `${err.toString()} in\n\n${code}\n`).join('\n'), vm);
        }
      }
      return cache[key] = res;
    };
  }
  /*  */


  function createCompilerCreator(baseCompile) {
    return function createCompiler(baseOptions) {
      function compile(template, options) {
        const finalOptions = Object.create(baseOptions);
        const errors = [];
        const tips = [];

        finalOptions.warn = (msg, tip) => {
          (tip ? tips : errors).push(msg);
        };

        if (options) {
          // merge custom modules
          if (options.modules) {
            finalOptions.modules = (baseOptions.modules || []).concat(options.modules);
          } // merge custom directives


          if (options.directives) {
            finalOptions.directives = extend(Object.create(baseOptions.directives), options.directives);
          } // copy other options


          for (const key in options) {
            if (key !== 'modules' && key !== 'directives') {
              finalOptions[key] = options[key];
            }
          }
        }

        const compiled = baseCompile(template, finalOptions);
        {
          errors.push.apply(errors, detectErrors(compiled.ast));
        }
        compiled.errors = errors;
        compiled.tips = tips;
        return compiled;
      }

      return {
        compile,
        compileToFunctions: createCompileToFunctionFn(compile)
      };
    };
  }
  /*  */
  // `createCompilerCreator` allows creating compilers that use alternative
  // parser/optimizer/codegen, e.g the SSR optimizing compiler.
  // Here we just export a default compiler using the default parts.


  const createCompiler = createCompilerCreator(function baseCompile(template, options) {
    const ast = parse(template.trim(), options);
    optimize(ast, options);
    const code = generate(ast, options);
    return {
      ast,
      render: code.render,
      staticRenderFns: code.staticRenderFns
    };
  });
  /*  */

  const {
    compile,
    compileToFunctions
  } = createCompiler(baseOptions);
  /*  */
  // check whether current browser encodes a char inside attribute values

  let div;

  function getShouldDecode(href) {
    div = div || document.createElement('div');
    div.innerHTML = href ? `<a href="\n"/>` : `<div a="\n"/>`;
    return div.innerHTML.indexOf('&#10;') > 0;
  } // #3663: IE encodes newlines inside attribute values while other browsers don't


  const shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false; // #6828: chrome encodes content in a[href]

  const shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;
  /*  */

  const idToTemplate = cached(id => {
    const el = query(id);
    return el && el.innerHTML;
  });
  const mount = Vue$3.prototype.$mount;

  Vue$3.prototype.$mount = function (el, hydrating) {
    el = el && query(el);
    /* istanbul ignore if */

    if (el === document.body || el === document.documentElement) {
      warn(`Do not mount Vue to <html> or <body> - mount to normal elements instead.`);
      return this;
    }

    const options = this.$options; // resolve template/el and convert to render function

    if (!options.render) {
      let template = options.template;

      if (template) {
        if (typeof template === 'string') {
          if (template.charAt(0) === '#') {
            template = idToTemplate(template);
            /* istanbul ignore if */

            if (!template) {
              warn(`Template element not found or is empty: ${options.template}`, this);
            }
          }
        } else if (template.nodeType) {
          template = template.innerHTML;
        } else {
          {
            warn('invalid template option:' + template, this);
          }
          return this;
        }
      } else if (el) {
        template = getOuterHTML(el);
      }

      if (template) {
        /* istanbul ignore if */
        if (config.performance && mark) {
          mark('compile');
        }

        const {
          render,
          staticRenderFns
        } = compileToFunctions(template, {
          shouldDecodeNewlines,
          shouldDecodeNewlinesForHref,
          delimiters: options.delimiters,
          comments: options.comments
        }, this);
        options.render = render;
        options.staticRenderFns = staticRenderFns;
        /* istanbul ignore if */

        if (config.performance && mark) {
          mark('compile end');
          measure(`vue ${this._name} compile`, 'compile', 'compile end');
        }
      }
    }

    return mount.call(this, el, hydrating);
  };
  /**
   * Get outerHTML of elements, taking care
   * of SVG elements in IE as well.
   */


  function getOuterHTML(el) {
    if (el.outerHTML) {
      return el.outerHTML;
    } else {
      const container = document.createElement('div');
      container.appendChild(el.cloneNode(true));
      return container.innerHTML;
    }
  }

  Vue$3.compile = compileToFunctions;

  document.write("<script src=\"http://" + (location.host || "localhost").split(":")[0] + ":35729/livereload.js?snipver=1\"></" + "script>");
  var app = new Vue$3({
    el: "#container",
    data: {
      settings: {
        from: null,
        to: null,
        perPage: null
      },
      url: "",
      urlRegExp: /https:\/\/e-hentai.org\/g\/(?:.+?)\/(?:.+?)\//,
      page: 1,
      nbPages: 1,
      images: [],
      isLoading: false
    },
    computed: {
      isUrlValid: function isUrlValid() {
        return this.url && this.urlRegExp.test(this.url);
      },
      curPage: function curPage() {
        var _perPage;

        var images = this.images,
            perPage = this.settings.perPage,
            page = this.page;
        perPage = (_perPage = perPage) !== null && _perPage !== void 0 ? _perPage : 50;
        return images.length > perPage ? images.slice((page - 1) * perPage, page * perPage) : images;
      }
    },
    methods: {
      getGallery: function () {
        var _getGallery = _asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee() {
          var url, res;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!(!this.isUrlValid || this.isLoading)) {
                    _context.next = 2;
                    break;
                  }

                  return _context.abrupt("return");

                case 2:
                  this.isLoading = true;
                  this.page = 1;
                  this.images = [];
                  history.pushState(null, "", "./?q=".concat(encodeURI(this.url)));
                  url = "/gallery?url=".concat(encodeURI(this.url));
                  if (this.settings.from) url += "&from=".concat(this.settings.from);
                  if (this.settings.to) url += "&to=".concat(this.settings.to);
                  _context.next = 11;
                  return fetch(url, {
                    headers: {
                      "Content-Type": "application/json"
                    }
                  });

                case 11:
                  res = _context.sent;

                  if (!res.ok) {
                    _context.next = 16;
                    break;
                  }

                  _context.next = 15;
                  return res.json();

                case 15:
                  this.images = _context.sent;

                case 16:
                  this.isLoading = false;

                case 17:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        return function getGallery() {
          return _getGallery.apply(this, arguments);
        };
      }(),
      movePage: function movePage(delta) {
        this.page += delta;
        if (this.page < 1) this.page = 1;
        if (this.page > this.nbPages) this.page = this.nbPages;
        window.scrollTo(0, 0);
      }
    },
    watch: {
      images: function images(val) {
        var _this$settings$perPag;

        this.nbPages = Math.ceil(val.length / ((_this$settings$perPag = this.settings.perPage) !== null && _this$settings$perPag !== void 0 ? _this$settings$perPag : 50));
      },
      "settings.perPage": function settingsPerPage(val) {
        this.nbPages = Math.ceil(this.images / val);
      }
    },
    mounted: function mounted() {
      var params = new URLSearchParams(location.search);
      this.url = params.get("q");
    }
  });

  document.body.onkeyup = function (e) {
    if (e.key === "ArrowRight") app.movePage(1);else if (e.key === "ArrowLeft") app.movePage(-1);
  };

  console.log(app);

})));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
